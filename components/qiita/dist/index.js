parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"NtAQ":[function(require,module,exports) {
var global = arguments[3];
var t=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=Object.freeze({});function n(t){return null==t}function r(t){return null!=t}function o(t){return!0===t}function i(t){return!1===t}function a(t){return"string"==typeof t||"number"==typeof t||"symbol"==typeof t||"boolean"==typeof t}function s(t){return null!==t&&"object"==typeof t}var c=Object.prototype.toString;function u(t){return c.call(t).slice(8,-1)}function l(t){return"[object Object]"===c.call(t)}function f(t){return"[object RegExp]"===c.call(t)}function p(t){var e=parseFloat(String(t));return e>=0&&Math.floor(e)===e&&isFinite(t)}function d(t){return r(t)&&"function"==typeof t.then&&"function"==typeof t.catch}function v(t){return null==t?"":Array.isArray(t)||l(t)&&t.toString===c?JSON.stringify(t,null,2):String(t)}function h(t){var e=parseFloat(t);return isNaN(e)?t:e}function m(t,e){for(var n=Object.create(null),r=t.split(","),o=0;o<r.length;o++)n[r[o]]=!0;return e?function(t){return n[t.toLowerCase()]}:function(t){return n[t]}}var y=m("slot,component",!0),g=m("key,ref,slot,slot-scope,is");function _(t,e){if(t.length){var n=t.indexOf(e);if(n>-1)return t.splice(n,1)}}var b=Object.prototype.hasOwnProperty;function C(t,e){return b.call(t,e)}function w(t){var e=Object.create(null);return function(n){return e[n]||(e[n]=t(n))}}var $=/-(\w)/g,A=w(function(t){return t.replace($,function(t,e){return e?e.toUpperCase():""})}),x=w(function(t){return t.charAt(0).toUpperCase()+t.slice(1)}),O=/\B([A-Z])/g,k=w(function(t){return t.replace(O,"-$1").toLowerCase()});function S(t,e){function n(n){var r=arguments.length;return r?r>1?t.apply(e,arguments):t.call(e,n):t.call(e)}return n._length=t.length,n}function j(t,e){return t.bind(e)}var E=Function.prototype.bind?j:S;function T(t,e){e=e||0;for(var n=t.length-e,r=new Array(n);n--;)r[n]=t[n+e];return r}function I(t,e){for(var n in e)t[n]=e[n];return t}function D(t){for(var e={},n=0;n<t.length;n++)t[n]&&I(e,t[n]);return e}function N(t,e,n){}var L=function(t,e,n){return!1},P=function(t){return t};function M(t,e){if(t===e)return!0;var n=s(t),r=s(e);if(!n||!r)return!n&&!r&&String(t)===String(e);try{var o=Array.isArray(t),i=Array.isArray(e);if(o&&i)return t.length===e.length&&t.every(function(t,n){return M(t,e[n])});if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(o||i)return!1;var a=Object.keys(t),c=Object.keys(e);return a.length===c.length&&a.every(function(n){return M(t[n],e[n])})}catch(u){return!1}}function F(t,e){for(var n=0;n<t.length;n++)if(M(t[n],e))return n;return-1}function R(t){var e=!1;return function(){e||(e=!0,t.apply(this,arguments))}}var H="data-server-rendered",U=["component","directive","filter"],B=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],z={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:L,isReservedAttr:L,isUnknownElement:L,getTagNamespace:N,parsePlatformTagName:P,mustUseProp:L,async:!0,_lifecycleHooks:B},V=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function W(t){var e=(t+"").charCodeAt(0);return 36===e||95===e}function q(t,e,n,r){Object.defineProperty(t,e,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var K=new RegExp("[^"+V.source+".$_\\d]");function X(t){if(!K.test(t)){var e=t.split(".");return function(t){for(var n=0;n<e.length;n++){if(!t)return;t=t[e[n]]}return t}}}var G,Z="__proto__"in{},J="undefined"!=typeof window,Q="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,Y=Q&&WXEnvironment.platform.toLowerCase(),tt=J&&window.navigator.userAgent.toLowerCase(),et=tt&&/msie|trident/.test(tt),nt=tt&&tt.indexOf("msie 9.0")>0,rt=tt&&tt.indexOf("edge/")>0,ot=tt&&tt.indexOf("android")>0||"android"===Y,it=tt&&/iphone|ipad|ipod|ios/.test(tt)||"ios"===Y,at=tt&&/chrome\/\d+/.test(tt)&&!rt,st=tt&&/phantomjs/.test(tt),ct=tt&&tt.match(/firefox\/(\d+)/),ut={}.watch,lt=!1;if(J)try{var ft={};Object.defineProperty(ft,"passive",{get:function(){lt=!0}}),window.addEventListener("test-passive",null,ft)}catch(as){}var pt=function(){return void 0===G&&(G=!J&&!Q&&void 0!==t&&(t.process&&"server"===t.process.env.VUE_ENV)),G},dt=J&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function vt(t){return"function"==typeof t&&/native code/.test(t.toString())}var ht,mt="undefined"!=typeof Symbol&&vt(Symbol)&&"undefined"!=typeof Reflect&&vt(Reflect.ownKeys);ht="undefined"!=typeof Set&&vt(Set)?Set:function(){function t(){this.set=Object.create(null)}return t.prototype.has=function(t){return!0===this.set[t]},t.prototype.add=function(t){this.set[t]=!0},t.prototype.clear=function(){this.set=Object.create(null)},t}();var yt,gt,_t,bt,Ct=N,wt=N,$t=N,At=N,xt=0,Ot=function(){this.id=xt++,this.subs=[]};Ot.prototype.addSub=function(t){this.subs.push(t)},Ot.prototype.removeSub=function(t){_(this.subs,t)},Ot.prototype.depend=function(){Ot.target&&Ot.target.addDep(this)},Ot.prototype.notify=function(){var t=this.subs.slice();for(var e=0,n=t.length;e<n;e++)t[e].update()},Ot.target=null;var kt=[];function St(t){kt.push(t),Ot.target=t}function jt(){kt.pop(),Ot.target=kt[kt.length-1]}var Et=function(t,e,n,r,o,i,a,s){this.tag=t,this.data=e,this.children=n,this.text=r,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},Tt={child:{configurable:!0}};Tt.child.get=function(){return this.componentInstance},Object.defineProperties(Et.prototype,Tt);var It=function(t){void 0===t&&(t="");var e=new Et;return e.text=t,e.isComment=!0,e};function Dt(t){return new Et(void 0,void 0,void 0,String(t))}function Nt(t){var e=new Et(t.tag,t.data,t.children&&t.children.slice(),t.text,t.elm,t.context,t.componentOptions,t.asyncFactory);return e.ns=t.ns,e.isStatic=t.isStatic,e.key=t.key,e.isComment=t.isComment,e.fnContext=t.fnContext,e.fnOptions=t.fnOptions,e.fnScopeId=t.fnScopeId,e.asyncMeta=t.asyncMeta,e.isCloned=!0,e}var Lt=Array.prototype,Pt=Object.create(Lt),Mt=["push","pop","shift","unshift","splice","sort","reverse"];Mt.forEach(function(t){var e=Lt[t];q(Pt,t,function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var o,i=e.apply(this,n),a=this.__ob__;switch(t){case"push":case"unshift":o=n;break;case"splice":o=n.slice(2)}return o&&a.observeArray(o),a.dep.notify(),i})});var Ft=Object.getOwnPropertyNames(Pt),Rt=!0;function Ht(t){Rt=t}var Ut=function(t){this.value=t,this.dep=new Ot,this.vmCount=0,q(t,"__ob__",this),Array.isArray(t)?(Z?Bt(t,Pt):zt(t,Pt,Ft),this.observeArray(t)):this.walk(t)};function Bt(t,e){t.__proto__=e}function zt(t,e,n){for(var r=0,o=n.length;r<o;r++){var i=n[r];q(t,i,e[i])}}function Vt(t,e){var n;if(s(t)&&!(t instanceof Et))return C(t,"__ob__")&&t.__ob__ instanceof Ut?n=t.__ob__:Rt&&!pt()&&(Array.isArray(t)||l(t))&&Object.isExtensible(t)&&!t._isVue&&(n=new Ut(t)),e&&n&&n.vmCount++,n}function Wt(t,e,n,r,o){var i=new Ot,a=Object.getOwnPropertyDescriptor(t,e);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set;s&&!c||2!==arguments.length||(n=t[e]);var u=!o&&Vt(n);Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(t):n;return Ot.target&&(i.depend(),u&&(u.dep.depend(),Array.isArray(e)&&Xt(e))),e},set:function(e){var r=s?s.call(t):n;e===r||e!=e&&r!=r||s&&!c||(c?c.call(t,e):n=e,u=!o&&Vt(e),i.notify())}})}}function qt(t,e,n){if(Array.isArray(t)&&p(e))return t.length=Math.max(t.length,e),t.splice(e,1,n),n;if(e in t&&!(e in Object.prototype))return t[e]=n,n;var r=t.__ob__;return t._isVue||r&&r.vmCount?n:r?(Wt(r.value,e,n),r.dep.notify(),n):(t[e]=n,n)}function Kt(t,e){if(Array.isArray(t)&&p(e))t.splice(e,1);else{var n=t.__ob__;t._isVue||n&&n.vmCount||C(t,e)&&(delete t[e],n&&n.dep.notify())}}function Xt(t){for(var e=void 0,n=0,r=t.length;n<r;n++)(e=t[n])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&Xt(e)}Ut.prototype.walk=function(t){for(var e=Object.keys(t),n=0;n<e.length;n++)Wt(t,e[n])},Ut.prototype.observeArray=function(t){for(var e=0,n=t.length;e<n;e++)Vt(t[e])};var Gt=z.optionMergeStrategies;function Zt(t,e){if(!e)return t;for(var n,r,o,i=mt?Reflect.ownKeys(e):Object.keys(e),a=0;a<i.length;a++)"__ob__"!==(n=i[a])&&(r=t[n],o=e[n],C(t,n)?r!==o&&l(r)&&l(o)&&Zt(r,o):qt(t,n,o));return t}function Jt(t,e,n){return n?function(){var r="function"==typeof e?e.call(n,n):e,o="function"==typeof t?t.call(n,n):t;return r?Zt(r,o):o}:e?t?function(){return Zt("function"==typeof e?e.call(this,this):e,"function"==typeof t?t.call(this,this):t)}:e:t}function Qt(t,e){var n=e?t?t.concat(e):Array.isArray(e)?e:[e]:t;return n?Yt(n):n}function Yt(t){for(var e=[],n=0;n<t.length;n++)-1===e.indexOf(t[n])&&e.push(t[n]);return e}function te(t,e,n,r){var o=Object.create(t||null);return e?I(o,e):o}Gt.data=function(t,e,n){return n?Jt(t,e,n):e&&"function"!=typeof e?t:Jt(t,e)},B.forEach(function(t){Gt[t]=Qt}),U.forEach(function(t){Gt[t+"s"]=te}),Gt.watch=function(t,e,n,r){if(t===ut&&(t=void 0),e===ut&&(e=void 0),!e)return Object.create(t||null);if(!t)return e;var o={};for(var i in I(o,t),e){var a=o[i],s=e[i];a&&!Array.isArray(a)&&(a=[a]),o[i]=a?a.concat(s):Array.isArray(s)?s:[s]}return o},Gt.props=Gt.methods=Gt.inject=Gt.computed=function(t,e,n,r){if(!t)return e;var o=Object.create(null);return I(o,t),e&&I(o,e),o},Gt.provide=Jt;var ee=function(t,e){return void 0===e?t:e};function ne(t){for(var e in t.components)re(e)}function re(t){new RegExp("^[a-zA-Z][\\-\\.0-9_"+V.source+"]*$").test(t)||Ct('Invalid component name: "'+t+'". Component names should conform to valid custom element name in html5 specification.'),(y(t)||z.isReservedTag(t))&&Ct("Do not use built-in or reserved HTML elements as component id: "+t)}function oe(t,e){var n=t.props;if(n){var r,o,i={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(o=n[r])&&(i[A(o)]={type:null});else if(l(n))for(var a in n)o=n[a],i[A(a)]=l(o)?o:{type:o};else 0;t.props=i}}function ie(t,e){var n=t.inject;if(n){var r=t.inject={};if(Array.isArray(n))for(var o=0;o<n.length;o++)r[n[o]]={from:n[o]};else if(l(n))for(var i in n){var a=n[i];r[i]=l(a)?I({from:i},a):{from:a}}else 0}}function ae(t){var e=t.directives;if(e)for(var n in e){var r=e[n];"function"==typeof r&&(e[n]={bind:r,update:r})}}function se(t,e,n){l(e)||Ct('Invalid value for option "'+t+'": expected an Object, but got '+u(e)+".",n)}function ce(t,e,n){if("function"==typeof e&&(e=e.options),oe(e,n),ie(e,n),ae(e),!e._base&&(e.extends&&(t=ce(t,e.extends,n)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)t=ce(t,e.mixins[r],n);var i,a={};for(i in t)s(i);for(i in e)C(t,i)||s(i);function s(r){var o=Gt[r]||ee;a[r]=o(t[r],e[r],n,r)}return a}function ue(t,e,n,r){if("string"==typeof n){var o=t[e];if(C(o,n))return o[n];var i=A(n);if(C(o,i))return o[i];var a=x(i);if(C(o,a))return o[a];var s=o[n]||o[i]||o[a];return s}}function le(t,e,n,r){var o=e[t],i=!C(n,t),a=n[t],s=ye(Boolean,o.type);if(s>-1)if(i&&!C(o,"default"))a=!1;else if(""===a||a===k(t)){var c=ye(String,o.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=fe(r,o,t);var u=Rt;Ht(!0),Vt(a),Ht(u)}return a}function fe(t,e,n){if(C(e,"default")){var r=e.default;return t&&t.$options.propsData&&void 0===t.$options.propsData[n]&&void 0!==t._props[n]?t._props[n]:"function"==typeof r&&"Function"!==he(e.type)?r.call(t):r}}function pe(t,e,n,r,o){if(t.required&&o)Ct('Missing required prop: "'+e+'"',r);else if(null!=n||t.required){var i=t.type,a=!i||!0===i,s=[];if(i){Array.isArray(i)||(i=[i]);for(var c=0;c<i.length&&!a;c++){var u=ve(n,i[c]);s.push(u.expectedType||""),a=u.valid}}if(a){var l=t.validator;l&&(l(n)||Ct('Invalid prop: custom validator check failed for prop "'+e+'".',r))}else Ct(ge(e,n,s),r)}}var de=/^(String|Number|Boolean|Function|Symbol)$/;function ve(t,e){var n,r=he(e);if(de.test(r)){var o=typeof t;(n=o===r.toLowerCase())||"object"!==o||(n=t instanceof e)}else n="Object"===r?l(t):"Array"===r?Array.isArray(t):t instanceof e;return{valid:n,expectedType:r}}function he(t){var e=t&&t.toString().match(/^\s*function (\w+)/);return e?e[1]:""}function me(t,e){return he(t)===he(e)}function ye(t,e){if(!Array.isArray(e))return me(e,t)?0:-1;for(var n=0,r=e.length;n<r;n++)if(me(e[n],t))return n;return-1}function ge(t,e,n){var r='Invalid prop: type check failed for prop "'+t+'". Expected '+n.map(x).join(", "),o=n[0],i=u(e),a=_e(e,o),s=_e(e,i);return 1===n.length&&be(o)&&!Ce(o,i)&&(r+=" with value "+a),r+=", got "+i+" ",be(i)&&(r+="with value "+s+"."),r}function _e(t,e){return"String"===e?'"'+t+'"':"Number"===e?""+Number(t):""+t}function be(t){return["string","number","boolean"].some(function(e){return t.toLowerCase()===e})}function Ce(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];return t.some(function(t){return"boolean"===t.toLowerCase()})}function we(t,e,n){St();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(r,t,e,n))return}catch(as){Ae(as,r,"errorCaptured hook")}}Ae(t,e,n)}finally{jt()}}function $e(t,e,n,r,o){var i;try{(i=n?t.apply(e,n):t.call(e))&&!i._isVue&&d(i)&&!i._handled&&(i.catch(function(t){return we(t,r,o+" (Promise/async)")}),i._handled=!0)}catch(as){we(as,r,o)}return i}function Ae(t,e,n){if(z.errorHandler)try{return z.errorHandler.call(null,t,e,n)}catch(as){as!==t&&xe(as,null,"config.errorHandler")}xe(t,e,n)}function xe(t,e,n){if(!J&&!Q||"undefined"==typeof console)throw t;console.error(t)}var Oe,ke,Se,je,Ee,Te,Ie,De,Ne,Le=!1,Pe=[],Me=!1;function Fe(){Me=!1;var t=Pe.slice(0);Pe.length=0;for(var e=0;e<t.length;e++)t[e]()}if("undefined"!=typeof Promise&&vt(Promise)){var Re=Promise.resolve();Oe=function(){Re.then(Fe),it&&setTimeout(N)},Le=!0}else if(et||"undefined"==typeof MutationObserver||!vt(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Oe="undefined"!=typeof setImmediate&&vt(setImmediate)?function(){setImmediate(Fe)}:function(){setTimeout(Fe,0)};else{var He=1,Ue=new MutationObserver(Fe),Be=document.createTextNode(String(He));Ue.observe(Be,{characterData:!0}),Oe=function(){He=(He+1)%2,Be.data=String(He)},Le=!0}function ze(t,e){var n;if(Pe.push(function(){if(t)try{t.call(e)}catch(as){we(as,e,"nextTick")}else n&&n(e)}),Me||(Me=!0,Oe()),!t&&"undefined"!=typeof Promise)return new Promise(function(t){n=t})}var Ve,We,qe,Ke=new ht;function Xe(t){Ge(t,Ke),Ke.clear()}function Ge(t,e){var n,r,o=Array.isArray(t);if(!(!o&&!s(t)||Object.isFrozen(t)||t instanceof Et)){if(t.__ob__){var i=t.__ob__.dep.id;if(e.has(i))return;e.add(i)}if(o)for(n=t.length;n--;)Ge(t[n],e);else for(n=(r=Object.keys(t)).length;n--;)Ge(t[r[n]],e)}}var Ze=w(function(t){var e="&"===t.charAt(0),n="~"===(t=e?t.slice(1):t).charAt(0),r="!"===(t=n?t.slice(1):t).charAt(0);return{name:t=r?t.slice(1):t,once:n,capture:r,passive:e}});function Je(t,e){function n(){var t=arguments,r=n.fns;if(!Array.isArray(r))return $e(r,null,arguments,e,"v-on handler");for(var o=r.slice(),i=0;i<o.length;i++)$e(o[i],null,t,e,"v-on handler")}return n.fns=t,n}function Qe(t,e,r,i,a,s){var c,u,l,f;for(c in t)u=t[c],l=e[c],f=Ze(c),n(u)||(n(l)?(n(u.fns)&&(u=t[c]=Je(u,s)),o(f.once)&&(u=t[c]=a(f.name,u,f.capture)),r(f.name,u,f.capture,f.passive,f.params)):u!==l&&(l.fns=u,t[c]=l));for(c in e)n(t[c])&&i((f=Ze(c)).name,e[c],f.capture)}function Ye(t,e,i){var a;t instanceof Et&&(t=t.data.hook||(t.data.hook={}));var s=t[e];function c(){i.apply(this,arguments),_(a.fns,c)}n(s)?a=Je([c]):r(s.fns)&&o(s.merged)?(a=s).fns.push(c):a=Je([s,c]),a.merged=!0,t[e]=a}function tn(t,e,o){var i=e.options.props;if(!n(i)){var a={},s=t.attrs,c=t.props;if(r(s)||r(c))for(var u in i){var l=k(u);en(a,c,u,l,!0)||en(a,s,u,l,!1)}return a}}function en(t,e,n,o,i){if(r(e)){if(C(e,n))return t[n]=e[n],i||delete e[n],!0;if(C(e,o))return t[n]=e[o],i||delete e[o],!0}return!1}function nn(t){for(var e=0;e<t.length;e++)if(Array.isArray(t[e]))return Array.prototype.concat.apply([],t);return t}function rn(t){return a(t)?[Dt(t)]:Array.isArray(t)?an(t):void 0}function on(t){return r(t)&&r(t.text)&&i(t.isComment)}function an(t,e){var i,s,c,u,l=[];for(i=0;i<t.length;i++)n(s=t[i])||"boolean"==typeof s||(u=l[c=l.length-1],Array.isArray(s)?s.length>0&&(on((s=an(s,(e||"")+"_"+i))[0])&&on(u)&&(l[c]=Dt(u.text+s[0].text),s.shift()),l.push.apply(l,s)):a(s)?on(u)?l[c]=Dt(u.text+s):""!==s&&l.push(Dt(s)):on(s)&&on(u)?l[c]=Dt(u.text+s.text):(o(t._isVList)&&r(s.tag)&&n(s.key)&&r(e)&&(s.key="__vlist"+e+"_"+i+"__"),l.push(s)));return l}function sn(t){var e=t.$options.provide;e&&(t._provided="function"==typeof e?e.call(t):e)}function cn(t){var e=un(t.$options.inject,t);e&&(Ht(!1),Object.keys(e).forEach(function(n){Wt(t,n,e[n])}),Ht(!0))}function un(t,e){if(t){for(var n=Object.create(null),r=mt?Reflect.ownKeys(t):Object.keys(t),o=0;o<r.length;o++){var i=r[o];if("__ob__"!==i){for(var a=t[i].from,s=e;s;){if(s._provided&&C(s._provided,a)){n[i]=s._provided[a];break}s=s.$parent}if(!s)if("default"in t[i]){var c=t[i].default;n[i]="function"==typeof c?c.call(e):c}else 0}}return n}}function ln(t,e){if(!t||!t.length)return{};for(var n={},r=0,o=t.length;r<o;r++){var i=t[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==e&&i.fnContext!==e||!a||null==a.slot)(n.default||(n.default=[])).push(i);else{var s=a.slot,c=n[s]||(n[s]=[]);"template"===i.tag?c.push.apply(c,i.children||[]):c.push(i)}}for(var u in n)n[u].every(fn)&&delete n[u];return n}function fn(t){return t.isComment&&!t.asyncFactory||" "===t.text}function pn(t,n,r){var o,i=Object.keys(n).length>0,a=t?!!t.$stable:!i,s=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(a&&r&&r!==e&&s===r.$key&&!i&&!r.$hasNormal)return r;for(var c in o={},t)t[c]&&"$"!==c[0]&&(o[c]=dn(n,c,t[c]))}else o={};for(var u in n)u in o||(o[u]=vn(n,u));return t&&Object.isExtensible(t)&&(t._normalized=o),q(o,"$stable",a),q(o,"$key",s),q(o,"$hasNormal",i),o}function dn(t,e,n){var r=function(){var t=arguments.length?n.apply(null,arguments):n({});return(t=t&&"object"==typeof t&&!Array.isArray(t)?[t]:rn(t))&&(0===t.length||1===t.length&&t[0].isComment)?void 0:t};return n.proxy&&Object.defineProperty(t,e,{get:r,enumerable:!0,configurable:!0}),r}function vn(t,e){return function(){return t[e]}}function hn(t,e){var n,o,i,a,c;if(Array.isArray(t)||"string"==typeof t)for(n=new Array(t.length),o=0,i=t.length;o<i;o++)n[o]=e(t[o],o);else if("number"==typeof t)for(n=new Array(t),o=0;o<t;o++)n[o]=e(o+1,o);else if(s(t))if(mt&&t[Symbol.iterator]){n=[];for(var u=t[Symbol.iterator](),l=u.next();!l.done;)n.push(e(l.value,n.length)),l=u.next()}else for(a=Object.keys(t),n=new Array(a.length),o=0,i=a.length;o<i;o++)c=a[o],n[o]=e(t[c],c,o);return r(n)||(n=[]),n._isVList=!0,n}function mn(t,e,n,r){var o,i=this.$scopedSlots[t];i?(n=n||{},r&&(n=I(I({},r),n)),o=i(n)||e):o=this.$slots[t]||e;var a=n&&n.slot;return a?this.$createElement("template",{slot:a},o):o}function yn(t){return ue(this.$options,"filters",t,!0)||P}function gn(t,e){return Array.isArray(t)?-1===t.indexOf(e):t!==e}function _n(t,e,n,r,o){var i=z.keyCodes[e]||n;return o&&r&&!z.keyCodes[e]?gn(o,r):i?gn(i,t):r?k(r)!==e:void 0}function bn(t,e,n,r,o){if(n)if(s(n)){var i;Array.isArray(n)&&(n=D(n));var a=function(a){if("class"===a||"style"===a||g(a))i=t;else{var s=t.attrs&&t.attrs.type;i=r||z.mustUseProp(e,s,a)?t.domProps||(t.domProps={}):t.attrs||(t.attrs={})}var c=A(a),u=k(a);c in i||u in i||(i[a]=n[a],o&&((t.on||(t.on={}))["update:"+a]=function(t){n[a]=t}))};for(var c in n)a(c)}else;return t}function Cn(t,e){var n=this._staticTrees||(this._staticTrees=[]),r=n[t];return r&&!e?r:($n(r=n[t]=this.$options.staticRenderFns[t].call(this._renderProxy,null,this),"__static__"+t,!1),r)}function wn(t,e,n){return $n(t,"__once__"+e+(n?"_"+n:""),!0),t}function $n(t,e,n){if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]&&"string"!=typeof t[r]&&An(t[r],e+"_"+r,n);else An(t,e,n)}function An(t,e,n){t.isStatic=!0,t.key=e,t.isOnce=n}function xn(t,e){if(e)if(l(e)){var n=t.on=t.on?I({},t.on):{};for(var r in e){var o=n[r],i=e[r];n[r]=o?[].concat(o,i):i}}else;return t}function On(t,e,n,r){e=e||{$stable:!n};for(var o=0;o<t.length;o++){var i=t[o];Array.isArray(i)?On(i,e,n):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return r&&(e.$key=r),e}function kn(t,e){for(var n=0;n<e.length;n+=2){var r=e[n];"string"==typeof r&&r&&(t[e[n]]=e[n+1])}return t}function Sn(t,e){return"string"==typeof t?e+t:t}function jn(t){t._o=wn,t._n=h,t._s=v,t._l=hn,t._t=mn,t._q=M,t._i=F,t._m=Cn,t._f=yn,t._k=_n,t._b=bn,t._v=Dt,t._e=It,t._u=On,t._g=xn,t._d=kn,t._p=Sn}function En(t,n,r,i,a){var s,c=this,u=a.options;C(i,"_uid")?(s=Object.create(i))._original=i:(s=i,i=i._original);var l=o(u._compiled),f=!l;this.data=t,this.props=n,this.children=r,this.parent=i,this.listeners=t.on||e,this.injections=un(u.inject,i),this.slots=function(){return c.$slots||pn(t.scopedSlots,c.$slots=ln(r,i)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return pn(t.scopedSlots,this.slots())}}),l&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=pn(t.scopedSlots,this.$slots)),u._scopeId?this._c=function(t,e,n,r){var o=zn(s,t,e,n,r,f);return o&&!Array.isArray(o)&&(o.fnScopeId=u._scopeId,o.fnContext=i),o}:this._c=function(t,e,n,r){return zn(s,t,e,n,r,f)}}function Tn(t,n,o,i,a){var s=t.options,c={},u=s.props;if(r(u))for(var l in u)c[l]=le(l,u,n||e);else r(o.attrs)&&Dn(c,o.attrs),r(o.props)&&Dn(c,o.props);var f=new En(o,c,a,i,t),p=s.render.call(null,f._c,f);if(p instanceof Et)return In(p,o,f.parent,s,f);if(Array.isArray(p)){for(var d=rn(p)||[],v=new Array(d.length),h=0;h<d.length;h++)v[h]=In(d[h],o,f.parent,s,f);return v}}function In(t,e,n,r,o){var i=Nt(t);return i.fnContext=n,i.fnOptions=r,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function Dn(t,e){for(var n in e)t[A(n)]=e[n]}jn(En.prototype);var Nn={init:function(t,e){if(t.componentInstance&&!t.componentInstance._isDestroyed&&t.data.keepAlive){var n=t;Nn.prepatch(n,n)}else{(t.componentInstance=Mn(t,cr)).$mount(e?t.elm:void 0,e)}},prepatch:function(t,e){var n=e.componentOptions;vr(e.componentInstance=t.componentInstance,n.propsData,n.listeners,e,n.children)},insert:function(t){var e=t.context,n=t.componentInstance;n._isMounted||(n._isMounted=!0,gr(n,"mounted")),t.data.keepAlive&&(e._isMounted?Dr(n):mr(n,!0))},destroy:function(t){var e=t.componentInstance;e._isDestroyed||(t.data.keepAlive?yr(e,!0):e.$destroy())}},Ln=Object.keys(Nn);function Pn(t,e,i,a,c){if(!n(t)){var u=i.$options._base;if(s(t)&&(t=u.extend(t)),"function"==typeof t){var l;if(n(t.cid)&&void 0===(t=Yn(l=t,u)))return Qn(l,e,i,a,c);e=e||{},no(t),r(e.model)&&Hn(t.options,e);var f=tn(e,t,c);if(o(t.options.functional))return Tn(t,f,e,i,a);var p=e.on;if(e.on=e.nativeOn,o(t.options.abstract)){var d=e.slot;e={},d&&(e.slot=d)}Fn(e);var v=t.options.name||c;return new Et("vue-component-"+t.cid+(v?"-"+v:""),e,void 0,void 0,void 0,i,{Ctor:t,propsData:f,listeners:p,tag:c,children:a},l)}}}function Mn(t,e){var n={_isComponent:!0,_parentVnode:t,parent:e},o=t.data.inlineTemplate;return r(o)&&(n.render=o.render,n.staticRenderFns=o.staticRenderFns),new t.componentOptions.Ctor(n)}function Fn(t){for(var e=t.hook||(t.hook={}),n=0;n<Ln.length;n++){var r=Ln[n],o=e[r],i=Nn[r];o===i||o&&o._merged||(e[r]=o?Rn(i,o):i)}}function Rn(t,e){var n=function(n,r){t(n,r),e(n,r)};return n._merged=!0,n}function Hn(t,e){var n=t.model&&t.model.prop||"value",o=t.model&&t.model.event||"input";(e.attrs||(e.attrs={}))[n]=e.model.value;var i=e.on||(e.on={}),a=i[o],s=e.model.callback;r(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(i[o]=[s].concat(a)):i[o]=s}var Un=1,Bn=2;function zn(t,e,n,r,i,s){return(Array.isArray(n)||a(n))&&(i=r,r=n,n=void 0),o(s)&&(i=Bn),Vn(t,e,n,r,i)}function Vn(t,e,n,o,i){if(r(n)&&r(n.__ob__))return It();if(r(n)&&r(n.is)&&(e=n.is),!e)return It();var a,s,c;(Array.isArray(o)&&"function"==typeof o[0]&&((n=n||{}).scopedSlots={default:o[0]},o.length=0),i===Bn?o=rn(o):i===Un&&(o=nn(o)),"string"==typeof e)?(s=t.$vnode&&t.$vnode.ns||z.getTagNamespace(e),a=z.isReservedTag(e)?new Et(z.parsePlatformTagName(e),n,o,void 0,void 0,t):n&&n.pre||!r(c=ue(t.$options,"components",e))?new Et(e,n,o,void 0,void 0,t):Pn(c,n,t,o,e)):a=Pn(e,n,t,o);return Array.isArray(a)?a:r(a)?(r(s)&&Wn(a,s),r(n)&&qn(n),a):It()}function Wn(t,e,i){if(t.ns=e,"foreignObject"===t.tag&&(e=void 0,i=!0),r(t.children))for(var a=0,s=t.children.length;a<s;a++){var c=t.children[a];r(c.tag)&&(n(c.ns)||o(i)&&"svg"!==c.tag)&&Wn(c,e,i)}}function qn(t){s(t.style)&&Xe(t.style),s(t.class)&&Xe(t.class)}function Kn(t){t._vnode=null,t._staticTrees=null;var n=t.$options,r=t.$vnode=n._parentVnode,o=r&&r.context;t.$slots=ln(n._renderChildren,o),t.$scopedSlots=e,t._c=function(e,n,r,o){return zn(t,e,n,r,o,!1)},t.$createElement=function(e,n,r,o){return zn(t,e,n,r,o,!0)};var i=r&&r.data;Wt(t,"$attrs",i&&i.attrs||e,null,!0),Wt(t,"$listeners",n._parentListeners||e,null,!0)}var Xn,Gn=null;function Zn(t){jn(t.prototype),t.prototype.$nextTick=function(t){return ze(t,this)},t.prototype._render=function(){var t,e=this,n=e.$options,r=n.render,o=n._parentVnode;o&&(e.$scopedSlots=pn(o.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=o;try{Gn=e,t=r.call(e._renderProxy,e.$createElement)}catch(as){we(as,e,"render"),t=e._vnode}finally{Gn=null}return Array.isArray(t)&&1===t.length&&(t=t[0]),t instanceof Et||(t=It()),t.parent=o,t}}function Jn(t,e){return(t.__esModule||mt&&"Module"===t[Symbol.toStringTag])&&(t=t.default),s(t)?e.extend(t):t}function Qn(t,e,n,r,o){var i=It();return i.asyncFactory=t,i.asyncMeta={data:e,context:n,children:r,tag:o},i}function Yn(t,e){if(o(t.error)&&r(t.errorComp))return t.errorComp;if(r(t.resolved))return t.resolved;var i=Gn;if(i&&r(t.owners)&&-1===t.owners.indexOf(i)&&t.owners.push(i),o(t.loading)&&r(t.loadingComp))return t.loadingComp;if(i&&!r(t.owners)){var a=t.owners=[i],c=!0,u=null,l=null;i.$on("hook:destroyed",function(){return _(a,i)});var f=function(t){for(var e=0,n=a.length;e<n;e++)a[e].$forceUpdate();t&&(a.length=0,null!==u&&(clearTimeout(u),u=null),null!==l&&(clearTimeout(l),l=null))},p=R(function(n){t.resolved=Jn(n,e),c?a.length=0:f(!0)}),v=R(function(e){r(t.errorComp)&&(t.error=!0,f(!0))}),h=t(p,v);return s(h)&&(d(h)?n(t.resolved)&&h.then(p,v):d(h.component)&&(h.component.then(p,v),r(h.error)&&(t.errorComp=Jn(h.error,e)),r(h.loading)&&(t.loadingComp=Jn(h.loading,e),0===h.delay?t.loading=!0:u=setTimeout(function(){u=null,n(t.resolved)&&n(t.error)&&(t.loading=!0,f(!1))},h.delay||200)),r(h.timeout)&&(l=setTimeout(function(){l=null,n(t.resolved)&&v(null)},h.timeout)))),c=!1,t.loading?t.loadingComp:t.resolved}}function tr(t){return t.isComment&&t.asyncFactory}function er(t){if(Array.isArray(t))for(var e=0;e<t.length;e++){var n=t[e];if(r(n)&&(r(n.componentOptions)||tr(n)))return n}}function nr(t){t._events=Object.create(null),t._hasHookEvent=!1;var e=t.$options._parentListeners;e&&ar(t,e)}function rr(t,e){Xn.$on(t,e)}function or(t,e){Xn.$off(t,e)}function ir(t,e){var n=Xn;return function r(){null!==e.apply(null,arguments)&&n.$off(t,r)}}function ar(t,e,n){Xn=t,Qe(e,n||{},rr,or,ir,t),Xn=void 0}function sr(t){var e=/^hook:/;t.prototype.$on=function(t,n){var r=this;if(Array.isArray(t))for(var o=0,i=t.length;o<i;o++)r.$on(t[o],n);else(r._events[t]||(r._events[t]=[])).push(n),e.test(t)&&(r._hasHookEvent=!0);return r},t.prototype.$once=function(t,e){var n=this;function r(){n.$off(t,r),e.apply(n,arguments)}return r.fn=e,n.$on(t,r),n},t.prototype.$off=function(t,e){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(t)){for(var r=0,o=t.length;r<o;r++)n.$off(t[r],e);return n}var i,a=n._events[t];if(!a)return n;if(!e)return n._events[t]=null,n;for(var s=a.length;s--;)if((i=a[s])===e||i.fn===e){a.splice(s,1);break}return n},t.prototype.$emit=function(t){var e=this,n=e._events[t];if(n){n=n.length>1?T(n):n;for(var r=T(arguments,1),o='event handler for "'+t+'"',i=0,a=n.length;i<a;i++)$e(n[i],e,r,e,o)}return e}}var cr=null,ur=!1;function lr(t){var e=cr;return cr=t,function(){cr=e}}function fr(t){var e=t.$options,n=e.parent;if(n&&!e.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(t)}t.$parent=n,t.$root=n?n.$root:t,t.$children=[],t.$refs={},t._watcher=null,t._inactive=null,t._directInactive=!1,t._isMounted=!1,t._isDestroyed=!1,t._isBeingDestroyed=!1}function pr(t){t.prototype._update=function(t,e){var n=this,r=n.$el,o=n._vnode,i=lr(n);n._vnode=t,n.$el=o?n.__patch__(o,t):n.__patch__(n.$el,t,e,!1),i(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},t.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},t.prototype.$destroy=function(){var t=this;if(!t._isBeingDestroyed){gr(t,"beforeDestroy"),t._isBeingDestroyed=!0;var e=t.$parent;!e||e._isBeingDestroyed||t.$options.abstract||_(e.$children,t),t._watcher&&t._watcher.teardown();for(var n=t._watchers.length;n--;)t._watchers[n].teardown();t._data.__ob__&&t._data.__ob__.vmCount--,t._isDestroyed=!0,t.__patch__(t._vnode,null),gr(t,"destroyed"),t.$off(),t.$el&&(t.$el.__vue__=null),t.$vnode&&(t.$vnode.parent=null)}}}function dr(t,e,n){var r;return t.$el=e,t.$options.render||(t.$options.render=It),gr(t,"beforeMount"),r=function(){t._update(t._render(),n)},new Mr(t,r,N,{before:function(){t._isMounted&&!t._isDestroyed&&gr(t,"beforeUpdate")}},!0),n=!1,null==t.$vnode&&(t._isMounted=!0,gr(t,"mounted")),t}function vr(t,n,r,o,i){var a=o.data.scopedSlots,s=t.$scopedSlots,c=!!(a&&!a.$stable||s!==e&&!s.$stable||a&&t.$scopedSlots.$key!==a.$key),u=!!(i||t.$options._renderChildren||c);if(t.$options._parentVnode=o,t.$vnode=o,t._vnode&&(t._vnode.parent=o),t.$options._renderChildren=i,t.$attrs=o.data.attrs||e,t.$listeners=r||e,n&&t.$options.props){Ht(!1);for(var l=t._props,f=t.$options._propKeys||[],p=0;p<f.length;p++){var d=f[p],v=t.$options.props;l[d]=le(d,v,n,t)}Ht(!0),t.$options.propsData=n}r=r||e;var h=t.$options._parentListeners;t.$options._parentListeners=r,ar(t,r,h),u&&(t.$slots=ln(i,o.context),t.$forceUpdate())}function hr(t){for(;t&&(t=t.$parent);)if(t._inactive)return!0;return!1}function mr(t,e){if(e){if(t._directInactive=!1,hr(t))return}else if(t._directInactive)return;if(t._inactive||null===t._inactive){t._inactive=!1;for(var n=0;n<t.$children.length;n++)mr(t.$children[n]);gr(t,"activated")}}function yr(t,e){if(!(e&&(t._directInactive=!0,hr(t))||t._inactive)){t._inactive=!0;for(var n=0;n<t.$children.length;n++)yr(t.$children[n]);gr(t,"deactivated")}}function gr(t,e){St();var n=t.$options[e],r=e+" hook";if(n)for(var o=0,i=n.length;o<i;o++)$e(n[o],t,null,t,r);t._hasHookEvent&&t.$emit("hook:"+e),jt()}var _r=100,br=[],Cr=[],wr={},$r={},Ar=!1,xr=!1,Or=0;function kr(){Or=br.length=Cr.length=0,wr={},Ar=xr=!1}var Sr=0,jr=Date.now;if(J&&!et){var Er=window.performance;Er&&"function"==typeof Er.now&&jr()>document.createEvent("Event").timeStamp&&(jr=function(){return Er.now()})}function Tr(){var t,e;for(Sr=jr(),xr=!0,br.sort(function(t,e){return t.id-e.id}),Or=0;Or<br.length;Or++)(t=br[Or]).before&&t.before(),e=t.id,wr[e]=null,t.run();var n=Cr.slice(),r=br.slice();kr(),Nr(n),Ir(r),dt&&z.devtools&&dt.emit("flush")}function Ir(t){for(var e=t.length;e--;){var n=t[e],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&gr(r,"updated")}}function Dr(t){t._inactive=!1,Cr.push(t)}function Nr(t){for(var e=0;e<t.length;e++)t[e]._inactive=!0,mr(t[e],!0)}function Lr(t){var e=t.id;if(null==wr[e]){if(wr[e]=!0,xr){for(var n=br.length-1;n>Or&&br[n].id>t.id;)n--;br.splice(n+1,0,t)}else br.push(t);Ar||(Ar=!0,ze(Tr))}}var Pr=0,Mr=function(t,e,n,r,o){this.vm=t,o&&(t._watcher=this),t._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++Pr,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ht,this.newDepIds=new ht,this.expression="","function"==typeof e?this.getter=e:(this.getter=X(e),this.getter||(this.getter=N)),this.value=this.lazy?void 0:this.get()};Mr.prototype.get=function(){var t;St(this);var e=this.vm;try{t=this.getter.call(e,e)}catch(as){if(!this.user)throw as;we(as,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&Xe(t),jt(),this.cleanupDeps()}return t},Mr.prototype.addDep=function(t){var e=t.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(t),this.depIds.has(e)||t.addSub(this))},Mr.prototype.cleanupDeps=function(){for(var t=this.deps.length;t--;){var e=this.deps[t];this.newDepIds.has(e.id)||e.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},Mr.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():Lr(this)},Mr.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||s(t)||this.deep){var e=this.value;if(this.value=t,this.user)try{this.cb.call(this.vm,t,e)}catch(as){we(as,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,t,e)}}},Mr.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},Mr.prototype.depend=function(){for(var t=this.deps.length;t--;)this.deps[t].depend()},Mr.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||_(this.vm._watchers,this);for(var t=this.deps.length;t--;)this.deps[t].removeSub(this);this.active=!1}};var Fr={enumerable:!0,configurable:!0,get:N,set:N};function Rr(t,e,n){Fr.get=function(){return this[e][n]},Fr.set=function(t){this[e][n]=t},Object.defineProperty(t,n,Fr)}function Hr(t){t._watchers=[];var e=t.$options;e.props&&Ur(t,e.props),e.methods&&Gr(t,e.methods),e.data?Br(t):Vt(t._data={},!0),e.computed&&Wr(t,e.computed),e.watch&&e.watch!==ut&&Zr(t,e.watch)}function Ur(t,e){var n=t.$options.propsData||{},r=t._props={},o=t.$options._propKeys=[],i=!t.$parent;i||Ht(!1);var a=function(i){o.push(i);var a=le(i,e,n,t);Wt(r,i,a),i in t||Rr(t,"_props",i)};for(var s in e)a(s);Ht(!0)}function Br(t){var e=t.$options.data;l(e=t._data="function"==typeof e?zr(e,t):e||{})||(e={});for(var n=Object.keys(e),r=t.$options.props,o=(t.$options.methods,n.length);o--;){var i=n[o];0,r&&C(r,i)||W(i)||Rr(t,"_data",i)}Vt(e,!0)}function zr(t,e){St();try{return t.call(e,e)}catch(as){return we(as,e,"data()"),{}}finally{jt()}}var Vr={lazy:!0};function Wr(t,e){var n=t._computedWatchers=Object.create(null),r=pt();for(var o in e){var i=e[o],a="function"==typeof i?i:i.get;0,r||(n[o]=new Mr(t,a||N,N,Vr)),o in t||qr(t,o,i)}}function qr(t,e,n){var r=!pt();"function"==typeof n?(Fr.get=r?Kr(e):Xr(n),Fr.set=N):(Fr.get=n.get?r&&!1!==n.cache?Kr(e):Xr(n.get):N,Fr.set=n.set||N),Object.defineProperty(t,e,Fr)}function Kr(t){return function(){var e=this._computedWatchers&&this._computedWatchers[t];if(e)return e.dirty&&e.evaluate(),Ot.target&&e.depend(),e.value}}function Xr(t){return function(){return t.call(this,this)}}function Gr(t,e){t.$options.props;for(var n in e)t[n]="function"!=typeof e[n]?N:E(e[n],t)}function Zr(t,e){for(var n in e){var r=e[n];if(Array.isArray(r))for(var o=0;o<r.length;o++)Jr(t,n,r[o]);else Jr(t,n,r)}}function Jr(t,e,n,r){return l(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=t[n]),t.$watch(e,n,r)}function Qr(t){var e={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(t.prototype,"$data",e),Object.defineProperty(t.prototype,"$props",n),t.prototype.$set=qt,t.prototype.$delete=Kt,t.prototype.$watch=function(t,e,n){if(l(e))return Jr(this,t,e,n);(n=n||{}).user=!0;var r=new Mr(this,t,e,n);if(n.immediate)try{e.call(this,r.value)}catch(o){we(o,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}var Yr=0;function to(t){t.prototype._init=function(t){var e=this;e._uid=Yr++,e._isVue=!0,t&&t._isComponent?eo(e,t):e.$options=ce(no(e.constructor),t||{},e),e._renderProxy=e,e._self=e,fr(e),nr(e),Kn(e),gr(e,"beforeCreate"),cn(e),Hr(e),sn(e),gr(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}function eo(t,e){var n=t.$options=Object.create(t.constructor.options),r=e._parentVnode;n.parent=e.parent,n._parentVnode=r;var o=r.componentOptions;n.propsData=o.propsData,n._parentListeners=o.listeners,n._renderChildren=o.children,n._componentTag=o.tag,e.render&&(n.render=e.render,n.staticRenderFns=e.staticRenderFns)}function no(t){var e=t.options;if(t.super){var n=no(t.super);if(n!==t.superOptions){t.superOptions=n;var r=ro(t);r&&I(t.extendOptions,r),(e=t.options=ce(n,t.extendOptions)).name&&(e.components[e.name]=t)}}return e}function ro(t){var e,n=t.options,r=t.sealedOptions;for(var o in n)n[o]!==r[o]&&(e||(e={}),e[o]=n[o]);return e}function oo(t){this._init(t)}function io(t){t.use=function(t){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(t)>-1)return this;var n=T(arguments,1);return n.unshift(this),"function"==typeof t.install?t.install.apply(t,n):"function"==typeof t&&t.apply(null,n),e.push(t),this}}function ao(t){t.mixin=function(t){return this.options=ce(this.options,t),this}}function so(t){t.cid=0;var e=1;t.extend=function(t){t=t||{};var n=this,r=n.cid,o=t._Ctor||(t._Ctor={});if(o[r])return o[r];var i=t.name||n.options.name;var a=function(t){this._init(t)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=e++,a.options=ce(n.options,t),a.super=n,a.options.props&&co(a),a.options.computed&&uo(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,U.forEach(function(t){a[t]=n[t]}),i&&(a.options.components[i]=a),a.superOptions=n.options,a.extendOptions=t,a.sealedOptions=I({},a.options),o[r]=a,a}}function co(t){var e=t.options.props;for(var n in e)Rr(t.prototype,"_props",n)}function uo(t){var e=t.options.computed;for(var n in e)qr(t.prototype,n,e[n])}function lo(t){U.forEach(function(e){t[e]=function(t,n){return n?("component"===e&&l(n)&&(n.name=n.name||t,n=this.options._base.extend(n)),"directive"===e&&"function"==typeof n&&(n={bind:n,update:n}),this.options[e+"s"][t]=n,n):this.options[e+"s"][t]}})}function fo(t){return t&&(t.Ctor.options.name||t.tag)}function po(t,e){return Array.isArray(t)?t.indexOf(e)>-1:"string"==typeof t?t.split(",").indexOf(e)>-1:!!f(t)&&t.test(e)}function vo(t,e){var n=t.cache,r=t.keys,o=t._vnode;for(var i in n){var a=n[i];if(a){var s=fo(a.componentOptions);s&&!e(s)&&ho(n,i,r,o)}}}function ho(t,e,n,r){var o=t[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),t[e]=null,_(n,e)}to(oo),Qr(oo),sr(oo),pr(oo),Zn(oo);var mo=[String,RegExp,Array],yo={name:"keep-alive",abstract:!0,props:{include:mo,exclude:mo,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var t in this.cache)ho(this.cache,t,this.keys)},mounted:function(){var t=this;this.$watch("include",function(e){vo(t,function(t){return po(e,t)})}),this.$watch("exclude",function(e){vo(t,function(t){return!po(e,t)})})},render:function(){var t=this.$slots.default,e=er(t),n=e&&e.componentOptions;if(n){var r=fo(n),o=this.include,i=this.exclude;if(o&&(!r||!po(o,r))||i&&r&&po(i,r))return e;var a=this.cache,s=this.keys,c=null==e.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):e.key;a[c]?(e.componentInstance=a[c].componentInstance,_(s,c),s.push(c)):(a[c]=e,s.push(c),this.max&&s.length>parseInt(this.max)&&ho(a,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||t&&t[0]}},go={KeepAlive:yo};function _o(t){var e={get:function(){return z}};Object.defineProperty(t,"config",e),t.util={warn:Ct,extend:I,mergeOptions:ce,defineReactive:Wt},t.set=qt,t.delete=Kt,t.nextTick=ze,t.observable=function(t){return Vt(t),t},t.options=Object.create(null),U.forEach(function(e){t.options[e+"s"]=Object.create(null)}),t.options._base=t,I(t.options.components,go),io(t),ao(t),so(t),lo(t)}_o(oo),Object.defineProperty(oo.prototype,"$isServer",{get:pt}),Object.defineProperty(oo.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(oo,"FunctionalRenderContext",{value:En}),oo.version="2.6.12";var bo=m("style,class"),Co=m("input,textarea,option,select,progress"),wo=function(t,e,n){return"value"===n&&Co(t)&&"button"!==e||"selected"===n&&"option"===t||"checked"===n&&"input"===t||"muted"===n&&"video"===t},$o=m("contenteditable,draggable,spellcheck"),Ao=m("events,caret,typing,plaintext-only"),xo=function(t,e){return Eo(e)||"false"===e?"false":"contenteditable"===t&&Ao(e)?e:"true"},Oo=m("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),ko="http://www.w3.org/1999/xlink",So=function(t){return":"===t.charAt(5)&&"xlink"===t.slice(0,5)},jo=function(t){return So(t)?t.slice(6,t.length):""},Eo=function(t){return null==t||!1===t};function To(t){for(var e=t.data,n=t,o=t;r(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(e=Io(o.data,e));for(;r(n=n.parent);)n&&n.data&&(e=Io(e,n.data));return Do(e.staticClass,e.class)}function Io(t,e){return{staticClass:No(t.staticClass,e.staticClass),class:r(t.class)?[t.class,e.class]:e.class}}function Do(t,e){return r(t)||r(e)?No(t,Lo(e)):""}function No(t,e){return t?e?t+" "+e:t:e||""}function Lo(t){return Array.isArray(t)?Po(t):s(t)?Mo(t):"string"==typeof t?t:""}function Po(t){for(var e,n="",o=0,i=t.length;o<i;o++)r(e=Lo(t[o]))&&""!==e&&(n&&(n+=" "),n+=e);return n}function Mo(t){var e="";for(var n in t)t[n]&&(e&&(e+=" "),e+=n);return e}var Fo={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Ro=m("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Ho=m("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Uo=function(t){return Ro(t)||Ho(t)};function Bo(t){return Ho(t)?"svg":"math"===t?"math":void 0}var zo=Object.create(null);function Vo(t){if(!J)return!0;if(Uo(t))return!1;if(t=t.toLowerCase(),null!=zo[t])return zo[t];var e=document.createElement(t);return t.indexOf("-")>-1?zo[t]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:zo[t]=/HTMLUnknownElement/.test(e.toString())}var Wo=m("text,number,password,search,email,tel,url");function qo(t){if("string"==typeof t){var e=document.querySelector(t);return e||document.createElement("div")}return t}function Ko(t,e){var n=document.createElement(t);return"select"!==t?n:(e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n)}function Xo(t,e){return document.createElementNS(Fo[t],e)}function Go(t){return document.createTextNode(t)}function Zo(t){return document.createComment(t)}function Jo(t,e,n){t.insertBefore(e,n)}function Qo(t,e){t.removeChild(e)}function Yo(t,e){t.appendChild(e)}function ti(t){return t.parentNode}function ei(t){return t.nextSibling}function ni(t){return t.tagName}function ri(t,e){t.textContent=e}function oi(t,e){t.setAttribute(e,"")}var ii=Object.freeze({createElement:Ko,createElementNS:Xo,createTextNode:Go,createComment:Zo,insertBefore:Jo,removeChild:Qo,appendChild:Yo,parentNode:ti,nextSibling:ei,tagName:ni,setTextContent:ri,setStyleScope:oi}),ai={create:function(t,e){si(e)},update:function(t,e){t.data.ref!==e.data.ref&&(si(t,!0),si(e))},destroy:function(t){si(t,!0)}};function si(t,e){var n=t.data.ref;if(r(n)){var o=t.context,i=t.componentInstance||t.elm,a=o.$refs;e?Array.isArray(a[n])?_(a[n],i):a[n]===i&&(a[n]=void 0):t.data.refInFor?Array.isArray(a[n])?a[n].indexOf(i)<0&&a[n].push(i):a[n]=[i]:a[n]=i}}var ci=new Et("",{},[]),ui=["create","activate","update","remove","destroy"];function li(t,e){return t.key===e.key&&(t.tag===e.tag&&t.isComment===e.isComment&&r(t.data)===r(e.data)&&fi(t,e)||o(t.isAsyncPlaceholder)&&t.asyncFactory===e.asyncFactory&&n(e.asyncFactory.error))}function fi(t,e){if("input"!==t.tag)return!0;var n,o=r(n=t.data)&&r(n=n.attrs)&&n.type,i=r(n=e.data)&&r(n=n.attrs)&&n.type;return o===i||Wo(o)&&Wo(i)}function pi(t,e,n){var o,i,a={};for(o=e;o<=n;++o)r(i=t[o].key)&&(a[i]=o);return a}function di(t){var e,i,s={},c=t.modules,u=t.nodeOps;for(e=0;e<ui.length;++e)for(s[ui[e]]=[],i=0;i<c.length;++i)r(c[i][ui[e]])&&s[ui[e]].push(c[i][ui[e]]);function l(t){var e=u.parentNode(t);r(e)&&u.removeChild(e,t)}function f(t,e,n,i,a,c,l){if(r(t.elm)&&r(c)&&(t=c[l]=Nt(t)),t.isRootInsert=!a,!function(t,e,n,i){var a=t.data;if(r(a)){var c=r(t.componentInstance)&&a.keepAlive;if(r(a=a.hook)&&r(a=a.init)&&a(t,!1),r(t.componentInstance))return p(t,e),d(n,t.elm,i),o(c)&&function(t,e,n,o){var i,a=t;for(;a.componentInstance;)if(a=a.componentInstance._vnode,r(i=a.data)&&r(i=i.transition)){for(i=0;i<s.activate.length;++i)s.activate[i](ci,a);e.push(a);break}d(n,t.elm,o)}(t,e,n,i),!0}}(t,e,n,i)){var f=t.data,h=t.children,m=t.tag;r(m)?(t.elm=t.ns?u.createElementNS(t.ns,m):u.createElement(m,t),g(t),v(t,h,e),r(f)&&y(t,e),d(n,t.elm,i)):o(t.isComment)?(t.elm=u.createComment(t.text),d(n,t.elm,i)):(t.elm=u.createTextNode(t.text),d(n,t.elm,i))}}function p(t,e){r(t.data.pendingInsert)&&(e.push.apply(e,t.data.pendingInsert),t.data.pendingInsert=null),t.elm=t.componentInstance.$el,h(t)?(y(t,e),g(t)):(si(t),e.push(t))}function d(t,e,n){r(t)&&(r(n)?u.parentNode(n)===t&&u.insertBefore(t,e,n):u.appendChild(t,e))}function v(t,e,n){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)f(e[r],n,t.elm,null,!0,e,r)}else a(t.text)&&u.appendChild(t.elm,u.createTextNode(String(t.text)))}function h(t){for(;t.componentInstance;)t=t.componentInstance._vnode;return r(t.tag)}function y(t,n){for(var o=0;o<s.create.length;++o)s.create[o](ci,t);r(e=t.data.hook)&&(r(e.create)&&e.create(ci,t),r(e.insert)&&n.push(t))}function g(t){var e;if(r(e=t.fnScopeId))u.setStyleScope(t.elm,e);else for(var n=t;n;)r(e=n.context)&&r(e=e.$options._scopeId)&&u.setStyleScope(t.elm,e),n=n.parent;r(e=cr)&&e!==t.context&&e!==t.fnContext&&r(e=e.$options._scopeId)&&u.setStyleScope(t.elm,e)}function _(t,e,n,r,o,i){for(;r<=o;++r)f(n[r],i,t,e,!1,n,r)}function b(t){var e,n,o=t.data;if(r(o))for(r(e=o.hook)&&r(e=e.destroy)&&e(t),e=0;e<s.destroy.length;++e)s.destroy[e](t);if(r(e=t.children))for(n=0;n<t.children.length;++n)b(t.children[n])}function C(t,e,n){for(;e<=n;++e){var o=t[e];r(o)&&(r(o.tag)?(w(o),b(o)):l(o.elm))}}function w(t,e){if(r(e)||r(t.data)){var n,o=s.remove.length+1;for(r(e)?e.listeners+=o:e=function(t,e){function n(){0==--n.listeners&&l(t)}return n.listeners=e,n}(t.elm,o),r(n=t.componentInstance)&&r(n=n._vnode)&&r(n.data)&&w(n,e),n=0;n<s.remove.length;++n)s.remove[n](t,e);r(n=t.data.hook)&&r(n=n.remove)?n(t,e):e()}else l(t.elm)}function $(t,e,n,o){for(var i=n;i<o;i++){var a=e[i];if(r(a)&&li(t,a))return i}}function A(t,e,i,a,c,l){if(t!==e){r(e.elm)&&r(a)&&(e=a[c]=Nt(e));var p=e.elm=t.elm;if(o(t.isAsyncPlaceholder))r(e.asyncFactory.resolved)?k(t.elm,e,i):e.isAsyncPlaceholder=!0;else if(o(e.isStatic)&&o(t.isStatic)&&e.key===t.key&&(o(e.isCloned)||o(e.isOnce)))e.componentInstance=t.componentInstance;else{var d,v=e.data;r(v)&&r(d=v.hook)&&r(d=d.prepatch)&&d(t,e);var m=t.children,y=e.children;if(r(v)&&h(e)){for(d=0;d<s.update.length;++d)s.update[d](t,e);r(d=v.hook)&&r(d=d.update)&&d(t,e)}n(e.text)?r(m)&&r(y)?m!==y&&function(t,e,o,i,a){var s,c,l,p=0,d=0,v=e.length-1,h=e[0],m=e[v],y=o.length-1,g=o[0],b=o[y],w=!a;for(;p<=v&&d<=y;)n(h)?h=e[++p]:n(m)?m=e[--v]:li(h,g)?(A(h,g,i,o,d),h=e[++p],g=o[++d]):li(m,b)?(A(m,b,i,o,y),m=e[--v],b=o[--y]):li(h,b)?(A(h,b,i,o,y),w&&u.insertBefore(t,h.elm,u.nextSibling(m.elm)),h=e[++p],b=o[--y]):li(m,g)?(A(m,g,i,o,d),w&&u.insertBefore(t,m.elm,h.elm),m=e[--v],g=o[++d]):(n(s)&&(s=pi(e,p,v)),n(c=r(g.key)?s[g.key]:$(g,e,p,v))?f(g,i,t,h.elm,!1,o,d):li(l=e[c],g)?(A(l,g,i,o,d),e[c]=void 0,w&&u.insertBefore(t,l.elm,h.elm)):f(g,i,t,h.elm,!1,o,d),g=o[++d]);p>v?_(t,n(o[y+1])?null:o[y+1].elm,o,d,y,i):d>y&&C(e,p,v)}(p,m,y,i,l):r(y)?(r(t.text)&&u.setTextContent(p,""),_(p,null,y,0,y.length-1,i)):r(m)?C(m,0,m.length-1):r(t.text)&&u.setTextContent(p,""):t.text!==e.text&&u.setTextContent(p,e.text),r(v)&&r(d=v.hook)&&r(d=d.postpatch)&&d(t,e)}}}function x(t,e,n){if(o(n)&&r(t.parent))t.parent.data.pendingInsert=e;else for(var i=0;i<e.length;++i)e[i].data.hook.insert(e[i])}var O=m("attrs,class,staticClass,staticStyle,key");function k(t,e,n,i){var a,s=e.tag,c=e.data,u=e.children;if(i=i||c&&c.pre,e.elm=t,o(e.isComment)&&r(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(r(c)&&(r(a=c.hook)&&r(a=a.init)&&a(e,!0),r(a=e.componentInstance)))return p(e,n),!0;if(r(s)){if(r(u))if(t.hasChildNodes())if(r(a=c)&&r(a=a.domProps)&&r(a=a.innerHTML)){if(a!==t.innerHTML)return!1}else{for(var l=!0,f=t.firstChild,d=0;d<u.length;d++){if(!f||!k(f,u[d],n,i)){l=!1;break}f=f.nextSibling}if(!l||f)return!1}else v(e,u,n);if(r(c)){var h=!1;for(var m in c)if(!O(m)){h=!0,y(e,n);break}!h&&c.class&&Xe(c.class)}}else t.data!==e.text&&(t.data=e.text);return!0}return function(t,e,i,a){if(!n(e)){var c,l=!1,p=[];if(n(t))l=!0,f(e,p);else{var d=r(t.nodeType);if(!d&&li(t,e))A(t,e,p,null,null,a);else{if(d){if(1===t.nodeType&&t.hasAttribute(H)&&(t.removeAttribute(H),i=!0),o(i)&&k(t,e,p))return x(e,p,!0),t;c=t,t=new Et(u.tagName(c).toLowerCase(),{},[],void 0,c)}var v=t.elm,m=u.parentNode(v);if(f(e,p,v._leaveCb?null:m,u.nextSibling(v)),r(e.parent))for(var y=e.parent,g=h(e);y;){for(var _=0;_<s.destroy.length;++_)s.destroy[_](y);if(y.elm=e.elm,g){for(var w=0;w<s.create.length;++w)s.create[w](ci,y);var $=y.data.hook.insert;if($.merged)for(var O=1;O<$.fns.length;O++)$.fns[O]()}else si(y);y=y.parent}r(m)?C([t],0,0):r(t.tag)&&b(t)}}return x(e,p,l),e.elm}r(t)&&b(t)}}var vi={create:hi,update:hi,destroy:function(t){hi(t,ci)}};function hi(t,e){(t.data.directives||e.data.directives)&&mi(t,e)}function mi(t,e){var n,r,o,i=t===ci,a=e===ci,s=gi(t.data.directives,t.context),c=gi(e.data.directives,e.context),u=[],l=[];for(n in c)r=s[n],o=c[n],r?(o.oldValue=r.value,o.oldArg=r.arg,bi(o,"update",e,t),o.def&&o.def.componentUpdated&&l.push(o)):(bi(o,"bind",e,t),o.def&&o.def.inserted&&u.push(o));if(u.length){var f=function(){for(var n=0;n<u.length;n++)bi(u[n],"inserted",e,t)};i?Ye(e,"insert",f):f()}if(l.length&&Ye(e,"postpatch",function(){for(var n=0;n<l.length;n++)bi(l[n],"componentUpdated",e,t)}),!i)for(n in s)c[n]||bi(s[n],"unbind",t,t,a)}var yi=Object.create(null);function gi(t,e){var n,r,o=Object.create(null);if(!t)return o;for(n=0;n<t.length;n++)(r=t[n]).modifiers||(r.modifiers=yi),o[_i(r)]=r,r.def=ue(e.$options,"directives",r.name,!0);return o}function _i(t){return t.rawName||t.name+"."+Object.keys(t.modifiers||{}).join(".")}function bi(t,e,n,r,o){var i=t.def&&t.def[e];if(i)try{i(n.elm,t,n,r,o)}catch(as){we(as,n.context,"directive "+t.name+" "+e+" hook")}}var Ci=[ai,vi];function wi(t,e){var o=e.componentOptions;if(!(r(o)&&!1===o.Ctor.options.inheritAttrs||n(t.data.attrs)&&n(e.data.attrs))){var i,a,s=e.elm,c=t.data.attrs||{},u=e.data.attrs||{};for(i in r(u.__ob__)&&(u=e.data.attrs=I({},u)),u)a=u[i],c[i]!==a&&$i(s,i,a);for(i in(et||rt)&&u.value!==c.value&&$i(s,"value",u.value),c)n(u[i])&&(So(i)?s.removeAttributeNS(ko,jo(i)):$o(i)||s.removeAttribute(i))}}function $i(t,e,n){t.tagName.indexOf("-")>-1?Ai(t,e,n):Oo(e)?Eo(n)?t.removeAttribute(e):(n="allowfullscreen"===e&&"EMBED"===t.tagName?"true":e,t.setAttribute(e,n)):$o(e)?t.setAttribute(e,xo(e,n)):So(e)?Eo(n)?t.removeAttributeNS(ko,jo(e)):t.setAttributeNS(ko,e,n):Ai(t,e,n)}function Ai(t,e,n){if(Eo(n))t.removeAttribute(e);else{if(et&&!nt&&"TEXTAREA"===t.tagName&&"placeholder"===e&&""!==n&&!t.__ieph){var r=function(e){e.stopImmediatePropagation(),t.removeEventListener("input",r)};t.addEventListener("input",r),t.__ieph=!0}t.setAttribute(e,n)}}var xi={create:wi,update:wi};function Oi(t,e){var o=e.elm,i=e.data,a=t.data;if(!(n(i.staticClass)&&n(i.class)&&(n(a)||n(a.staticClass)&&n(a.class)))){var s=To(e),c=o._transitionClasses;r(c)&&(s=No(s,Lo(c))),s!==o._prevClass&&(o.setAttribute("class",s),o._prevClass=s)}}var ki,Si={create:Oi,update:Oi},ji="__r",Ei="__c";function Ti(t){if(r(t[ji])){var e=et?"change":"input";t[e]=[].concat(t[ji],t[e]||[]),delete t[ji]}r(t[Ei])&&(t.change=[].concat(t[Ei],t.change||[]),delete t[Ei])}function Ii(t,e,n){var r=ki;return function o(){null!==e.apply(null,arguments)&&Li(t,o,n,r)}}var Di=Le&&!(ct&&Number(ct[1])<=53);function Ni(t,e,n,r){if(Di){var o=Sr,i=e;e=i._wrapper=function(t){if(t.target===t.currentTarget||t.timeStamp>=o||t.timeStamp<=0||t.target.ownerDocument!==document)return i.apply(this,arguments)}}ki.addEventListener(t,e,lt?{capture:n,passive:r}:n)}function Li(t,e,n,r){(r||ki).removeEventListener(t,e._wrapper||e,n)}function Pi(t,e){if(!n(t.data.on)||!n(e.data.on)){var r=e.data.on||{},o=t.data.on||{};ki=e.elm,Ti(r),Qe(r,o,Ni,Li,Ii,e.context),ki=void 0}}var Mi,Fi={create:Pi,update:Pi};function Ri(t,e){if(!n(t.data.domProps)||!n(e.data.domProps)){var o,i,a=e.elm,s=t.data.domProps||{},c=e.data.domProps||{};for(o in r(c.__ob__)&&(c=e.data.domProps=I({},c)),s)o in c||(a[o]="");for(o in c){if(i=c[o],"textContent"===o||"innerHTML"===o){if(e.children&&(e.children.length=0),i===s[o])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===o&&"PROGRESS"!==a.tagName){a._value=i;var u=n(i)?"":String(i);Hi(a,u)&&(a.value=u)}else if("innerHTML"===o&&Ho(a.tagName)&&n(a.innerHTML)){(Mi=Mi||document.createElement("div")).innerHTML="<svg>"+i+"</svg>";for(var l=Mi.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;l.firstChild;)a.appendChild(l.firstChild)}else if(i!==s[o])try{a[o]=i}catch(as){}}}}function Hi(t,e){return!t.composing&&("OPTION"===t.tagName||Ui(t,e)||Bi(t,e))}function Ui(t,e){var n=!0;try{n=document.activeElement!==t}catch(as){}return n&&t.value!==e}function Bi(t,e){var n=t.value,o=t._vModifiers;if(r(o)){if(o.number)return h(n)!==h(e);if(o.trim)return n.trim()!==e.trim()}return n!==e}var zi={create:Ri,update:Ri},Vi=w(function(t){var e={},n=/:(.+)/;return t.split(/;(?![^(]*\))/g).forEach(function(t){if(t){var r=t.split(n);r.length>1&&(e[r[0].trim()]=r[1].trim())}}),e});function Wi(t){var e=qi(t.style);return t.staticStyle?I(t.staticStyle,e):e}function qi(t){return Array.isArray(t)?D(t):"string"==typeof t?Vi(t):t}function Ki(t,e){var n,r={};if(e)for(var o=t;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(n=Wi(o.data))&&I(r,n);(n=Wi(t.data))&&I(r,n);for(var i=t;i=i.parent;)i.data&&(n=Wi(i.data))&&I(r,n);return r}var Xi,Gi=/^--/,Zi=/\s*!important$/,Ji=function(t,e,n){if(Gi.test(e))t.style.setProperty(e,n);else if(Zi.test(n))t.style.setProperty(k(e),n.replace(Zi,""),"important");else{var r=Yi(e);if(Array.isArray(n))for(var o=0,i=n.length;o<i;o++)t.style[r]=n[o];else t.style[r]=n}},Qi=["Webkit","Moz","ms"],Yi=w(function(t){if(Xi=Xi||document.createElement("div").style,"filter"!==(t=A(t))&&t in Xi)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=0;n<Qi.length;n++){var r=Qi[n]+e;if(r in Xi)return r}});function ta(t,e){var o=e.data,i=t.data;if(!(n(o.staticStyle)&&n(o.style)&&n(i.staticStyle)&&n(i.style))){var a,s,c=e.elm,u=i.staticStyle,l=i.normalizedStyle||i.style||{},f=u||l,p=qi(e.data.style)||{};e.data.normalizedStyle=r(p.__ob__)?I({},p):p;var d=Ki(e,!0);for(s in f)n(d[s])&&Ji(c,s,"");for(s in d)(a=d[s])!==f[s]&&Ji(c,s,null==a?"":a)}}var ea={create:ta,update:ta},na=/\s+/;function ra(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(na).forEach(function(e){return t.classList.add(e)}):t.classList.add(e);else{var n=" "+(t.getAttribute("class")||"")+" ";n.indexOf(" "+e+" ")<0&&t.setAttribute("class",(n+e).trim())}}function oa(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(na).forEach(function(e){return t.classList.remove(e)}):t.classList.remove(e),t.classList.length||t.removeAttribute("class");else{for(var n=" "+(t.getAttribute("class")||"")+" ",r=" "+e+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?t.setAttribute("class",n):t.removeAttribute("class")}}function ia(t){if(t){if("object"==typeof t){var e={};return!1!==t.css&&I(e,aa(t.name||"v")),I(e,t),e}return"string"==typeof t?aa(t):void 0}}var aa=w(function(t){return{enterClass:t+"-enter",enterToClass:t+"-enter-to",enterActiveClass:t+"-enter-active",leaveClass:t+"-leave",leaveToClass:t+"-leave-to",leaveActiveClass:t+"-leave-active"}}),sa=J&&!nt,ca="transition",ua="animation",la="transition",fa="transitionend",pa="animation",da="animationend";sa&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(la="WebkitTransition",fa="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(pa="WebkitAnimation",da="webkitAnimationEnd"));var va=J?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(t){return t()};function ha(t){va(function(){va(t)})}function ma(t,e){var n=t._transitionClasses||(t._transitionClasses=[]);n.indexOf(e)<0&&(n.push(e),ra(t,e))}function ya(t,e){t._transitionClasses&&_(t._transitionClasses,e),oa(t,e)}function ga(t,e,n){var r=ba(t,e),o=r.type,i=r.timeout,a=r.propCount;if(!o)return n();var s=o===ca?fa:da,c=0,u=function(){t.removeEventListener(s,l),n()},l=function(e){e.target===t&&++c>=a&&u()};setTimeout(function(){c<a&&u()},i+1),t.addEventListener(s,l)}var _a=/\b(transform|all)(,|$)/;function ba(t,e){var n,r=window.getComputedStyle(t),o=(r[la+"Delay"]||"").split(", "),i=(r[la+"Duration"]||"").split(", "),a=Ca(o,i),s=(r[pa+"Delay"]||"").split(", "),c=(r[pa+"Duration"]||"").split(", "),u=Ca(s,c),l=0,f=0;return e===ca?a>0&&(n=ca,l=a,f=i.length):e===ua?u>0&&(n=ua,l=u,f=c.length):f=(n=(l=Math.max(a,u))>0?a>u?ca:ua:null)?n===ca?i.length:c.length:0,{type:n,timeout:l,propCount:f,hasTransform:n===ca&&_a.test(r[la+"Property"])}}function Ca(t,e){for(;t.length<e.length;)t=t.concat(t);return Math.max.apply(null,e.map(function(e,n){return wa(e)+wa(t[n])}))}function wa(t){return 1e3*Number(t.slice(0,-1).replace(",","."))}function $a(t,e){var o=t.elm;r(o._leaveCb)&&(o._leaveCb.cancelled=!0,o._leaveCb());var i=ia(t.data.transition);if(!n(i)&&!r(o._enterCb)&&1===o.nodeType){for(var a=i.css,c=i.type,u=i.enterClass,l=i.enterToClass,f=i.enterActiveClass,p=i.appearClass,d=i.appearToClass,v=i.appearActiveClass,m=i.beforeEnter,y=i.enter,g=i.afterEnter,_=i.enterCancelled,b=i.beforeAppear,C=i.appear,w=i.afterAppear,$=i.appearCancelled,A=i.duration,x=cr,O=cr.$vnode;O&&O.parent;)x=O.context,O=O.parent;var k=!x._isMounted||!t.isRootInsert;if(!k||C||""===C){var S=k&&p?p:u,j=k&&v?v:f,E=k&&d?d:l,T=k&&b||m,I=k&&"function"==typeof C?C:y,D=k&&w||g,N=k&&$||_,L=h(s(A)?A.enter:A);0;var P=!1!==a&&!nt,M=ka(I),F=o._enterCb=R(function(){P&&(ya(o,E),ya(o,j)),F.cancelled?(P&&ya(o,S),N&&N(o)):D&&D(o),o._enterCb=null});t.data.show||Ye(t,"insert",function(){var e=o.parentNode,n=e&&e._pending&&e._pending[t.key];n&&n.tag===t.tag&&n.elm._leaveCb&&n.elm._leaveCb(),I&&I(o,F)}),T&&T(o),P&&(ma(o,S),ma(o,j),ha(function(){ya(o,S),F.cancelled||(ma(o,E),M||(Oa(L)?setTimeout(F,L):ga(o,c,F)))})),t.data.show&&(e&&e(),I&&I(o,F)),P||M||F()}}}function Aa(t,e){var o=t.elm;r(o._enterCb)&&(o._enterCb.cancelled=!0,o._enterCb());var i=ia(t.data.transition);if(n(i)||1!==o.nodeType)return e();if(!r(o._leaveCb)){var a=i.css,c=i.type,u=i.leaveClass,l=i.leaveToClass,f=i.leaveActiveClass,p=i.beforeLeave,d=i.leave,v=i.afterLeave,m=i.leaveCancelled,y=i.delayLeave,g=i.duration,_=!1!==a&&!nt,b=ka(d),C=h(s(g)?g.leave:g);0;var w=o._leaveCb=R(function(){o.parentNode&&o.parentNode._pending&&(o.parentNode._pending[t.key]=null),_&&(ya(o,l),ya(o,f)),w.cancelled?(_&&ya(o,u),m&&m(o)):(e(),v&&v(o)),o._leaveCb=null});y?y($):$()}function $(){w.cancelled||(!t.data.show&&o.parentNode&&((o.parentNode._pending||(o.parentNode._pending={}))[t.key]=t),p&&p(o),_&&(ma(o,u),ma(o,f),ha(function(){ya(o,u),w.cancelled||(ma(o,l),b||(Oa(C)?setTimeout(w,C):ga(o,c,w)))})),d&&d(o,w),_||b||w())}}function xa(t,e,n){"number"!=typeof t?Ct("<transition> explicit "+e+" duration is not a valid number - got "+JSON.stringify(t)+".",n.context):isNaN(t)&&Ct("<transition> explicit "+e+" duration is NaN - the duration expression might be incorrect.",n.context)}function Oa(t){return"number"==typeof t&&!isNaN(t)}function ka(t){if(n(t))return!1;var e=t.fns;return r(e)?ka(Array.isArray(e)?e[0]:e):(t._length||t.length)>1}function Sa(t,e){!0!==e.data.show&&$a(e)}var ja=J?{create:Sa,activate:Sa,remove:function(t,e){!0!==t.data.show?Aa(t,e):e()}}:{},Ea=[xi,Si,Fi,zi,ea,ja],Ta=Ea.concat(Ci),Ia=di({nodeOps:ii,modules:Ta});nt&&document.addEventListener("selectionchange",function(){var t=document.activeElement;t&&t.vmodel&&Ha(t,"input")});var Da={inserted:function(t,e,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?Ye(n,"postpatch",function(){Da.componentUpdated(t,e,n)}):Na(t,e,n.context),t._vOptions=[].map.call(t.options,Ma)):("textarea"===n.tag||Wo(t.type))&&(t._vModifiers=e.modifiers,e.modifiers.lazy||(t.addEventListener("compositionstart",Fa),t.addEventListener("compositionend",Ra),t.addEventListener("change",Ra),nt&&(t.vmodel=!0)))},componentUpdated:function(t,e,n){if("select"===n.tag){Na(t,e,n.context);var r=t._vOptions,o=t._vOptions=[].map.call(t.options,Ma);if(o.some(function(t,e){return!M(t,r[e])}))(t.multiple?e.value.some(function(t){return Pa(t,o)}):e.value!==e.oldValue&&Pa(e.value,o))&&Ha(t,"change")}}};function Na(t,e,n){La(t,e,n),(et||rt)&&setTimeout(function(){La(t,e,n)},0)}function La(t,e,n){var r=e.value,o=t.multiple;if(!o||Array.isArray(r)){for(var i,a,s=0,c=t.options.length;s<c;s++)if(a=t.options[s],o)i=F(r,Ma(a))>-1,a.selected!==i&&(a.selected=i);else if(M(Ma(a),r))return void(t.selectedIndex!==s&&(t.selectedIndex=s));o||(t.selectedIndex=-1)}}function Pa(t,e){return e.every(function(e){return!M(e,t)})}function Ma(t){return"_value"in t?t._value:t.value}function Fa(t){t.target.composing=!0}function Ra(t){t.target.composing&&(t.target.composing=!1,Ha(t.target,"input"))}function Ha(t,e){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}function Ua(t){return!t.componentInstance||t.data&&t.data.transition?t:Ua(t.componentInstance._vnode)}var Ba={bind:function(t,e,n){var r=e.value,o=(n=Ua(n)).data&&n.data.transition,i=t.__vOriginalDisplay="none"===t.style.display?"":t.style.display;r&&o?(n.data.show=!0,$a(n,function(){t.style.display=i})):t.style.display=r?i:"none"},update:function(t,e,n){var r=e.value;!r!=!e.oldValue&&((n=Ua(n)).data&&n.data.transition?(n.data.show=!0,r?$a(n,function(){t.style.display=t.__vOriginalDisplay}):Aa(n,function(){t.style.display="none"})):t.style.display=r?t.__vOriginalDisplay:"none")},unbind:function(t,e,n,r,o){o||(t.style.display=t.__vOriginalDisplay)}},za={model:Da,show:Ba},Va={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Wa(t){var e=t&&t.componentOptions;return e&&e.Ctor.options.abstract?Wa(er(e.children)):t}function qa(t){var e={},n=t.$options;for(var r in n.propsData)e[r]=t[r];var o=n._parentListeners;for(var i in o)e[A(i)]=o[i];return e}function Ka(t,e){if(/\d-keep-alive$/.test(e.tag))return t("keep-alive",{props:e.componentOptions.propsData})}function Xa(t){for(;t=t.parent;)if(t.data.transition)return!0}function Ga(t,e){return e.key===t.key&&e.tag===t.tag}var Za=function(t){return t.tag||tr(t)},Ja=function(t){return"show"===t.name},Qa={name:"transition",props:Va,abstract:!0,render:function(t){var e=this,n=this.$slots.default;if(n&&(n=n.filter(Za)).length){0;var r=this.mode;0;var o=n[0];if(Xa(this.$vnode))return o;var i=Wa(o);if(!i)return o;if(this._leaving)return Ka(t,o);var s="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?s+"comment":s+i.tag:a(i.key)?0===String(i.key).indexOf(s)?i.key:s+i.key:i.key;var c=(i.data||(i.data={})).transition=qa(this),u=this._vnode,l=Wa(u);if(i.data.directives&&i.data.directives.some(Ja)&&(i.data.show=!0),l&&l.data&&!Ga(i,l)&&!tr(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var f=l.data.transition=I({},c);if("out-in"===r)return this._leaving=!0,Ye(f,"afterLeave",function(){e._leaving=!1,e.$forceUpdate()}),Ka(t,o);if("in-out"===r){if(tr(i))return u;var p,d=function(){p()};Ye(c,"afterEnter",d),Ye(c,"enterCancelled",d),Ye(f,"delayLeave",function(t){p=t})}}return o}}},Ya=I({tag:String,moveClass:String},Va);delete Ya.mode;var ts={props:Ya,beforeMount:function(){var t=this,e=this._update;this._update=function(n,r){var o=lr(t);t.__patch__(t._vnode,t.kept,!1,!0),t._vnode=t.kept,o(),e.call(t,n,r)}},render:function(t){for(var e=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],a=qa(this),s=0;s<o.length;s++){var c=o[s];if(c.tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))i.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a;else;}if(r){for(var u=[],l=[],f=0;f<r.length;f++){var p=r[f];p.data.transition=a,p.data.pos=p.elm.getBoundingClientRect(),n[p.key]?u.push(p):l.push(p)}this.kept=t(e,null,u),this.removed=l}return t(e,null,i)},updated:function(){var t=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";t.length&&this.hasMove(t[0].elm,e)&&(t.forEach(es),t.forEach(ns),t.forEach(rs),this._reflow=document.body.offsetHeight,t.forEach(function(t){if(t.data.moved){var n=t.elm,r=n.style;ma(n,e),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(fa,n._moveCb=function t(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(fa,t),n._moveCb=null,ya(n,e))})}}))},methods:{hasMove:function(t,e){if(!sa)return!1;if(this._hasMove)return this._hasMove;var n=t.cloneNode();t._transitionClasses&&t._transitionClasses.forEach(function(t){oa(n,t)}),ra(n,e),n.style.display="none",this.$el.appendChild(n);var r=ba(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}};function es(t){t.elm._moveCb&&t.elm._moveCb(),t.elm._enterCb&&t.elm._enterCb()}function ns(t){t.data.newPos=t.elm.getBoundingClientRect()}function rs(t){var e=t.data.pos,n=t.data.newPos,r=e.left-n.left,o=e.top-n.top;if(r||o){t.data.moved=!0;var i=t.elm.style;i.transform=i.WebkitTransform="translate("+r+"px,"+o+"px)",i.transitionDuration="0s"}}var os={Transition:Qa,TransitionGroup:ts};oo.config.mustUseProp=wo,oo.config.isReservedTag=Uo,oo.config.isReservedAttr=bo,oo.config.getTagNamespace=Bo,oo.config.isUnknownElement=Vo,I(oo.options.directives,za),I(oo.options.components,os),oo.prototype.__patch__=J?Ia:N,oo.prototype.$mount=function(t,e){return dr(this,t=t&&J?qo(t):void 0,e)},J&&setTimeout(function(){z.devtools&&dt&&dt.emit("init",oo)},0);var is=oo;exports.default=is;
},{}],"jSD1":[function(require,module,exports) {
module.exports=function(o){return o&&"object"==typeof o&&"function"==typeof o.copy&&"function"==typeof o.fill&&"function"==typeof o.readUInt8};
},{}],"F8IV":[function(require,module,exports) {
"function"==typeof Object.create?module.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:module.exports=function(t,e){t.super_=e;var o=function(){};o.prototype=e.prototype,t.prototype=new o,t.prototype.constructor=t};
},{}],"g5IB":[function(require,module,exports) {

var t,e,n=module.exports={};function r(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===r||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}function u(t){if(e===clearTimeout)return clearTimeout(t);if((e===o||!e)&&clearTimeout)return e=clearTimeout,clearTimeout(t);try{return e(t)}catch(n){try{return e.call(null,t)}catch(n){return e.call(this,t)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:r}catch(n){t=r}try{e="function"==typeof clearTimeout?clearTimeout:o}catch(n){e=o}}();var c,s=[],l=!1,a=-1;function f(){l&&c&&(l=!1,c.length?s=c.concat(s):a=-1,s.length&&h())}function h(){if(!l){var t=i(f);l=!0;for(var e=s.length;e;){for(c=s,s=[];++a<e;)c&&c[a].run();a=-1,e=s.length}c=null,l=!1,u(t)}}function m(t,e){this.fun=t,this.array=e}function p(){}n.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];s.push(new m(t,e)),1!==s.length||l||i(h)},m.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.env={},n.argv=[],n.version="",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(t){return[]},n.binding=function(t){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(t){throw new Error("process.chdir is not supported")},n.umask=function(){return 0};
},{}],"wqTM":[function(require,module,exports) {
var process = require("process");
var e=require("process"),t=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++)r[t[n]]=Object.getOwnPropertyDescriptor(e,t[n]);return r},r=/%[sdj%]/g;exports.format=function(e){if(!v(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(i(arguments[n]));return t.join(" ")}n=1;for(var o=arguments,u=o.length,s=String(e).replace(r,function(e){if("%%"===e)return"%";if(n>=u)return e;switch(e){case"%s":return String(o[n++]);case"%d":return Number(o[n++]);case"%j":try{return JSON.stringify(o[n++])}catch(t){return"[Circular]"}default:return e}}),c=o[n];n<u;c=o[++n])h(c)||!S(c)?s+=" "+c:s+=" "+i(c);return s},exports.deprecate=function(t,r){if(void 0!==e&&!0===e.noDeprecation)return t;if(void 0===e)return function(){return exports.deprecate(t,r).apply(this,arguments)};var n=!1;return function(){if(!n){if(e.throwDeprecation)throw new Error(r);e.traceDeprecation?console.trace(r):console.error(r),n=!0}return t.apply(this,arguments)}};var n,o={};function i(e,t){var r={seen:[],stylize:s};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),b(t)?r.showHidden=t:t&&exports._extend(r,t),j(r.showHidden)&&(r.showHidden=!1),j(r.depth)&&(r.depth=2),j(r.colors)&&(r.colors=!1),j(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=u),p(r,e,r.depth)}function u(e,t){var r=i.styles[t];return r?"["+i.colors[r][0]+"m"+e+"["+i.colors[r][1]+"m":e}function s(e,t){return e}function c(e){var t={};return e.forEach(function(e,r){t[e]=!0}),t}function p(e,t,r){if(e.customInspect&&t&&P(t.inspect)&&t.inspect!==exports.inspect&&(!t.constructor||t.constructor.prototype!==t)){var n=t.inspect(r,e);return v(n)||(n=p(e,n,r)),n}var o=l(e,t);if(o)return o;var i=Object.keys(t),u=c(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(t)),E(t)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return f(t);if(0===i.length){if(P(t)){var s=t.name?": "+t.name:"";return e.stylize("[Function"+s+"]","special")}if(w(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(z(t))return e.stylize(Date.prototype.toString.call(t),"date");if(E(t))return f(t)}var b,h="",m=!1,x=["{","}"];(d(t)&&(m=!0,x=["[","]"]),P(t))&&(h=" [Function"+(t.name?": "+t.name:"")+"]");return w(t)&&(h=" "+RegExp.prototype.toString.call(t)),z(t)&&(h=" "+Date.prototype.toUTCString.call(t)),E(t)&&(h=" "+f(t)),0!==i.length||m&&0!=t.length?r<0?w(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),b=m?a(e,t,r,u,i):i.map(function(n){return y(e,t,r,u,n,m)}),e.seen.pop(),g(b,h,x)):x[0]+h+x[1]}function l(e,t){if(j(t))return e.stylize("undefined","undefined");if(v(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(r,"string")}return x(t)?e.stylize(""+t,"number"):b(t)?e.stylize(""+t,"boolean"):h(t)?e.stylize("null","null"):void 0}function f(e){return"["+Error.prototype.toString.call(e)+"]"}function a(e,t,r,n,o){for(var i=[],u=0,s=t.length;u<s;++u)A(t,String(u))?i.push(y(e,t,r,n,String(u),!0)):i.push("");return o.forEach(function(o){o.match(/^\d+$/)||i.push(y(e,t,r,n,o,!0))}),i}function y(e,t,r,n,o,i){var u,s,c;if((c=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?s=c.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):c.set&&(s=e.stylize("[Setter]","special")),A(n,o)||(u="["+o+"]"),s||(e.seen.indexOf(c.value)<0?(s=h(r)?p(e,c.value,null):p(e,c.value,r-1)).indexOf("\n")>-1&&(s=i?s.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+s.split("\n").map(function(e){return"   "+e}).join("\n")):s=e.stylize("[Circular]","special")),j(u)){if(i&&o.match(/^\d+$/))return s;(u=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(u=u.substr(1,u.length-2),u=e.stylize(u,"name")):(u=u.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),u=e.stylize(u,"string"))}return u+": "+s}function g(e,t,r){return e.reduce(function(e,t){return 0,t.indexOf("\n")>=0&&0,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1]:r[0]+t+" "+e.join(", ")+" "+r[1]}function d(e){return Array.isArray(e)}function b(e){return"boolean"==typeof e}function h(e){return null===e}function m(e){return null==e}function x(e){return"number"==typeof e}function v(e){return"string"==typeof e}function O(e){return"symbol"==typeof e}function j(e){return void 0===e}function w(e){return S(e)&&"[object RegExp]"===T(e)}function S(e){return"object"==typeof e&&null!==e}function z(e){return S(e)&&"[object Date]"===T(e)}function E(e){return S(e)&&("[object Error]"===T(e)||e instanceof Error)}function P(e){return"function"==typeof e}function D(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function T(e){return Object.prototype.toString.call(e)}function N(e){return e<10?"0"+e.toString(10):e.toString(10)}exports.debuglog=function(t){if(j(n)&&(n=""),t=t.toUpperCase(),!o[t])if(new RegExp("\\b"+t+"\\b","i").test(n)){var r=e.pid;o[t]=function(){var e=exports.format.apply(exports,arguments);console.error("%s %d: %s",t,r,e)}}else o[t]=function(){};return o[t]},exports.inspect=i,i.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},i.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},exports.isArray=d,exports.isBoolean=b,exports.isNull=h,exports.isNullOrUndefined=m,exports.isNumber=x,exports.isString=v,exports.isSymbol=O,exports.isUndefined=j,exports.isRegExp=w,exports.isObject=S,exports.isDate=z,exports.isError=E,exports.isFunction=P,exports.isPrimitive=D,exports.isBuffer=require("./support/isBuffer");var F=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function k(){var e=new Date,t=[N(e.getHours()),N(e.getMinutes()),N(e.getSeconds())].join(":");return[e.getDate(),F[e.getMonth()],t].join(" ")}function A(e,t){return Object.prototype.hasOwnProperty.call(e,t)}exports.log=function(){console.log("%s - %s",k(),exports.format.apply(exports,arguments))},exports.inherits=require("inherits"),exports._extend=function(e,t){if(!t||!S(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e};var J="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function R(e,t){if(!e){var r=new Error("Promise was rejected with a falsy value");r.reason=e,e=r}return t(e)}function H(r){if("function"!=typeof r)throw new TypeError('The "original" argument must be of type Function');function n(){for(var t=[],n=0;n<arguments.length;n++)t.push(arguments[n]);var o=t.pop();if("function"!=typeof o)throw new TypeError("The last argument must be of type Function");var i=this,u=function(){return o.apply(i,arguments)};r.apply(this,t).then(function(t){e.nextTick(u,null,t)},function(t){e.nextTick(R,t,u)})}return Object.setPrototypeOf(n,Object.getPrototypeOf(r)),Object.defineProperties(n,t(r)),n}exports.promisify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');if(J&&e[J]){var r;if("function"!=typeof(r=e[J]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(r,J,{value:r,enumerable:!1,writable:!1,configurable:!0}),r}function r(){for(var t,r,n=new Promise(function(e,n){t=e,r=n}),o=[],i=0;i<arguments.length;i++)o.push(arguments[i]);o.push(function(e,n){e?r(e):t(n)});try{e.apply(this,o)}catch(u){r(u)}return n}return Object.setPrototypeOf(r,Object.getPrototypeOf(e)),J&&Object.defineProperty(r,J,{value:r,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(r,t(e))},exports.promisify.custom=J,exports.callbackify=H;
},{"./support/isBuffer":"jSD1","inherits":"F8IV","process":"g5IB"}],"NIRD":[function(require,module,exports) {
!function(e){var t=e.Markdown=function(e){switch(typeof e){case"undefined":this.dialect=t.dialects.Gruber;break;case"object":this.dialect=e;break;default:if(!(e in t.dialects))throw new Error("Unknown Markdown dialect '"+String(e)+"'");this.dialect=t.dialects[e]}this.em_state=[],this.strong_state=[],this.debug_indent=""};function n(){return"Markdown.mk_block( "+uneval(this.toString())+", "+uneval(this.trailing)+", "+uneval(this.lineNumber)+" )"}function r(){var e=require("util");return"Markdown.mk_block( "+e.inspect(this.toString())+", "+e.inspect(this.trailing)+", "+e.inspect(this.lineNumber)+" )"}e.parse=function(e,n){return new t(n).toTree(e)},e.toHTML=function(t,n,r){var i=e.toHTMLTree(t,n,r);return e.renderJsonML(i)},e.toHTMLTree=function(e,t,n){"string"==typeof e&&(e=this.parse(e,t));var r=u(e),i={};r&&r.references&&(i=r.references);var l=function e(t,n,r){var i;r=r||{};var l=t.slice(0);"function"==typeof r.preprocessTreeNode&&(l=r.preprocessTreeNode(l,n));var s=u(l);if(s){for(i in l[1]={},s)l[1][i]=s[i];s=l[1]}if("string"==typeof l)return l;switch(l[0]){case"header":l[0]="h"+l[1].level,delete l[1].level;break;case"bulletlist":l[0]="ul";break;case"numberlist":l[0]="ol";break;case"listitem":l[0]="li";break;case"para":l[0]="p";break;case"markdown":l[0]="html",s&&delete s.references;break;case"code_block":l[0]="pre",i=s?2:1;var a=["code"];a.push.apply(a,l.splice(i,l.length-i)),l[i]=a;break;case"inlinecode":l[0]="code";break;case"img":l[1].src=l[1].href,delete l[1].href;break;case"linebreak":l[0]="br";break;case"link":l[0]="a";break;case"link_ref":l[0]="a";var c=n[s.ref];if(!c)return s.original;delete s.ref,s.href=c.href,c.title&&(s.title=c.title),delete s.original;break;case"img_ref":l[0]="img";var c=n[s.ref];if(!c)return s.original;delete s.ref,s.src=c.href,c.title&&(s.title=c.title),delete s.original}i=1;if(s){for(var o in l[1]){i=2;break}1===i&&l.splice(i,1)}for(;i<l.length;++i)l[i]=e(l[i],n,r);return l}(e,i,n);return function e(t){var n=u(t)?2:1;for(;n<t.length;)"string"==typeof t[n]?n+1<t.length&&"string"==typeof t[n+1]?t[n]+=t.splice(n+1,1)[0]:++n:(e(t[n]),++n)}(l),l};var i=t.mk_block=function(e,t,i){1==arguments.length&&(t="\n\n");var l=new String(e);return l.trailing=t,l.inspect=r,l.toSource=n,null!=i&&(l.lineNumber=i),l};function l(e){for(var t=0,n=-1;-1!==(n=e.indexOf("\n",n+1));)t++;return t}function s(e,t){var n=e+"_state",r="strong"==e?"em_state":"strong_state";function i(e){this.len_after=e,this.name="close_"+t}return function(l,s){if(this[n][0]==t)return this[n].shift(),[l.length,new i(l.length-t.length)];var a=this[r].slice(),c=this[n].slice();this[n].unshift(t);var o=this.processInline(l.substr(t.length)),h=o[o.length-1];this[n].shift();return h instanceof i?(o.pop(),[l.length-h.len_after,[e].concat(o)]):(this[r]=a,this[n]=c,[t.length,t])}}t.prototype.split_blocks=function(e,t){e=e.replace(/(\r\n|\n|\r)/g,"\n");var n,r=/([\s\S]+?)($|\n#|\n(?:\s*\n|$)+)/g,s=[],a=1;for(null!=(n=/^(\s*\n)/.exec(e))&&(a+=l(n[0]),r.lastIndex=n[0].length);null!==(n=r.exec(e));)"\n#"==n[2]&&(n[2]="\n",r.lastIndex--),s.push(i(n[1],n[2],a)),a+=l(n[0]);return s},t.prototype.processBlock=function(e,t){var n=this.dialect.block,r=n.__order__;if("__call__"in n)return n.__call__.call(this,e,t);for(var i=0;i<r.length;i++){var l=n[r[i]].call(this,e,t);if(l)return(!o(l)||l.length>0&&!o(l[0]))&&this.debug(r[i],"didn't return a proper array"),l}return[]},t.prototype.processInline=function(e){return this.dialect.inline.__call__.call(this,String(e))},t.prototype.toTree=function(e,t){var n=e instanceof Array?e:this.split_blocks(e),r=this.tree;try{for(this.tree=t||this.tree||["markdown"];n.length;){var i=this.processBlock(n.shift(),n);i.length&&this.tree.push.apply(this.tree,i)}return this.tree}finally{t&&(this.tree=r)}},t.prototype.debug=function(){var e=Array.prototype.slice.call(arguments);e.unshift(this.debug_indent),"undefined"!=typeof print&&print.apply(print,e),"undefined"!=typeof console&&void 0!==console.log&&console.log.apply(null,e)},t.prototype.loop_re_over_block=function(e,t,n){for(var r,i=t.valueOf();i.length&&null!=(r=e.exec(i));)i=i.substr(r[0].length),n.call(this,r);return i},t.dialects={},t.dialects.Gruber={block:{atxHeader:function(e,t){var n=e.match(/^(#{1,6})\s*(.*?)\s*#*\s*(?:\n|$)/);if(n){var r=["header",{level:n[1].length}];return Array.prototype.push.apply(r,this.processInline(n[2])),n[0].length<e.length&&t.unshift(i(e.substr(n[0].length),e.trailing,e.lineNumber+2)),[r]}},setextHeader:function(e,t){var n=e.match(/^(.*)\n([-=])\2\2+(?:\n|$)/);if(n){var r=["header",{level:"="===n[2]?1:2},n[1]];return n[0].length<e.length&&t.unshift(i(e.substr(n[0].length),e.trailing,e.lineNumber+2)),[r]}},code:function(e,t){var n=[],r=/^(?: {0,3}\t| {4})(.*)\n?/;if(e.match(r)){e:for(;;){var l=this.loop_re_over_block(r,e.valueOf(),function(e){n.push(e[1])});if(l.length){t.unshift(i(l,e.trailing));break e}if(!t.length)break e;if(!t[0].match(r))break e;n.push(e.trailing.replace(/[^\n]/g,"").substring(2)),e=t.shift()}return[["code_block",n.join("\n")]]}},horizRule:function(e,t){var n=e.match(/^(?:([\s\S]*?)\n)?[ \t]*([-_*])(?:[ \t]*\2){2,}[ \t]*(?:\n([\s\S]*))?$/);if(n){var r=[["hr"]];return n[1]&&r.unshift.apply(r,this.processBlock(n[1],[])),n[3]&&t.unshift(i(n[3])),r}},lists:function(){var e="[*+-]|\\d+\\.",t=/[*+-]/,n=new RegExp("^( {0,3})("+e+")[ \t]+"),r="(?: {0,3}\\t| {4})";function l(e,t,n,r){if(t)e.push(["para"].concat(n));else{var i=e[e.length-1]instanceof Array&&"para"==e[e.length-1][0]?e[e.length-1]:e;r&&e.length>1&&n.unshift(r);for(var l=0;l<n.length;l++){var s=n[l];"string"==typeof s&&i.length>1&&"string"==typeof i[i.length-1]?i[i.length-1]+=s:i.push(s)}}}function s(e,t){for(var n=new RegExp("^("+r+"{"+e+"}.*?\\n?)*$"),l=new RegExp("^"+r+"{"+e+"}","gm"),s=[];t.length>0&&n.exec(t[0]);){var a=t.shift(),c=a.replace(l,"");s.push(i(c,a.trailing,a.lineNumber))}return s}function a(e,t,n){var r=e.list,i=r[r.length-1];if(!(i[1]instanceof Array&&"para"==i[1][0]))if(t+1==n.length)i.push(["para"].concat(i.splice(1,i.length-1)));else{var l=i.pop();i.push(["para"].concat(i.splice(1,i.length-1)),l)}}return function(i,o){var h=i.match(n);if(h){for(var u,f,p,g=[],v=j(h),_=!1,d=[g[0].list];;){for(var b=i.split(/(?=\n)/),k="",m=0;m<b.length;m++){var y="",w=b[m].replace(/^\n/,function(e){return y=e,""}),$=(p=g.length,new RegExp("(?:^("+r+"{0,"+p+"} {0,3})("+e+")\\s+)|(^"+r+"{0,"+(p-1)+"}[ ]{0,4})"));if(void 0!==(h=w.match($))[1]){k.length&&(l(u,_,this.processInline(k),y),_=!1,k=""),h[1]=h[1].replace(/ {0,3}\t/g,"    ");var M=Math.floor(h[1].length/4)+1;if(M>g.length)v=j(h),u.push(v),u=v[1]=["listitem"];else{var x=!1;for(f=0;f<g.length;f++)if(g[f].indent==h[1]){v=g[f].list,g.splice(f+1,g.length-(f+1)),x=!0;break}x||(++M<=g.length?(g.splice(M,g.length-M),v=g[M-1].list):(v=j(h),u.push(v))),u=["listitem"],v.push(u)}y=""}w.length>h[0].length&&(k+=y+w.substr(h[0].length))}k.length&&(l(u,_,this.processInline(k),y),_=!1,k="");var S=s(g.length,o);S.length>0&&(c(g,a,this),u.push.apply(u,this.toTree(S,[])));var A=o[0]&&o[0].valueOf()||"";if(!A.match(n)&&!A.match(/^ /))break;i=o.shift();var I=this.dialect.block.horizRule(i,o);if(I){d.push.apply(d,I);break}c(g,a,this),_=!0}return d}function j(e){var n=t.exec(e[2])?["bulletlist"]:["numberlist"];return g.push({list:n,indent:e[1]}),n}}}(),blockquote:function(e,t){if(e.match(/^>/m)){var n=[];if(">"!=e[0]){for(var r=e.split(/\n/),l=[],s=e.lineNumber;r.length&&">"!=r[0][0];)l.push(r.shift()),s++;var a=i(l.join("\n"),"\n",e.lineNumber);n.push.apply(n,this.processBlock(a,[])),e=i(r.join("\n"),e.trailing,s)}for(;t.length&&">"==t[0][0];){var c=t.shift();e=i(e+e.trailing+c,c.trailing,e.lineNumber)}var o=e.replace(/^> ?/gm,""),f=(this.tree,this.toTree(o,["blockquote"])),p=u(f);return p&&p.references&&(delete p.references,h(p)&&f.splice(1,1)),n.push(f),n}},referenceDefn:function(e,t){var n=/^\s*\[(.*?)\]:\s*(\S+)(?:\s+(?:(['"])(.*?)\3|\((.*?)\)))?\n?/;if(e.match(n)){u(this.tree)||this.tree.splice(1,0,{});var r=u(this.tree);void 0===r.references&&(r.references={});var l=this.loop_re_over_block(n,e,function(e){e[2]&&"<"==e[2][0]&&">"==e[2][e[2].length-1]&&(e[2]=e[2].substring(1,e[2].length-1));var t=r.references[e[1].toLowerCase()]={href:e[2]};void 0!==e[4]?t.title=e[4]:void 0!==e[5]&&(t.title=e[5])});return l.length&&t.unshift(i(l,e.trailing)),[]}},para:function(e,t){return[["para"].concat(this.processInline(e))]}}},t.dialects.Gruber.inline={__oneElement__:function(e,t,n){var r,i;return t=t||this.dialect.inline.__patterns__,(r=new RegExp("([\\s\\S]*?)("+(t.source||t)+")").exec(e))?r[1]?[r[1].length,r[1]]:(r[2]in this.dialect.inline&&(i=this.dialect.inline[r[2]].call(this,e.substr(r.index),r,n||[])),i=i||[r[2].length,r[2]]):[e.length,e]},__call__:function(e,t){var n,r=[];function i(e){"string"==typeof e&&"string"==typeof r[r.length-1]?r[r.length-1]+=e:r.push(e)}for(;e.length>0;)n=this.dialect.inline.__oneElement__.call(this,e,t,r),e=e.substr(n.shift()),c(n,i);return r},"]":function(){},"}":function(){},__escape__:/^\\[\\`\*_{}\[\]()#\+.!\-]/,"\\":function(e){return this.dialect.inline.__escape__.exec(e)?[2,e.charAt(1)]:[1,"\\"]},"![":function(e){var t=e.match(/^!\[(.*?)\][ \t]*\([ \t]*([^")]*?)(?:[ \t]+(["'])(.*?)\3)?[ \t]*\)/);if(t){t[2]&&"<"==t[2][0]&&">"==t[2][t[2].length-1]&&(t[2]=t[2].substring(1,t[2].length-1)),t[2]=this.dialect.inline.__call__.call(this,t[2],/\\/)[0];var n={alt:t[1],href:t[2]||""};return void 0!==t[4]&&(n.title=t[4]),[t[0].length,["img",n]]}return(t=e.match(/^!\[(.*?)\][ \t]*\[(.*?)\]/))?[t[0].length,["img_ref",{alt:t[1],ref:t[2].toLowerCase(),original:t[0]}]]:[2,"!["]},"[":function(e){var n=String(e),r=t.DialectHelpers.inline_until_char.call(this,e.substr(1),"]");if(!r)return[1,"["];var i,l,s=1+r[0],a=r[1],c=(e=e.substr(s)).match(/^\s*\([ \t]*([^"']*)(?:[ \t]+(["'])(.*?)\2)?[ \t]*\)/);if(c){var o=c[1];if(s+=c[0].length,o&&"<"==o[0]&&">"==o[o.length-1]&&(o=o.substring(1,o.length-1)),!c[3])for(var h=1,u=0;u<o.length;u++)switch(o[u]){case"(":h++;break;case")":0==--h&&(s-=o.length-u,o=o.substring(0,u))}return l={href:(o=this.dialect.inline.__call__.call(this,o,/\\/)[0])||""},void 0!==c[3]&&(l.title=c[3]),i=["link",l].concat(a),[s,i]}return(c=e.match(/^\s*\[(.*?)\]/))?(s+=c[0].length,i=["link_ref",l={ref:(c[1]||String(a)).toLowerCase(),original:n.substr(0,s)}].concat(a),[s,i]):1==a.length&&"string"==typeof a[0]?(i=["link_ref",l={ref:a[0].toLowerCase(),original:n.substr(0,s)},a[0]],[s,i]):[1,"["]},"<":function(e){var t;return null!=(t=e.match(/^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\.[a-zA-Z]+))>/))?t[3]?[t[0].length,["link",{href:"mailto:"+t[3]},t[3]]]:"mailto"==t[2]?[t[0].length,["link",{href:t[1]},t[1].substr("mailto:".length)]]:[t[0].length,["link",{href:t[1]},t[1]]]:[1,"<"]},"`":function(e){var t=e.match(/(`+)(([\s\S]*?)\1)/);return t&&t[2]?[t[1].length+t[2].length,["inlinecode",t[3]]]:[1,"`"]},"  \n":function(e){return[3,["linebreak"]]}},t.dialects.Gruber.inline["**"]=s("strong","**"),t.dialects.Gruber.inline.__=s("strong","__"),t.dialects.Gruber.inline["*"]=s("em","*"),t.dialects.Gruber.inline._=s("em","_"),t.buildBlockOrder=function(e){var t=[];for(var n in e)"__order__"!=n&&"__call__"!=n&&t.push(n);e.__order__=t},t.buildInlinePatterns=function(e){var t=[];for(var n in e)if(!n.match(/^__.*__$/)){var r=n.replace(/([\\.*+?|()\[\]{}])/g,"\\$1").replace(/\n/,"\\n");t.push(1==n.length?r:"(?:"+r+")")}t=t.join("|"),e.__patterns__=t;var i=e.__call__;e.__call__=function(e,n){return null!=n?i.call(this,e,n):i.call(this,e,t)}},t.DialectHelpers={},t.DialectHelpers.inline_until_char=function(e,t){for(var n=0,r=[];;){if(e.charAt(n)==t)return[++n,r];if(n>=e.length)return null;var i=this.dialect.inline.__oneElement__.call(this,e.substr(n));n+=i[0],r.push.apply(r,i.slice(1))}},t.subclassDialect=function(e){function t(){}function n(){}return t.prototype=e.block,n.prototype=e.inline,{block:new t,inline:new n}},t.buildBlockOrder(t.dialects.Gruber.block),t.buildInlinePatterns(t.dialects.Gruber.inline),t.dialects.Maruku=t.subclassDialect(t.dialects.Gruber),t.dialects.Maruku.processMetaHash=function(e){for(var t=function(e){var t=e.split(""),n=[""],r=!1;for(;t.length;){var i=t.shift();switch(i){case" ":r?n[n.length-1]+=i:n.push("");break;case"'":case'"':r=!r;break;case"\\":i=t.shift();default:n[n.length-1]+=i}}return n}(e),n={},r=0;r<t.length;++r)if(/^#/.test(t[r]))n.id=t[r].substring(1);else if(/^\./.test(t[r]))n.class?n.class=n.class+t[r].replace(/./," "):n.class=t[r].substring(1);else if(/\=/.test(t[r])){var i=t[r].split(/\=/);n[i[0]]=i[1]}return n},t.dialects.Maruku.block.document_meta=function(e,t){if(!(e.lineNumber>1)&&e.match(/^(?:\w+:.*\n)*\w+:.*$/)){u(this.tree)||this.tree.splice(1,0,{});var n=e.split(/\n/);for(p in n){var r=n[p].match(/(\w+):\s*(.*)$/),i=r[1].toLowerCase(),l=r[2];this.tree[1][i]=l}return[]}},t.dialects.Maruku.block.block_meta=function(e,t){var n=e.match(/(^|\n) {0,3}\{:\s*((?:\\\}|[^\}])*)\s*\}$/);if(n){var r,i=this.dialect.processMetaHash(n[2]);if(""===n[1]){var l=this.tree[this.tree.length-1];if(r=u(l),"string"==typeof l)return;for(a in r||(r={},l.splice(1,0,r)),i)r[a]=i[a];return[]}var s=e.replace(/\n.*$/,""),c=this.processBlock(s,[]);for(a in(r=u(c[0]))||(r={},c[0].splice(1,0,r)),i)r[a]=i[a];return c}},t.dialects.Maruku.block.definition_list=function(e,t){var n,r=/^((?:[^\s:].*\n)+):\s+([\s\S]+)$/,i=["dl"];if(a=e.match(r)){for(var l=[e];t.length&&r.exec(t[0]);)l.push(t.shift());for(var s=0;s<l.length;++s){var a,c=(a=l[s].match(r))[1].replace(/\n$/,"").split(/\n/),o=a[2].split(/\n:\s+/);for(n=0;n<c.length;++n)i.push(["dt",c[n]]);for(n=0;n<o.length;++n)i.push(["dd"].concat(this.processInline(o[n].replace(/(\n)\s+/,"$1"))))}return[i]}},t.dialects.Maruku.block.table=function(e,t){var n,r,i=function(e,t){(t=t||"\\s").match(/^[\\|\[\]{}?*.+^$]$/)&&(t="\\"+t);for(var n,r=[],i=new RegExp("^((?:\\\\.|[^\\\\"+t+"])*)"+t+"(.*)");n=e.match(i);)r.push(n[1]),e=n[2];return r.push(e),r};if(r=e.match(/^ {0,3}\|(.+)\n {0,3}\|\s*([\-:]+[\-| :]*)\n((?:\s*\|.*(?:\n|$))*)(?=\n|$)/))r[3]=r[3].replace(/^\s*\|/gm,"");else if(!(r=e.match(/^ {0,3}(\S(?:\\.|[^\\|])*\|.*)\n {0,3}([\-:]+\s*\|[\-| :]*)\n((?:(?:\\.|[^\\|])*\|.*(?:\n|$))*)(?=\n|$)/)))return;var l=["table",["thead",["tr"]],["tbody"]];r[2]=r[2].replace(/\|\s*$/,"").split("|");var s=[];for(c(r[2],function(e){e.match(/^\s*-+:\s*$/)?s.push({align:"right"}):e.match(/^\s*:-+\s*$/)?s.push({align:"left"}):e.match(/^\s*:-+:\s*$/)?s.push({align:"center"}):s.push({})}),r[1]=i(r[1].replace(/\|\s*$/,""),"|"),n=0;n<r[1].length;n++)l[1][1].push(["th",s[n]||{}].concat(this.processInline(r[1][n].trim())));return c(r[3].replace(/\|\s*$/gm,"").split("\n"),function(e){var t=["tr"];for(e=i(e,"|"),n=0;n<e.length;n++)t.push(["td",s[n]||{}].concat(this.processInline(e[n].trim())));l[2].push(t)},this),[l]},t.dialects.Maruku.inline["{:"]=function(e,t,n){if(!n.length)return[2,"{:"];var r=n[n.length-1];if("string"==typeof r)return[2,"{:"];var i=e.match(/^\{:\s*((?:\\\}|[^\}])*)\s*\}/);if(!i)return[2,"{:"];var l=this.dialect.processMetaHash(i[1]),s=u(r);for(var a in s||(s={},r.splice(1,0,s)),l)s[a]=l[a];return[i[0].length,""]},t.dialects.Maruku.inline.__escape__=/^\\[\\`\*_{}\[\]()#\+.!\-|:]/,t.buildBlockOrder(t.dialects.Maruku.block),t.buildInlinePatterns(t.dialects.Maruku.inline);var c,o=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)};c=Array.prototype.forEach?function(e,t,n){return e.forEach(t,n)}:function(e,t,n){for(var r=0;r<e.length;r++)t.call(n||e,e[r],r,e)};var h=function(e){for(var t in e)if(hasOwnProperty.call(e,t))return!1;return!0};function u(e){return o(e)&&e.length>1&&"object"==typeof e[1]&&!o(e[1])?e[1]:void 0}function f(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function g(e){if("string"==typeof e)return f(e);var t=e.shift(),n={},r=[];for(!e.length||"object"!=typeof e[0]||e[0]instanceof Array||(n=e.shift());e.length;)r.push(g(e.shift()));var i="";for(var l in n)i+=" "+l+'="'+f(n[l])+'"';return"img"==t||"br"==t||"hr"==t?"<"+t+i+"/>":"<"+t+i+">"+r.join("")+"</"+t+">"}e.renderJsonML=function(e,t){(t=t||{}).root=t.root||!1;var n=[];if(t.root)n.push(g(e));else for(e.shift(),!e.length||"object"!=typeof e[0]||e[0]instanceof Array||e.shift();e.length;)n.push(g(e.shift()));return n.join("\n\n")}}("undefined"==typeof exports?(window.markdown={},window.markdown):exports);
},{"util":"wqTM"}],"FmXw":[function(require,module,exports) {
exports.markdown=require("./markdown"),exports.parse=exports.markdown.toHTML;
},{"./markdown":"NIRD"}],"AHs7":[function(require,module,exports) {
module.exports=[{rendered_body:'\n<h1>\n<span id="dockerでdocker-image-push-dockeridというコマンドを実行した時" class="fragment"></span><a href="#docker%E3%81%A7docker-image-push-dockerid%E3%81%A8%E3%81%84%E3%81%86%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%9F%E6%99%82"><i class="fa fa-link"></i></a>Dockerで<code>docker image push dockerID</code>というコマンドを実行した時</h1>\n\n<p><code>denied: requested access to the resource is denied</code><br>\nこの様に表示された時はまず指定している<strong>dockerID</strong>が自分dockerIDがあっているかを確認する。</p>\n\n<p>これでも解決されない時(preparingとwaitingまで出たけどまたdenitedが出た)は、<br>\nおそらくpermissionの問題だと思うので、<br>\n<code>docker login</code>というコマンドを叩いてログインすれば正しくpushできるはず。</p>\n',body:"#Dockerで```docker image push dockerID```というコマンドを実行した時\n```denied: requested access to the resource is denied```\nこの様に表示された時はまず指定している__dockerID__が自分dockerIDがあっているかを確認する。\n\nこれでも解決されない時(preparingとwaitingまで出たけどまたdenitedが出た)は、\nおそらくpermissionの問題だと思うので、\n```docker login```というコマンドを叩いてログインすれば正しくpushできるはず。\n",coediting:!1,comments_count:0,created_at:"2020-11-17T22:28:33+09:00",group:null,id:"0fff0b7c89297e8d130b",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Docker",versions:[]},{name:"DockerHub",versions:[]}],title:"Dockerでpush時にrequested access to the resource is deniedとなる時",updated_at:"2020-11-17T22:28:33+09:00",url:"https://qiita.com/Naruse__0/items/0fff0b7c89297e8d130b",user:{description:null,facebook_id:null,followees_count:1,followers_count:0,github_login_name:"naruse666",id:"Naruse__0",items_count:2,linkedin_id:null,location:null,name:"",organization:null,permanent_id:722539,profile_image_url:"https://secure.gravatar.com/avatar/81cbcee67f9adb4161bbedf01835d766",team_only:!1,twitter_screen_name:"Naruse__ganbaru",website_url:null},page_views_count:null},{rendered_body:'\n<h1>\n<span id="はじめに" class="fragment"></span><a href="#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB"><i class="fa fa-link"></i></a>はじめに</h1>\n\n<p>ラズパイやJetsonでCustomVision推論するときに、時間かかるわエラーが出るわでなぜかonnxruntimeが入らないのでOpenCVでやってみようと思いました。その予行演習としてまずはWindowsノートPCで動かしてラズパイ＋Windowsで動かそうと思います。ちなみに、ノートPCで推論するなら普通にonnxruntime入れるほうが手っ取り早いです。</p>\n\n<h1>\n<span id="ノートpcで推論" class="fragment"></span><a href="#%E3%83%8E%E3%83%BC%E3%83%88pc%E3%81%A7%E6%8E%A8%E8%AB%96"><i class="fa fa-link"></i></a>ノートPCで推論</h1>\n\n<p><strong>環境</strong></p>\n\n<ul>\n<li>Python3.6(Anaconda)</li>\n<li>OpenCV&gt;=4.0.0</li>\n</ul>\n\n<p>必要なライブラリは、OpenCVとpillowとnumpyです。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>pip install pillow numpy opencv-python\n</pre></div></div>\n\n<p>OpenCVはバージョン4以降じゃないとだめかもです。<br>\nCustomVisionのモデルは、ONNXでエクスポートしてダウンロードしておいてください。Compactドメインで学習して、パフォーマンスタブからエクスポートできます(<a href="https://docs.microsoft.com/ja-jp/azure/cognitive-services/custom-vision-service/export-your-model" rel="nofollow noopener" target="_blank">参考</a>)。<br>\n展開したら以下のような構成になっていると思います。C#とPythonのサンプルコードがついてます。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>$ tree /f\nE:.\n│  cvexport.manifest\n│  labels.txt\n│  LICENSE\n│  model.onnx\n│\n├─CSharp\n│      ObjectDetection.cs\n│\n└─python\n    │  cntk_predict.py\n    │  object_detection.py\n    │  onnxruntime_predict.py\n    │\n    └─__pycache__\n            object_detection.cpython-36.pyc\n</pre></div></div>\n\n<p>pythonというフォルダに移動して以下のコードを保存します。</p>\n\n<div class="code-frame" data-lang="python">\n<div class="code-lang"><span class="bold">inference.py</span></div>\n<div class="highlight"><pre><span class="kn">import</span> <span class="nn">cv2</span>\n<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>\n<span class="kn">from</span> <span class="nn">object_detection</span> <span class="kn">import</span> <span class="n">ObjectDetection</span>\n<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span><span class="p">,</span> <span class="n">ImageDraw</span>\n\n<span class="n">filename</span> <span class="o">=</span> <span class="s">\'test1.png\'</span>        <span class="c1"># 推論したい画像のパス\n</span><span class="n">modelname</span> <span class="o">=</span> <span class="s">\'../model.onnx\'</span>   <span class="c1"># 推論に使うモデルのパス\n</span><span class="n">labelpath</span> <span class="o">=</span> <span class="s">\'../labels.txt\'</span>   <span class="c1"># エクスポートした中にあったlabels.txtへのパス\n</span>\n<span class="k">class</span> <span class="nc">ODbyCV2</span><span class="p">(</span><span class="n">ObjectDetection</span><span class="p">):</span>\n    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">model_filename</span><span class="p">,</span> <span class="n">labels</span><span class="p">):</span>\n        <span class="nb">super</span><span class="p">(</span><span class="n">ODbyCV2</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="n">labels</span><span class="p">)</span>\n        <span class="bp">self</span><span class="p">.</span><span class="n">model</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">dnn</span><span class="p">.</span><span class="n">readNetFromONNX</span><span class="p">(</span><span class="n">modelname</span><span class="p">)</span>\n    <span class="k">def</span> <span class="nf">predict</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">img</span><span class="p">):</span>\n        <span class="n">img</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">pil2cv</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>\n        <span class="n">h</span><span class="p">,</span><span class="n">w</span><span class="p">,</span><span class="n">c</span> <span class="o">=</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span>\n        <span class="bp">self</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">setInput</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">dnn</span><span class="p">.</span><span class="n">blobFromImage</span><span class="p">(</span><span class="n">img</span><span class="p">,</span><span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="n">w</span><span class="p">,</span><span class="n">h</span><span class="p">),</span><span class="n">swapRB</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">crop</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span>\n        <span class="n">results</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">forward</span><span class="p">()</span>\n        <span class="k">return</span> <span class="n">np</span><span class="p">.</span><span class="n">squeeze</span><span class="p">(</span><span class="n">results</span><span class="p">).</span><span class="n">transpose</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)).</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>\n    <span class="k">def</span> <span class="nf">pil2cv</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">image</span><span class="p">):</span>\n        <span class="n">new_image</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>\n        <span class="k">if</span> <span class="n">new_image</span><span class="p">.</span><span class="n">ndim</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>\n            <span class="k">pass</span>\n        <span class="k">elif</span> <span class="n">new_image</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>\n            <span class="n">new_image</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">new_image</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_RGB2BGR</span><span class="p">)</span>\n        <span class="k">elif</span> <span class="n">new_image</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>\n            <span class="n">new_image</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">new_image</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_RGBA2BGRA</span><span class="p">)</span>\n        <span class="k">return</span> <span class="n">new_image</span>\n\n<span class="c1"># ラベル読み込み\n</span><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">labelpath</span><span class="p">,</span> <span class="s">\'r\'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>\n    <span class="n">labels</span> <span class="o">=</span> <span class="p">[</span><span class="n">l</span><span class="p">.</span><span class="n">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">f</span><span class="p">.</span><span class="n">readlines</span><span class="p">()]</span>\n\n<span class="n">model</span> <span class="o">=</span> <span class="n">ODbyCV2</span><span class="p">(</span><span class="n">modelname</span><span class="p">,</span><span class="n">labels</span><span class="p">)</span>\n<span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>\n\n<span class="c1"># 推論\n</span><span class="n">results</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict_image</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>\n<span class="k">print</span><span class="p">(</span><span class="n">results</span><span class="p">)</span>\n\n<span class="c1"># 以下推論結果の表示\n</span><span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>\n<span class="n">height</span><span class="p">,</span><span class="n">width</span><span class="p">,</span><span class="n">channel</span> <span class="o">=</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span>\n\n<span class="n">font_face</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">FONT_HERSHEY_DUPLEX</span>\n<span class="n">font_scale</span> <span class="o">=</span> <span class="mf">0.6</span>\n<span class="n">font_thickness</span> <span class="o">=</span> <span class="mi">1</span>\n<span class="k">for</span> <span class="n">result</span> <span class="ow">in</span> <span class="p">[</span><span class="n">results</span><span class="p">[</span><span class="mi">0</span><span class="p">]]:</span>\n    <span class="c1"># if result[\'probability\'] &gt;= 0.3:\n</span>    <span class="n">text_str</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="s">\'tagName\'</span><span class="p">]))</span>\n    <span class="n">text_w</span><span class="p">,</span> <span class="n">text_h</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">getTextSize</span><span class="p">(</span><span class="n">text_str</span><span class="p">,</span> <span class="n">font_face</span><span class="p">,</span> <span class="n">font_scale</span><span class="p">,</span> <span class="n">font_thickness</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>\n    <span class="n">score_w</span><span class="p">,</span> <span class="n">score_h</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">getTextSize</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="s">\'probability\'</span><span class="p">],</span><span class="mi">2</span><span class="p">)),</span> <span class="n">font_face</span><span class="p">,</span> <span class="n">font_scale</span><span class="p">,</span> <span class="n">font_thickness</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>\n    <span class="n">x1</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">width</span><span class="o">*</span><span class="n">result</span><span class="p">[</span><span class="s">\'boundingBox\'</span><span class="p">][</span><span class="s">\'left\'</span><span class="p">])</span>\n    <span class="n">y1</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">height</span><span class="o">*</span><span class="n">result</span><span class="p">[</span><span class="s">\'boundingBox\'</span><span class="p">][</span><span class="s">\'top\'</span><span class="p">])</span>\n    <span class="n">x2</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">width</span><span class="o">*</span><span class="n">result</span><span class="p">[</span><span class="s">\'boundingBox\'</span><span class="p">][</span><span class="s">\'width\'</span><span class="p">]</span><span class="o">+</span><span class="n">width</span><span class="o">*</span><span class="n">result</span><span class="p">[</span><span class="s">\'boundingBox\'</span><span class="p">][</span><span class="s">\'left\'</span><span class="p">])</span>\n    <span class="n">y2</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">height</span><span class="o">*</span><span class="n">result</span><span class="p">[</span><span class="s">\'boundingBox\'</span><span class="p">][</span><span class="s">\'height\'</span><span class="p">]</span><span class="o">+</span><span class="n">height</span><span class="o">*</span><span class="n">result</span><span class="p">[</span><span class="s">\'boundingBox\'</span><span class="p">][</span><span class="s">\'top\'</span><span class="p">])</span>\n    <span class="n">text_pt</span> <span class="o">=</span> <span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span> <span class="o">-</span> <span class="mi">3</span><span class="p">)</span>\n    <span class="n">text_color</span> <span class="o">=</span> <span class="p">[</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">]</span>\n    <span class="n">rgb</span> <span class="o">=</span> <span class="p">[</span><span class="mi">255</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span>\n    <span class="n">cv2</span><span class="p">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">),(</span><span class="n">x2</span><span class="p">,</span><span class="n">y2</span><span class="p">),</span><span class="n">rgb</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>\n    <span class="n">cv2</span><span class="p">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">),(</span><span class="n">x1</span><span class="o">+</span><span class="n">text_w</span><span class="p">,</span><span class="n">y1</span><span class="o">-</span><span class="n">text_h</span><span class="o">-</span><span class="mi">4</span><span class="p">),</span><span class="n">rgb</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>\n    <span class="n">cv2</span><span class="p">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">),(</span><span class="n">x1</span><span class="o">+</span><span class="n">score_w</span><span class="p">,</span><span class="n">y1</span><span class="o">+</span><span class="n">score_h</span><span class="o">+</span><span class="mi">4</span><span class="p">),</span><span class="n">rgb</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>\n    <span class="n">cv2</span><span class="p">.</span><span class="n">putText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">text_str</span><span class="p">,</span> <span class="n">text_pt</span><span class="p">,</span> <span class="n">font_face</span><span class="p">,</span> <span class="n">font_scale</span><span class="p">,</span> <span class="n">text_color</span><span class="p">,</span> <span class="n">font_thickness</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">LINE_AA</span><span class="p">)</span>\n    <span class="n">cv2</span><span class="p">.</span><span class="n">putText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="s">\'probability\'</span><span class="p">],</span><span class="mi">2</span><span class="p">)),</span> <span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span> <span class="o">+</span><span class="n">score_h</span><span class="p">),</span> <span class="n">font_face</span><span class="p">,</span> <span class="n">font_scale</span><span class="p">,</span> <span class="n">text_color</span><span class="p">,</span> <span class="n">font_thickness</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">LINE_AA</span><span class="p">)</span>\n\n<span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">\'test\'</span><span class="p">,</span><span class="n">img</span><span class="p">)</span>\n<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>\n<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>\n</pre></div>\n</div>\n\n<p>エクスポートしてきたときについているサンプルコードを参考にしました。object_detection.pyのObjectDetectionクラスを継承してpredict関数をオーバーライドしています。このコードを実行すると以下のような結果が得られます。8がtagName、0.72がprobabilityです。</p>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F685335%2F763bd8b5-676e-bfbc-9e20-14ac65d0121c.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=aad23ed37abd5bc9c2930fd33efa885a" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F685335%2F763bd8b5-676e-bfbc-9e20-14ac65d0121c.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=aad23ed37abd5bc9c2930fd33efa885a" alt="result.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/685335/763bd8b5-676e-bfbc-9e20-14ac65d0121c.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F685335%2F763bd8b5-676e-bfbc-9e20-14ac65d0121c.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=05417ce0e7c3dc909cfaf98cc7e1a9a6 1x" loading="lazy"></a></p>\n\n<h1>\n<span id="ラズパイwindows10で推論" class="fragment"></span><a href="#%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4windows10%E3%81%A7%E6%8E%A8%E8%AB%96"><i class="fa fa-link"></i></a>ラズパイ(Windows10)で推論</h1>\n\n<p>結論からいうと上記と全く同じ流れでできます。しかし、NumpyがWindows＋Armに対応してないのか、import時に以下のようなwarningが出て、推論時にもたくさんwarningが出てきます。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>C:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:172: RuntimeWarning: divide by zero encountered in exp2\n  eps=exp2(ld(-112)),\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:51: RuntimeWarning: divide by zero encountered in log10\n  self.precision = int(-log10(self.eps))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:52: RuntimeWarning: divide by zero encountered in power\n  self.resolution = float_to_float(float_conv(10) ** (-self.precision))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:184: RuntimeWarning: divide by zero encountered in exp2\n  epsneg_f80 = exp2(ld(-64))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:185: RuntimeWarning: divide by zero encountered in exp2\n  tiny_f80 = exp2(ld(-16382))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:199: RuntimeWarning: divide by zero encountered in exp2\n  eps=exp2(ld(-63)),\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:212: RuntimeWarning: divide by zero encountered in nextafter\n  if hasattr(umath, \'nextafter\')  # Missing on some platforms?\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:224: RuntimeWarning: divide by zero encountered in exp2\n  eps=exp2(ld(-105)),\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:225: RuntimeWarning: divide by zero encountered in exp2\n  epsneg= exp2(ld(-106)),\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:227: RuntimeWarning: divide by zero encountered in exp2\n  tiny=exp2(ld(-1022)))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\__init__.py:316: RuntimeWarning: divide by zero encountered in subtract\n  if not abs(x.dot(x) - 2.0) &lt; 1e-5:\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\__init__.py:316: RuntimeWarning: divide by zero encountered in absolute\n  if not abs(x.dot(x) - 2.0) &lt; 1e-5:\n</pre></div></div>\n\n<p><a href="https://github.com/numpy/numpy/issues/17747" rel="nofollow noopener" target="_blank">ここ</a>に同じwarningが出るという報告がありますが解決策はわからず...。import時はともかく推論実行時に出るのでうまく推論できているのかもわからないです(同じような結果が得られるのでただしそうではありますが...)。解決策があれば教えてください。</p>\n\n<h1>\n<span id="おわりに" class="fragment"></span><a href="#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB"><i class="fa fa-link"></i></a>おわりに</h1>\n\n<p>お疲れさまでした。opencvでCustomVisionのモデルの推論をしました。cv2.dnn.forward()の出力が何を表しているかもわかっていないので知っている方は教えていただければ幸いです。</p>\n\n<p>間違い等ありましたらご指摘よろしくお願いします。</p>\n\n<h1>\n<span id="参考" class="fragment"></span><a href="#%E5%8F%82%E8%80%83"><i class="fa fa-link"></i></a>参考</h1>\n\n<ul>\n<li><a href="https://qiita.com/mkht/items/9d173334dc5b26bfef46" id="reference-ae628a4bc665ceb86eae">ラズパイ4にWindows 10 on ARM64をインストールする</a></li>\n<li><a href="https://qiita.com/derodero24/items/f22c22b22451609908ee" id="reference-eced326668686dfd0894">【Python】Pillow ↔ OpenCV 変換</a></li>\n</ul>\n',body:"# はじめに\n\nラズパイやJetsonでCustomVision推論するときに、時間かかるわエラーが出るわでなぜかonnxruntimeが入らないのでOpenCVでやってみようと思いました。その予行演習としてまずはWindowsノートPCで動かしてラズパイ＋Windowsで動かそうと思います。ちなみに、ノートPCで推論するなら普通にonnxruntime入れるほうが手っ取り早いです。\n\n# ノートPCで推論\n\n**環境**\n\n- Python3.6(Anaconda)\n- OpenCV>=4.0.0\n\n\n必要なライブラリは、OpenCVとpillowとnumpyです。\n\n```\npip install pillow numpy opencv-python\n```\n\nOpenCVはバージョン4以降じゃないとだめかもです。\nCustomVisionのモデルは、ONNXでエクスポートしてダウンロードしておいてください。Compactドメインで学習して、パフォーマンスタブからエクスポートできます([参考](https://docs.microsoft.com/ja-jp/azure/cognitive-services/custom-vision-service/export-your-model))。\n展開したら以下のような構成になっていると思います。C#とPythonのサンプルコードがついてます。\n\n```\n$ tree /f\nE:.\n│  cvexport.manifest\n│  labels.txt\n│  LICENSE\n│  model.onnx\n│\n├─CSharp\n│      ObjectDetection.cs\n│\n└─python\n    │  cntk_predict.py\n    │  object_detection.py\n    │  onnxruntime_predict.py\n    │\n    └─__pycache__\n            object_detection.cpython-36.pyc\n```\n\npythonというフォルダに移動して以下のコードを保存します。\n\n```python:inference.py\nimport cv2\nimport numpy as np\nfrom object_detection import ObjectDetection\nfrom PIL import Image, ImageDraw\n\nfilename = 'test1.png'        # 推論したい画像のパス\nmodelname = '../model.onnx'   # 推論に使うモデルのパス\nlabelpath = '../labels.txt'   # エクスポートした中にあったlabels.txtへのパス\n\nclass ODbyCV2(ObjectDetection):\n    def __init__(self, model_filename, labels):\n        super(ODbyCV2, self).__init__(labels)\n        self.model = cv2.dnn.readNetFromONNX(modelname)\n    def predict(self, img):\n        img = self.pil2cv(img)\n        h,w,c = img.shape\n        self.model.setInput(cv2.dnn.blobFromImage(img,size=(w,h),swapRB=True,crop=False))\n        results = self.model.forward()\n        return np.squeeze(results).transpose((1,2,0)).astype(np.float32)\n    def pil2cv(self, image):\n        new_image = np.array(image, dtype=np.uint8)\n        if new_image.ndim == 2:\n            pass\n        elif new_image.shape[2] == 3:\n            new_image = cv2.cvtColor(new_image, cv2.COLOR_RGB2BGR)\n        elif new_image.shape[2] == 4:\n            new_image = cv2.cvtColor(new_image, cv2.COLOR_RGBA2BGRA)\n        return new_image\n\n# ラベル読み込み\nwith open(labelpath, 'r') as f:\n    labels = [l.strip() for l in f.readlines()]\n\nmodel = ODbyCV2(modelname,labels)\nimg = Image.open(filename)\n\n# 推論\nresults = model.predict_image(img)\nprint(results)\n\n# 以下推論結果の表示\nimg = cv2.imread(filename)\nheight,width,channel = img.shape\n\nfont_face = cv2.FONT_HERSHEY_DUPLEX\nfont_scale = 0.6\nfont_thickness = 1\nfor result in [results[0]]:\n    # if result['probability'] >= 0.3:\n    text_str = str(int(result['tagName']))\n    text_w, text_h = cv2.getTextSize(text_str, font_face, font_scale, font_thickness)[0]\n    score_w, score_h = cv2.getTextSize(str(round(result['probability'],2)), font_face, font_scale, font_thickness)[0]\n    x1 = int(width*result['boundingBox']['left'])\n    y1 = int(height*result['boundingBox']['top'])\n    x2 = int(width*result['boundingBox']['width']+width*result['boundingBox']['left'])\n    y2 = int(height*result['boundingBox']['height']+height*result['boundingBox']['top'])\n    text_pt = (x1, y1 - 3)\n    text_color = [255,255,255]\n    rgb = [255,0,0]\n    cv2.rectangle(img, (x1, y1),(x2,y2),rgb,2)\n    cv2.rectangle(img, (x1, y1),(x1+text_w,y1-text_h-4),rgb,-1)\n    cv2.rectangle(img, (x1, y1),(x1+score_w,y1+score_h+4),rgb,-1)\n    cv2.putText(img, text_str, text_pt, font_face, font_scale, text_color, font_thickness, cv2.LINE_AA)\n    cv2.putText(img, str(round(result['probability'],2)), (x1, y1 +score_h), font_face, font_scale, text_color, font_thickness, cv2.LINE_AA)\n        \ncv2.imshow('test',img)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n```\n\nエクスポートしてきたときについているサンプルコードを参考にしました。object_detection.pyのObjectDetectionクラスを継承してpredict関数をオーバーライドしています。このコードを実行すると以下のような結果が得られます。8がtagName、0.72がprobabilityです。\n\n![result.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/685335/763bd8b5-676e-bfbc-9e20-14ac65d0121c.png)\n\n# ラズパイ(Windows10)で推論\n\n結論からいうと上記と全く同じ流れでできます。しかし、NumpyがWindows＋Armに対応してないのか、import時に以下のようなwarningが出て、推論時にもたくさんwarningが出てきます。\n\n```\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:172: RuntimeWarning: divide by zero encountered in exp2\n  eps=exp2(ld(-112)),\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:51: RuntimeWarning: divide by zero encountered in log10\n  self.precision = int(-log10(self.eps))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:52: RuntimeWarning: divide by zero encountered in power\n  self.resolution = float_to_float(float_conv(10) ** (-self.precision))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:184: RuntimeWarning: divide by zero encountered in exp2\n  epsneg_f80 = exp2(ld(-64))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:185: RuntimeWarning: divide by zero encountered in exp2\n  tiny_f80 = exp2(ld(-16382))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:199: RuntimeWarning: divide by zero encountered in exp2\n  eps=exp2(ld(-63)),\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:212: RuntimeWarning: divide by zero encountered in nextafter\n  if hasattr(umath, 'nextafter')  # Missing on some platforms?\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:224: RuntimeWarning: divide by zero encountered in exp2\n  eps=exp2(ld(-105)),\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:225: RuntimeWarning: divide by zero encountered in exp2\n  epsneg= exp2(ld(-106)),\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\core\\getlimits.py:227: RuntimeWarning: divide by zero encountered in exp2\n  tiny=exp2(ld(-1022)))\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\__init__.py:316: RuntimeWarning: divide by zero encountered in subtract\n  if not abs(x.dot(x) - 2.0) < 1e-5:\nC:\\Users\\pi\\anaconda3\\envs\\test\\lib\\site-packages\\numpy\\__init__.py:316: RuntimeWarning: divide by zero encountered in absolute\n  if not abs(x.dot(x) - 2.0) < 1e-5:\n```\n\n[ここ](https://github.com/numpy/numpy/issues/17747)に同じwarningが出るという報告がありますが解決策はわからず...。import時はともかく推論実行時に出るのでうまく推論できているのかもわからないです(同じような結果が得られるのでただしそうではありますが...)。解決策があれば教えてください。\n\n\n# おわりに\nお疲れさまでした。opencvでCustomVisionのモデルの推論をしました。cv2.dnn.forward()の出力が何を表しているかもわかっていないので知っている方は教えていただければ幸いです。\n\n間違い等ありましたらご指摘よろしくお願いします。\n\n# 参考\n\n- [ラズパイ4にWindows 10 on ARM64をインストールする](https://qiita.com/mkht/items/9d173334dc5b26bfef46)\n- [【Python】Pillow ↔ OpenCV 変換](https://qiita.com/derodero24/items/f22c22b22451609908ee)\n",coediting:!1,comments_count:0,created_at:"2020-11-17T22:27:07+09:00",group:null,id:"2563d48bd2fb4637fccb",likes_count:0,private:!1,reactions_count:0,tags:[{name:"OpenCV",versions:[]},{name:"RaspberryPi",versions:[]},{name:"CustomVision",versions:[]}],title:"OpenCVでCustomVision推論",updated_at:"2020-11-17T22:27:07+09:00",url:"https://qiita.com/yosiiii/items/2563d48bd2fb4637fccb",user:{description:"大学院で制御工学を勉強しています。\r\n趣味はバイクに乗ることです。",facebook_id:"",followees_count:0,followers_count:0,github_login_name:null,id:"yosiiii",items_count:4,linkedin_id:"",location:"熊本",name:"",organization:"",permanent_id:685335,profile_image_url:"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/685335/4d33f198913677e047436cbae520aca39cc407b3/large.png?1602159536",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'<table>\n<thead>\n<tr>\n<th>開発環境</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>macOS Big Sur</td>\n</tr>\n</tbody>\n</table>\n\n<p>下記の記事を参考に環境構築を行ったのですが、<br>\nやれ<code>wget</code>コマンドが無いだの、<code>apt-get</code>コマンドが無いだの初心者の方への導入への障壁がいくつかあったため、<br>\nそれを乗り越えるための記事にしたいと思います。（※注：下記の記事は決して悪くありません。）</p>\n\n<table>\n<thead>\n<tr>\n<th>タイトル</th>\n<th>リンク</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5分で作るLaravel＋Vue.js開発環境（docker-compose）</td>\n<td><a href="https://qiita.com/yusukeito58/items/37bd551560e495dbd1b8" class="autolink" id="reference-78c879742258b3fc1629">https://qiita.com/yusukeito58/items/37bd551560e495dbd1b8</a></td>\n</tr>\n</tbody>\n</table>\n\n<h1>\n<span id="apt-getコマンドインストール" class="fragment"></span><a href="#apt-get%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB"><i class="fa fa-link"></i></a><code>apt-get</code>コマンドインストール</h1>\n\n<table>\n<thead>\n<tr>\n<th>タイトル</th>\n<th>リンク</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Mac - wgetコマンドをインストール（使えるようにする）</td>\n<td><a href="https://qiita.com/th4inf/items/f85c1b91065d85af67b9" class="autolink" id="reference-62bbad6e8aee0d509ec6">https://qiita.com/th4inf/items/f85c1b91065d85af67b9</a></td>\n</tr>\n</tbody>\n</table>\n\n<h1>\n<span id="apt-getコマンドインストール-1" class="fragment"></span><a href="#apt-get%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB-1"><i class="fa fa-link"></i></a><code>apt-get</code>コマンドインストール</h1>\n\n<table>\n<thead>\n<tr>\n<th>タイトル</th>\n<th>リンク</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>install apt-get to Mac</td>\n<td><a href="https://qiita.com/th4inf/items/f85c1b91065d85af67b9" class="autolink">https://qiita.com/th4inf/items/f85c1b91065d85af67b9</a></td>\n</tr>\n</tbody>\n</table>\n',body:"|開発環境|\n|---|\n|macOS Big Sur|\n\n\n\n下記の記事を参考に環境構築を行ったのですが、\nやれ`wget`コマンドが無いだの、`apt-get`コマンドが無いだの初心者の方への導入への障壁がいくつかあったため、\nそれを乗り越えるための記事にしたいと思います。（※注：下記の記事は決して悪くありません。）\n\n|タイトル|リンク|\n|---|---|\n|5分で作るLaravel＋Vue.js開発環境（docker-compose）|https://qiita.com/yusukeito58/items/37bd551560e495dbd1b8|\n\n# `apt-get`コマンドインストール\n|タイトル|リンク|\n|---|---|\n|Mac - wgetコマンドをインストール（使えるようにする）|https://qiita.com/th4inf/items/f85c1b91065d85af67b9|\n\n# `apt-get`コマンドインストール\n|タイトル|リンク|\n|---|---|\n|install apt-get to Mac|https://qiita.com/th4inf/items/f85c1b91065d85af67b9|\n",coediting:!1,comments_count:0,created_at:"2020-11-17T22:26:07+09:00",group:null,id:"5c01042ad4f7481447af",likes_count:0,private:!1,reactions_count:0,tags:[{name:"PHP",versions:[]},{name:"Laravel",versions:[]},{name:"Docker",versions:[]},{name:"Vue.js",versions:[]}],title:"5分で作るDocker＋Laravel PHP＋Vue.js開発環境構築",updated_at:"2020-11-17T22:26:07+09:00",url:"https://qiita.com/captainUmaru/items/5c01042ad4f7481447af",user:{description:"",facebook_id:"profile.php?id=100004569888629",followees_count:0,followers_count:0,github_login_name:null,id:"captainUmaru",items_count:6,linkedin_id:"",location:"",name:"Lightning Spring",organization:"",permanent_id:394931,profile_image_url:"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/394931/9e2fd3fbecbf8a32a5e85941ac53e14fba85487b/large.png?1605104726",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'<p>個人的メモです。</p>\n\n<h2>\n<span id="ダウンロードしたモデルの場所" class="fragment"></span><a href="#%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%97%E3%81%9F%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AE%E5%A0%B4%E6%89%80"><i class="fa fa-link"></i></a>ダウンロードしたモデルの場所</h2>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F65b43b75-591d-de15-d2c1-eddc0f7eb037.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=33c5ca5d0fbb131459c611b391302104" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F65b43b75-591d-de15-d2c1-eddc0f7eb037.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=33c5ca5d0fbb131459c611b391302104" alt="Screenshot from 2020-11-17 22-01-28.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/512516/65b43b75-591d-de15-d2c1-eddc0f7eb037.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F65b43b75-591d-de15-d2c1-eddc0f7eb037.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a06ddb7ec8f528d5a88482fd0d4e0a73 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="yamlファイル内容" class="fragment"></span><a href="#yaml%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%86%85%E5%AE%B9"><i class="fa fa-link"></i></a>yamlファイル内容</h2>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F01eb2583-ad1d-b60d-93d7-549175ae09c7.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f73b31aba4419b08ec985402a0a37401" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F01eb2583-ad1d-b60d-93d7-549175ae09c7.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f73b31aba4419b08ec985402a0a37401" alt="Screenshot from 2020-11-17 22-03-22.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/512516/01eb2583-ad1d-b60d-93d7-549175ae09c7.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F01eb2583-ad1d-b60d-93d7-549175ae09c7.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ff4bf170b2d09c76a1aa7fe759696974 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="stl表示サンプル" class="fragment"></span><a href="#stl%E8%A1%A8%E7%A4%BA%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB"><i class="fa fa-link"></i></a>STL表示サンプル</h2>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F82a1a84e-2232-7aeb-fbab-92b146d0688c.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f1a13f9144430f21f7595d341db8106d" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F82a1a84e-2232-7aeb-fbab-92b146d0688c.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f1a13f9144430f21f7595d341db8106d" alt="Screenshot from 2020-11-17 22-11-44.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/512516/82a1a84e-2232-7aeb-fbab-92b146d0688c.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F512516%2F82a1a84e-2232-7aeb-fbab-92b146d0688c.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d03117a65ee18a7fd02ecd104b7b0bd3 1x" loading="lazy"></a></p>\n',body:"個人的メモです。\n\n##ダウンロードしたモデルの場所\n![Screenshot from 2020-11-17 22-01-28.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/512516/65b43b75-591d-de15-d2c1-eddc0f7eb037.png)\n\n##yamlファイル内容\n![Screenshot from 2020-11-17 22-03-22.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/512516/01eb2583-ad1d-b60d-93d7-549175ae09c7.png)\n\n##STL表示サンプル\n![Screenshot from 2020-11-17 22-11-44.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/512516/82a1a84e-2232-7aeb-fbab-92b146d0688c.png)\n\n\n",coediting:!1,comments_count:0,created_at:"2020-11-17T22:17:52+09:00",group:null,id:"7b561d6b4f0b2632c07a",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Gazebo",versions:[]},{name:"Ignition",versions:[]}],title:"Ignition Gazebo モデル表示　メモ",updated_at:"2020-11-17T22:18:25+09:00",url:"https://qiita.com/moto4MBW/items/7b561d6b4f0b2632c07a",user:{description:null,facebook_id:null,followees_count:1,followers_count:0,github_login_name:null,id:"moto4MBW",items_count:1,linkedin_id:null,location:null,name:"",organization:null,permanent_id:512516,profile_image_url:"https://secure.gravatar.com/avatar/1bde3ccf590d427de12d8f7ed9661a8b",team_only:!1,twitter_screen_name:null,website_url:null},page_views_count:null},{rendered_body:'<p>未経験からエンジニアになって2年目になるのですが、そろそろ何かしらの資格に挑戦してみようかなあと思い、SAAを受験してみました。</p>\n\n<p>勉強期間、試験内容など、どんな感じだったかまとめていきたいと思います〜</p>\n\n<p>SAAの試験の概要は<a href="https://aws.amazon.com/jp/certification/certified-solutions-architect-associate/" rel="nofollow noopener" target="_blank">こちら</a></p>\n\n<h2>\n<span id="勉強時間勉強方法" class="fragment"></span><a href="#%E5%8B%89%E5%BC%B7%E6%99%82%E9%96%93%E5%8B%89%E5%BC%B7%E6%96%B9%E6%B3%95"><i class="fa fa-link"></i></a>勉強時間、勉強方法</h2>\n\n<p>勉強期間はトータルして大体5週間ちょっとぐらいです。9月下旬に勉強を始めて、11月16日に試験を受けたので、期間としては2ヶ月程ありますが、サボったり、仕事が忙しかったり、ドラマにはまってしまったりwと勉強してない期間も結構あったので、そこは省いた期間となります。</p>\n\n<p>教材は、Udemyで、<br>\n- AWS認定ソリューションアーキテクト – アソシエイト試験突破講座<br>\n- AWS認定ソリューションアーキテクト アソシエイト模擬試験問題集</p>\n\n<p>この２つを購入しました。</p>\n\n<p>勉強方法としてはいたってシンプルで、</p>\n\n<ol>\n<li>教材の動画をみて内容を理解</li>\n<li>問題を解く。</li>\n<li>解けるようになるまで繰り返す。</li>\n</ol>\n\n<p>こんな感じでやりました。</p>\n\n<p>正直、これやっとけば全然受かるやろと調子こいてましたが、蓋を開けてみたら、合格ラインが720/1000のところ、741点とめっちゃギリギリで合格してました。。ひえ。。</p>\n\n<p>今になってから言えることですが、結構ちゃんと勉強しないと受からない試験なんじゃないかなと思います。。</p>\n\n<p>自分の場合、ただひたすら解いて覚えることに集中してしまい、</p>\n\n<p>内容を根本から理解する、仕組みを理解する</p>\n\n<p>といったことがちょっと甘くなってました。</p>\n\n<p>これが、あまり点数が取れなかった原因だと思ってます。</p>\n\n<p>ただ、このudemyの教材で、試験直前に復習していた内容が、ほぼほぼそのまま出たりもしました。(逆にそれがなかったら落ちてたんじゃないかとw)</p>\n\n<p>なので、この教材はすごいおすすめです。</p>\n\n<p>一つ言うなら、ちょっと解説が分かりにくいというか、足りないことがちょこちょこあるので、そういったところは、随時調べて意味を理解する、、という作業が必要になるかと思います。</p>\n\n<h2>\n<span id="受験時の試験内容" class="fragment"></span><a href="#%E5%8F%97%E9%A8%93%E6%99%82%E3%81%AE%E8%A9%A6%E9%A8%93%E5%86%85%E5%AE%B9"><i class="fa fa-link"></i></a>受験時の試験内容</h2>\n\n<p>試験内容としては、主に</p>\n\n<ul>\n<li>EBS, EFS, S3 </li>\n<li>Auto Scaling, Ec2、CloudFrontあたりを使ったアーキテクチャ構成</li>\n</ul>\n\n<p>この辺りの問題が結構出てきた印象でした。</p>\n\n<p>試験を受けた後に、分野別にスコアと評価が見られるのですが、「高パフォーマンスアーキテクチャの設計」については、再学習した方が良いよーと書かれてました。やはり問題を解くだけでなく、特にアーキテクチャに関しては、自分で図を書いてみたり等、理解することに重点を置いた勉強も大事なのではないかと思いました。</p>\n\n<h3>\n<span id="受験後の感想" class="fragment"></span><a href="#%E5%8F%97%E9%A8%93%E5%BE%8C%E3%81%AE%E6%84%9F%E6%83%B3"><i class="fa fa-link"></i></a>受験後の感想</h3>\n\n<p>資格としては取得できたものの、<br>\n知識としては曖昧な部分も結構多く、決してドヤ顔はできません。</p>\n\n<p>実際に触ってなんぼ、なところもあるかなと思っているので、<br>\n改めて、色々アプリを動かしてみながらインフラを触っていくことでもっとできるようになれればと思います〜</p>\n',body:"未経験からエンジニアになって2年目になるのですが、そろそろ何かしらの資格に挑戦してみようかなあと思い、SAAを受験してみました。\n\n\n勉強期間、試験内容など、どんな感じだったかまとめていきたいと思います〜\n\n\nSAAの試験の概要は[こちら](https://aws.amazon.com/jp/certification/certified-solutions-architect-associate/)\n\n\n## 勉強時間、勉強方法\n\n\n勉強期間はトータルして大体5週間ちょっとぐらいです。9月下旬に勉強を始めて、11月16日に試験を受けたので、期間としては2ヶ月程ありますが、サボったり、仕事が忙しかったり、ドラマにはまってしまったりwと勉強してない期間も結構あったので、そこは省いた期間となります。\n\n教材は、Udemyで、\n- AWS認定ソリューションアーキテクト – アソシエイト試験突破講座\n- AWS認定ソリューションアーキテクト アソシエイト模擬試験問題集\n\nこの２つを購入しました。\n\n勉強方法としてはいたってシンプルで、\n\n1. 教材の動画をみて内容を理解\n2. 問題を解く。\n3. 解けるようになるまで繰り返す。\n\nこんな感じでやりました。\n\n正直、これやっとけば全然受かるやろと調子こいてましたが、蓋を開けてみたら、合格ラインが720/1000のところ、741点とめっちゃギリギリで合格してました。。ひえ。。\n\n\n今になってから言えることですが、結構ちゃんと勉強しないと受からない試験なんじゃないかなと思います。。\n\n自分の場合、ただひたすら解いて覚えることに集中してしまい、\n\n内容を根本から理解する、仕組みを理解する\n\nといったことがちょっと甘くなってました。\n\n\nこれが、あまり点数が取れなかった原因だと思ってます。\n\n\nただ、このudemyの教材で、試験直前に復習していた内容が、ほぼほぼそのまま出たりもしました。(逆にそれがなかったら落ちてたんじゃないかとw)\n\n\nなので、この教材はすごいおすすめです。\n\n一つ言うなら、ちょっと解説が分かりにくいというか、足りないことがちょこちょこあるので、そういったところは、随時調べて意味を理解する、、という作業が必要になるかと思います。\n\n\n## 受験時の試験内容\n\n試験内容としては、主に\n\n- EBS, EFS, S3 \n- Auto Scaling, Ec2、CloudFrontあたりを使ったアーキテクチャ構成\n\n\nこの辺りの問題が結構出てきた印象でした。\n\n\n試験を受けた後に、分野別にスコアと評価が見られるのですが、「高パフォーマンスアーキテクチャの設計」については、再学習した方が良いよーと書かれてました。やはり問題を解くだけでなく、特にアーキテクチャに関しては、自分で図を書いてみたり等、理解することに重点を置いた勉強も大事なのではないかと思いました。\n\n\n### 受験後の感想\n\n資格としては取得できたものの、\n知識としては曖昧な部分も結構多く、決してドヤ顔はできません。\n\n実際に触ってなんぼ、なところもあるかなと思っているので、\n改めて、色々アプリを動かしてみながらインフラを触っていくことでもっとできるようになれればと思います〜\n\n",coediting:!1,comments_count:0,created_at:"2020-11-17T22:15:48+09:00",group:null,id:"a6df3f43d3bd4b4ffe00",likes_count:0,private:!1,reactions_count:0,tags:[{name:"AWS",versions:[]},{name:"saa",versions:[]},{name:"SAA-C02",versions:[]}],title:"SAAに合格したのでどんな感じだったか書いてみる",updated_at:"2020-11-17T22:15:48+09:00",url:"https://qiita.com/katsu_puchi/items/a6df3f43d3bd4b4ffe00",user:{description:"",facebook_id:"",followees_count:0,followers_count:0,github_login_name:null,id:"katsu_puchi",items_count:1,linkedin_id:"",location:"",name:"カツ",organization:"",permanent_id:399271,profile_image_url:"https://pbs.twimg.com/profile_images/1210581518680088577/KVDMP6l6_bigger.jpg",team_only:!1,twitter_screen_name:"katsu_puchi",website_url:""},page_views_count:null},{rendered_body:'<p>コンテナ初学者の新人社員でk8sを勉強しています。</p>\n\n<p>今回はAWSのEC2にMinikubeをインストールして、nginxのテストページが見れるまでの手順を記したいと思います。</p>\n\n<h1>\n<span id="開発環境" class="fragment"></span><a href="#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83"><i class="fa fa-link"></i></a>開発環境</h1>\n\n<ul>\n<li>AWS EC2 t3.small</li>\n</ul>\n\n<p>今回、Minikubeを利用する環境として、EC2のt3.smallを選択しました。<br>\n2GB以上のメモリや20GB以上のディスクスペースがないとMinikubeをうまくインストールできないようです。</p>\n\n<p>多少料金がかかってしまいます。試す場合は注意しましょう。</p>\n\n<h1>\n<span id="準備" class="fragment"></span><a href="#%E6%BA%96%E5%82%99"><i class="fa fa-link"></i></a>準備</h1>\n\n<p>EC2インスタンスを起動する手順までは省きます。私はやりなれているUbuntuをインストールしたEC2を選択しました。</p>\n\n<p>以下のように入力して起動したEC2に接続します。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>$ ssh -i test-key.pem ubuntu@xxx.xxx.xxx.xxx\n</pre></div></div>\n\n<p>test-key.pem はEC2を作成した際にダウンロードした鍵のファイル名です。<br>\nxxx.xxx.xxx.xxx はEC2のパブリックIPを指定します。</p>\n\n<h3>\n<span id="dockerのインストール" class="fragment"></span><a href="#docker%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB"><i class="fa fa-link"></i></a>Dockerのインストール</h3>\n\n<p>無事EC2に接続できたらDockerをインストールしましょう。<br>\nほぼ<a href="https://docs.docker.com/engine/install/ubuntu/" rel="nofollow noopener" target="_blank">公式の手順通り</a>です。</p>\n\n<div class="code-frame" data-lang="terminal">\n<div class="code-lang"><span class="bold">Dockerのインストール</span></div>\n<div class="highlight"><pre><span class="gp">#</span><span class="w"> </span>Ubuntuのパッケージをアップデート\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>apt-get update\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>必要なパッケージのインストール\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="se">\\</span>\n    apt-transport-https <span class="se">\\</span>\n    ca-certificates <span class="se">\\</span>\n    curl <span class="se">\\</span>\n    gnupg-agent <span class="se">\\</span>\n    software-properties-common\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>Dockerの公式GPGキーの追加\n<span class="gp">$</span><span class="w"> </span>curl <span class="nt">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg | <span class="nb">sudo </span>apt-key add -\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>Dockerのダウンロードサイトをaptレポジトリに追加\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>add-apt-repository <span class="se">\\</span>\n   <span class="s2">"deb [arch=amd64] https://download.docker.com/linux/ubuntu </span><span class="se">\\</span><span class="s2">\n   </span><span class="si">$(</span>lsb_release <span class="nt">-cs</span><span class="si">)</span><span class="s2"> </span><span class="se">\\</span><span class="s2">\n   stable"</span>\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>Docker Engineのインストール\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>apt-get update\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>apt-get <span class="nb">install </span>docker-ce docker-ce-cli containerd.io\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>バージョンが表示されればインストール成功\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>docker <span class="nt">--version</span>\n</pre></div>\n</div>\n\n<h3>\n<span id="minikubeのインストール" class="fragment"></span><a href="#minikube%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB"><i class="fa fa-link"></i></a>Minikubeのインストール</h3>\n\n<p>続いてMinikubeをインストールしましょう。</p>\n\n<div class="code-frame" data-lang="terminal"><div class="highlight"><pre><span class="gp">#</span><span class="w"> </span>minikubeのダウンロードと実行権限の付与\n<span class="gp">$</span><span class="w"> </span>curl <span class="nt">-Lo</span> minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 <span class="se">\\</span>\n  <span class="o">&amp;&amp;</span> <span class="nb">chmod</span> +x minikube\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>minikubeバイナリの移動\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo mv </span>minikube /usr/local/bin/\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>バージョンが表示されればインストール成功\n<span class="gp">#</span><span class="w"> </span>minikube version\n</pre></div></div>\n\n<h3>\n<span id="kubectlのインストール" class="fragment"></span><a href="#kubectl%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB"><i class="fa fa-link"></i></a>kubectlのインストール</h3>\n\n<p>Kubernetesはkubectlコマンドを使って操作するので、kubectlコマンドをインストールしていきます。<br>\n<a href="https://kubernetes.io/ja/docs/tasks/tools/install-kubectl/" rel="nofollow noopener" target="_blank">公式の手順</a>通りです。</p>\n\n<div class="code-frame" data-lang="terminal"><div class="highlight"><pre><span class="gp">#</span><span class="w"> </span>必要なパッケージのインストール\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>apt-get update <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="nt">-y</span> apt-transport-https gnupg2\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>kubectlのパッケージを追加\n<span class="gp">$</span><span class="w"> </span>curl <span class="nt">-s</span> https://packages.cloud.google.com/apt/doc/apt-key.gpg | <span class="nb">sudo </span>apt-key add - \n<span class="go">  echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list\n\n</span><span class="gp">#</span><span class="w"> </span>kubectlのインストール\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>apt-get update\n<span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="nt">-y</span> kubectl\n<span class="go">\n</span><span class="gp">#</span><span class="w"> </span>バージョンが表示されればインストール成功\n<span class="gp">$</span><span class="w"> </span>kubectl version <span class="nt">--client</span>\n</pre></div></div>\n\n<p>最後にMinikubeを起動します。<br>\nエラーがなければ無事起動できています。</p>\n\n<div class="code-frame" data-lang="terminal"><div class="highlight"><pre><span class="gp">$</span><span class="w"> </span><span class="nb">sudo </span>minikube start <span class="nt">--vm-driver</span><span class="o">=</span>none\n<span class="go">・\n・\n・\n💡  This can also be done automatically by setting the env var CHANGE_MINIKUBE_NONE_USER=true\n🔎  Verifying Kubernetes components...\n🌟  Enabled addons: storage-provisioner, default-storageclass\n🏄  Done! kubectl is now configured to use "minikube" by default\n</span></pre></div></div>\n\n<h1>\n<span id="マニフェストファイルの作成" class="fragment"></span><a href="#%E3%83%9E%E3%83%8B%E3%83%95%E3%82%A7%E3%82%B9%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E4%BD%9C%E6%88%90"><i class="fa fa-link"></i></a>マニフェストファイルの作成</h1>\n\n<p>kubectlを用いてリソースの操作をするわけですが、リソースの設定値が多いので、kubectlの引数で細かく設定するのはあまり現実的ではありません。<br>\nそのため、リソースの情報はファイルに記述しておいて、作成したファイルをkubectlに読み込ませるというやり方が一般的なようです。</p>\n\n<p>リソースの情報を「マニフェスト」と呼び、それを記述したファイルのことを「マニフェストファイル」と呼びます。<br>\nマニフェストファイルはJSON形式またはYAML形式で記述するのですが、読みやすいYAML形式で記述されているものがほとんどです。</p>\n\n<h3>\n<span id="pod作成" class="fragment"></span><a href="#pod%E4%BD%9C%E6%88%90"><i class="fa fa-link"></i></a>Pod作成</h3>\n\n<p>それでは nginx のPodを作っていきましょう。<br>\nPodのマニフェストファイルは以下のように記述しました。</p>\n\n<div class="code-frame" data-lang="yaml">\n<div class="code-lang"><span class="bold">nginx.yaml</span></div>\n<div class="highlight"><pre><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>\n<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>\n<span class="na">metadata</span><span class="pi">:</span>\n  <span class="na">name</span><span class="pi">:</span> <span class="s">test-nginx</span> \n<span class="na">spec</span><span class="pi">:</span>\n  <span class="na">containers</span><span class="pi">:</span>\n    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">my-nginx-container</span>\n      <span class="na">image</span><span class="pi">:</span> <span class="s">nginx:latest</span>\n      <span class="na">ports</span><span class="pi">:</span>\n        <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">80</span>\n</pre></div>\n</div>\n\n<p>Podをつくりたいので、kindにはPodと指定しておきます。<br>\nmetadataには、Podの名前を指定します。test-nginxとしました。<br>\nspecでは、Podの詳細情報を記します。<br>\ncontainerの項目では、nameにコンテナ名、imageにはイメージ名、portsではコンテナが使用するポート番号を指定します。</p>\n\n<div class="code-frame" data-lang="terminal"><div class="highlight"><pre><span class="gp">#</span><span class="w"> </span>Pod作成\n<span class="gp">$</span><span class="w"> </span>kubectl create <span class="nt">-f</span> nginx.yaml\n<span class="go">pod/test-nginx created\n\n</span><span class="gp">#</span><span class="w"> </span>Podの状態を確認\n<span class="gp">$</span><span class="w"> </span>kubectl get pods\n<span class="go">NAME         READY   STATUS    RESTARTS   AGE\ntest-nginx   1/1     Running   0          8s\n\n</span><span class="gp">#</span><span class="w"> </span>Podの詳細情報の取得\n<span class="gp">$</span><span class="w"> </span>kubectl describe pods my-pod\n<span class="go">Name:         test-nginx\nNamespace:    default\nPriority:     0\nNode:         ip-10-0-1-23/10.0.1.23\nStart Time:   Sat, 14 Nov 2020 10:28:37 +0000\n</span><span class="gp">Labels:       &lt;none&gt;</span><span class="w">\n</span><span class="gp">Annotations:  &lt;none&gt;</span><span class="w">\n</span><span class="go">Status:       Running\nIP:           172.17.0.3\nIPs:\n  IP:  172.17.0.3\nContainers:\n  my-nginx-container:\n    Container ID:   docker://a580525cc1eb22f7a237b2d3424f8899ba04cf17ec71a1c2810c6d7e9700ebfc\n    Image:          nginx:latest\n    Image ID:       docker-pullable://nginx@sha256:aeade65e99e5d5e7ce162833636f692354c227ff438556e5f3ed0335b7cc2f1b\n    Port:           80/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 14 Nov 2020 10:28:42 +0000\n    Ready:          True\n    Restart Count:  0\n</span><span class="gp">    Environment:    &lt;none&gt;</span><span class="w">\n</span><span class="go">    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-5qpwm (ro)\nConditions:\n  Type              Status\n  Initialized       True\n  Ready             True\n  ContainersReady   True\n  PodScheduled      True\nVolumes:\n  default-token-5qpwm:\n    Type:        Secret (a volume populated by a Secret)\n    SecretName:  default-token-5qpwm\n    Optional:    false\nQoS Class:       BestEffort\n</span><span class="gp">Node-Selectors:  &lt;none&gt;</span><span class="w">\n</span><span class="go">Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age    From               Message\n  ----    ------     ----   ----               -------\n  Normal  Scheduled  2m16s  default-scheduler  Successfully assigned default/test-nginx to ip-10-0-1-23\n  Normal  Pulling    2m16s  kubelet            Pulling image "nginx:latest"\n  Normal  Pulled     2m13s  kubelet            Successfully pulled image "nginx:latest" in 3.237396456s\n  Normal  Created    2m13s  kubelet            Created container my-nginx-container\n  Normal  Started    2m12s  kubelet            Started container my-nginx-container\n</span></pre></div></div>\n\n<p><code>kubectl describe</code> でPodのIPアドレスは <code>172.17.0.3</code>だということがわかりました。<br>\ncurlコマンドを実行してみると、nginxが起動していることがわかります。<br>\nただこのままだとテストページを見ることができません。</p>\n\n<div class="code-frame" data-lang="terminal"><div class="highlight"><pre><span class="gp">$</span><span class="w"> </span>curl 172.17.0.3\n<span class="gp">&lt;!DOCTYPE html&gt;</span><span class="w">\n</span><span class="gp">&lt;html&gt;</span><span class="w">\n</span><span class="gp">&lt;head&gt;</span><span class="w">\n</span><span class="gp">&lt;title&gt;</span>Welcome to nginx!&lt;/title&gt;\n<span class="gp">&lt;style&gt;</span><span class="w">\n</span><span class="go">    body {\n</span><span class="gp">        width: 35em;</span><span class="w">\n</span><span class="gp">        margin: 0 auto;</span><span class="w">\n</span><span class="gp">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><span class="w">\n</span><span class="go">    }\n</span><span class="gp">&lt;/style&gt;</span><span class="w">\n</span><span class="gp">&lt;/head&gt;</span><span class="w">\n</span><span class="gp">&lt;body&gt;</span><span class="w">\n</span><span class="gp">&lt;h1&gt;</span>Welcome to nginx!&lt;/h1&gt;\n<span class="gp">&lt;p&gt;</span>If you see this page, the nginx web server is successfully installed and\n<span class="gp">working. Further configuration is required.&lt;/p&gt;</span><span class="w">\n</span><span class="go">\n</span><span class="gp">&lt;p&gt;</span>For online documentation and support please refer to\n<span class="gp">&lt;a href="http://nginx.org/"&gt;</span>nginx.org&lt;/a&gt;.&lt;br/&gt;\n<span class="go">Commercial support is available at\n</span><span class="gp">&lt;a href="http://nginx.com/"&gt;</span>nginx.com&lt;/a&gt;.&lt;/p&gt;\n<span class="go">\n</span><span class="gp">&lt;p&gt;</span>&lt;em&gt;Thank you <span class="k">for </span>using nginx.&lt;/em&gt;&lt;/p&gt;\n<span class="gp">&lt;/body&gt;</span><span class="w">\n</span><span class="gp">&lt;/html&gt;</span><span class="w">\n</span></pre></div></div>\n\n<h1>\n<span id="テストページの確認" class="fragment"></span><a href="#%E3%83%86%E3%82%B9%E3%83%88%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE%E7%A2%BA%E8%AA%8D"><i class="fa fa-link"></i></a>テストページの確認</h1>\n\n<p>今度はテストページが見れるようにするための設定をしていきましょう。<br>\nあまり意味はないですが、複数Podの起動も合わせてやっていきましょう。</p>\n\n<h3>\n<span id="deplymentの作成" class="fragment"></span><a href="#deplyment%E3%81%AE%E4%BD%9C%E6%88%90"><i class="fa fa-link"></i></a>Deplymentの作成</h3>\n\n<p>Deploymentを使って複数Podを作成できるようにします。<br>\nDeploymentのマニフェストファイルは以下のように記述しました。</p>\n\n<div class="code-frame" data-lang="yaml">\n<div class="code-lang"><span class="bold">deployment.yaml</span></div>\n<div class="highlight"><pre><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">apps/v1</span>\n<span class="na">kind</span><span class="pi">:</span> <span class="s">Deployment</span>\n<span class="na">metadata</span><span class="pi">:</span>\n  <span class="na">name</span><span class="pi">:</span> <span class="s">my-deploymnet</span>\n<span class="na">spec</span><span class="pi">:</span>\n  <span class="na">replicas</span><span class="pi">:</span> <span class="m">2</span>\n  <span class="na">selector</span><span class="pi">:</span>\n    <span class="na">matchLabels</span><span class="pi">:</span>\n      <span class="na">app</span><span class="pi">:</span> <span class="s">my-nginx</span>\n  <span class="na">template</span><span class="pi">:</span>\n    <span class="na">metadata</span><span class="pi">:</span>\n      <span class="na">labels</span><span class="pi">:</span>\n        <span class="na">app</span><span class="pi">:</span> <span class="s">my-nginx</span>\n    <span class="na">spec</span><span class="pi">:</span>\n      <span class="na">containers</span><span class="pi">:</span>\n        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">test-nginx</span>\n          <span class="na">image</span><span class="pi">:</span> <span class="s">nginx:latest</span>\n          <span class="na">ports</span><span class="pi">:</span>\n            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">80</span>\n</pre></div>\n</div>\n\n<p>DeploymentのAPIGROUPはappsなので、apiVersionを <code>apps/v1</code> とします。<code>kubectl api-resources</code> と実行すると確認できます。<br>\nmetadataでは、Deploymentの名前を指定します。<br>\nspecでは、Deploymentの詳細情報を記述していきます。<br>\nReplicaSetでは、レプリカ数を指定します。このファイルの場合、同じ構成のPodを2つ作成するという意味になります。<br>\nselectorでは、どのようなPodを作成するのかを指定します。app: my-nginxと指定しますが、すぐ下のtemplateで定義されたものを使用するという意味です。<br>\ntemplateで具体的なPodの情報を記述します。selectorで選択してもらえるようにapp: my-nginx と設定します。<br>\nそれ以外は <code>nginx.yaml</code> と同じように記述します。</p>\n\n<h3>\n<span id="serviceの作成" class="fragment"></span><a href="#service%E3%81%AE%E4%BD%9C%E6%88%90"><i class="fa fa-link"></i></a>Serviceの作成</h3>\n\n<p>次はServiceを使って外部からアクセスできるようにします。<br>\nServiceのマニフェストファイルは以下のように記述しました。</p>\n\n<div class="code-frame" data-lang="yaml">\n<div class="code-lang"><span class="bold">service.yaml</span></div>\n<div class="highlight"><pre><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>\n<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>\n<span class="na">metadata</span><span class="pi">:</span> \n  <span class="na">name</span><span class="pi">:</span> <span class="s">nginx-service</span>\n<span class="na">spec</span><span class="pi">:</span>\n  <span class="na">type</span><span class="pi">:</span> <span class="s">NodePort</span>\n  <span class="na">ports</span><span class="pi">:</span>\n    <span class="pi">-</span> <span class="na">nodePort</span><span class="pi">:</span> <span class="m">30000</span>\n      <span class="na">port</span><span class="pi">:</span> <span class="m">8080</span>\n      <span class="na">targetPort</span><span class="pi">:</span> <span class="m">80</span>\n      <span class="na">protocol</span><span class="pi">:</span> <span class="s">TCP</span>\n  <span class="na">selector</span><span class="pi">:</span>\n    <span class="na">app</span><span class="pi">:</span> <span class="s">my-nginx</span> \n</pre></div>\n</div>\n\n<p>apiVersionでは、<code>kubectl api-resources</code>で確認したところ空欄なので<code>v1</code>とします。<br>\nmetadataでは、Serviceの名前を指定します。<br>\nspecでは、Serviceの詳細を記述していきます。<br>\ntypeはServiceの種類を指定します。ここでは、ノード（今回だとEC2）のIPアドレスを通じてアクセスできるNodePortとしました。試してないですが、ほかの種類にしてもできるかもしれません。<br>\nportsでは、ポートの設定を行います。<br>\nnodePortはノードのポート番号、portはServiceのポート番号、targetPortはPodのポート番号です。<br>\nノードがポート30000で通信を待ち受け、そこからServiceのポート8080に転送、最後にPodのポート80に転送というような流れとなります。</p>\n\n<h3>\n<span id="serviceを使ってnginxのテストページを確認する" class="fragment"></span><a href="#service%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6nginx%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B"><i class="fa fa-link"></i></a>Serviceを使ってnginxのテストページを確認する</h3>\n\n<p>DeploymentとService オブジェクトを用いて、nginxのテストページを確認していきます。<br>\nServiceのポートは8080、ノードのポートには30000が割り当てられていることがわかります。</p>\n\n<div class="code-frame" data-lang="terminal"><div class="highlight"><pre><span class="gp">#</span><span class="w"> </span>Deploymentオブジェクトの作成\n<span class="gp">$</span><span class="w"> </span>kubectl create <span class="nt">-f</span> deployment.yaml\n<span class="go">deployment.apps/my-deploymnet created\n\n</span><span class="gp">#</span><span class="w"> </span>Serviceオブジェクトの作成\n<span class="gp">$</span><span class="w"> </span>kubectl create <span class="nt">-f</span> service.yaml\n<span class="go">service/nginx-service created\n\n</span><span class="gp">#</span><span class="w"> </span>Serviceの状態を確認\n<span class="gp">$</span><span class="w"> </span>kubectl get services\n<span class="go">NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE\n</span><span class="gp">kubernetes      ClusterIP   10.96.0.1       &lt;none&gt;</span><span class="w">        </span>443/TCP          11d\n<span class="gp">nginx-service   NodePort    10.110.191.26   &lt;none&gt;</span><span class="w">        </span>8080:30000/TCP   82s\n</pre></div></div>\n\n<p>まだやることがあります。<br>\nEC2のセキュリティグループの設定で30000ポートを許可してあげないとテストページが見れません。<br>\n※初めてやったときにここでつまりました笑</p>\n\n<p>AWSにログインして、EC2 &gt; セキュリティグループでEC2に割り当てたセキュリティグループ名を選択し、インバウンドルールを編集というボタンがあるのでそのボタンをクリックします。</p>\n\n<p>私は以下のように設定しました。<br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F379397%2F7c1d0d02-cf16-9eea-ae1a-fa3c2242673b.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=466babcf3ecb92b949c986b7154d00b9" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F379397%2F7c1d0d02-cf16-9eea-ae1a-fa3c2242673b.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=466babcf3ecb92b949c986b7154d00b9" alt="image.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/379397/7c1d0d02-cf16-9eea-ae1a-fa3c2242673b.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F379397%2F7c1d0d02-cf16-9eea-ae1a-fa3c2242673b.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=4de0a4bf01aba21087eb7df0d776e88a 1x" loading="lazy"></a></p>\n\n<p>ブラウザで <code>xxx.xxx.xxx.xxx:30000</code>（xxx.xxx.xxx.xxxはEC2のパブリックIP）に接続するとnginxのテストページを確認できました。<br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F379397%2Fad6d30bc-7b6f-d3b6-8f2e-ad4eb976ab64.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2ccb389bd8458517dd1a27ce5d068d5e" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F379397%2Fad6d30bc-7b6f-d3b6-8f2e-ad4eb976ab64.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2ccb389bd8458517dd1a27ce5d068d5e" alt="キャプチャ.PNG" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/379397/ad6d30bc-7b6f-d3b6-8f2e-ad4eb976ab64.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F379397%2Fad6d30bc-7b6f-d3b6-8f2e-ad4eb976ab64.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=37735ab254f45b3ecc4696b2dbd9c8fe 1x" loading="lazy"></a></p>\n\n<h1>\n<span id="感想" class="fragment"></span><a href="#%E6%84%9F%E6%83%B3"><i class="fa fa-link"></i></a>感想</h1>\n\n<p>今回の検証を通して、Kubernetesの基本的な使い方をなんとなく知ることができました。<br>\n手を動かしたほうが、理解が進んだような気がします。</p>\n\n<p>今度は以前やったBIND, Unboundのマニフェスト化に取り組んでいけたらと思います。</p>\n',body:'コンテナ初学者の新人社員でk8sを勉強しています。\n\n今回はAWSのEC2にMinikubeをインストールして、nginxのテストページが見れるまでの手順を記したいと思います。\n\n#開発環境\n* AWS EC2 t3.small\n\n今回、Minikubeを利用する環境として、EC2のt3.smallを選択しました。\n2GB以上のメモリや20GB以上のディスクスペースがないとMinikubeをうまくインストールできないようです。\n\n多少料金がかかってしまいます。試す場合は注意しましょう。\n\n#準備\n\nEC2インスタンスを起動する手順までは省きます。私はやりなれているUbuntuをインストールしたEC2を選択しました。\n\n以下のように入力して起動したEC2に接続します。\n\n```\n$ ssh -i test-key.pem ubuntu@xxx.xxx.xxx.xxx\n```\n\ntest-key.pem はEC2を作成した際にダウンロードした鍵のファイル名です。\nxxx.xxx.xxx.xxx はEC2のパブリックIPを指定します。\n\n\n###Dockerのインストール\n無事EC2に接続できたらDockerをインストールしましょう。\nほぼ[公式の手順通り](https://docs.docker.com/engine/install/ubuntu/)です。\n\n```terminal:Dockerのインストール\n# Ubuntuのパッケージをアップデート\n$ sudo apt-get update\n\n# 必要なパッケージのインストール\n$ sudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n\n# Dockerの公式GPGキーの追加\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\n# Dockerのダウンロードサイトをaptレポジトリに追加\n$ sudo add-apt-repository \\\n   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable"\n\n# Docker Engineのインストール\n$ sudo apt-get update\n$ sudo apt-get install docker-ce docker-ce-cli containerd.io\n\n# バージョンが表示されればインストール成功\n$ sudo docker --version\n```\n\n###Minikubeのインストール\n続いてMinikubeをインストールしましょう。\n\n```terminal\n# minikubeのダウンロードと実行権限の付与\n$ curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \\\n  && chmod +x minikube\n\n# minikubeバイナリの移動\n$ sudo mv minikube /usr/local/bin/\n\n# バージョンが表示されればインストール成功\n# minikube version\n```\n\n###kubectlのインストール\nKubernetesはkubectlコマンドを使って操作するので、kubectlコマンドをインストールしていきます。\n[公式の手順](https://kubernetes.io/ja/docs/tasks/tools/install-kubectl/)通りです。\n\n```terminal\n# 必要なパッケージのインストール\n$ sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2\n\n# kubectlのパッケージを追加\n$ curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - \n  echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list\n\n# kubectlのインストール\n$ sudo apt-get update\n$ sudo apt-get install -y kubectl\n\n# バージョンが表示されればインストール成功\n$ kubectl version --client\n```\n\n最後にMinikubeを起動します。\nエラーがなければ無事起動できています。\n\n```terminal\n$ sudo minikube start --vm-driver=none\n・\n・\n・\n💡  This can also be done automatically by setting the env var CHANGE_MINIKUBE_NONE_USER=true\n🔎  Verifying Kubernetes components...\n🌟  Enabled addons: storage-provisioner, default-storageclass\n🏄  Done! kubectl is now configured to use "minikube" by default\n```\n\n#マニフェストファイルの作成\nkubectlを用いてリソースの操作をするわけですが、リソースの設定値が多いので、kubectlの引数で細かく設定するのはあまり現実的ではありません。\nそのため、リソースの情報はファイルに記述しておいて、作成したファイルをkubectlに読み込ませるというやり方が一般的なようです。\n\nリソースの情報を「マニフェスト」と呼び、それを記述したファイルのことを「マニフェストファイル」と呼びます。\nマニフェストファイルはJSON形式またはYAML形式で記述するのですが、読みやすいYAML形式で記述されているものがほとんどです。\n\n###Pod作成\nそれでは nginx のPodを作っていきましょう。\nPodのマニフェストファイルは以下のように記述しました。\n\n```yaml:nginx.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: test-nginx \nspec:\n  containers:\n    - name: my-nginx-container\n      image: nginx:latest\n      ports:\n        - containerPort: 80\n```\nPodをつくりたいので、kindにはPodと指定しておきます。\nmetadataには、Podの名前を指定します。test-nginxとしました。\nspecでは、Podの詳細情報を記します。\ncontainerの項目では、nameにコンテナ名、imageにはイメージ名、portsではコンテナが使用するポート番号を指定します。\n\n```terminal\n# Pod作成\n$ kubectl create -f nginx.yaml\npod/test-nginx created\n\n# Podの状態を確認\n$ kubectl get pods\nNAME         READY   STATUS    RESTARTS   AGE\ntest-nginx   1/1     Running   0          8s\n\n# Podの詳細情報の取得\n$ kubectl describe pods my-pod\nName:         test-nginx\nNamespace:    default\nPriority:     0\nNode:         ip-10-0-1-23/10.0.1.23\nStart Time:   Sat, 14 Nov 2020 10:28:37 +0000\nLabels:       <none>\nAnnotations:  <none>\nStatus:       Running\nIP:           172.17.0.3\nIPs:\n  IP:  172.17.0.3\nContainers:\n  my-nginx-container:\n    Container ID:   docker://a580525cc1eb22f7a237b2d3424f8899ba04cf17ec71a1c2810c6d7e9700ebfc\n    Image:          nginx:latest\n    Image ID:       docker-pullable://nginx@sha256:aeade65e99e5d5e7ce162833636f692354c227ff438556e5f3ed0335b7cc2f1b\n    Port:           80/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 14 Nov 2020 10:28:42 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-5qpwm (ro)\nConditions:\n  Type              Status\n  Initialized       True\n  Ready             True\n  ContainersReady   True\n  PodScheduled      True\nVolumes:\n  default-token-5qpwm:\n    Type:        Secret (a volume populated by a Secret)\n    SecretName:  default-token-5qpwm\n    Optional:    false\nQoS Class:       BestEffort\nNode-Selectors:  <none>\nTolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age    From               Message\n  ----    ------     ----   ----               -------\n  Normal  Scheduled  2m16s  default-scheduler  Successfully assigned default/test-nginx to ip-10-0-1-23\n  Normal  Pulling    2m16s  kubelet            Pulling image "nginx:latest"\n  Normal  Pulled     2m13s  kubelet            Successfully pulled image "nginx:latest" in 3.237396456s\n  Normal  Created    2m13s  kubelet            Created container my-nginx-container\n  Normal  Started    2m12s  kubelet            Started container my-nginx-container\n```\n\n`kubectl describe` でPodのIPアドレスは `172.17.0.3`だということがわかりました。\ncurlコマンドを実行してみると、nginxが起動していることがわかります。\nただこのままだとテストページを見ることができません。\n\n```terminal\n$ curl 172.17.0.3\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href="http://nginx.org/">nginx.org</a>.<br/>\nCommercial support is available at\n<a href="http://nginx.com/">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n```\n\n#テストページの確認\n今度はテストページが見れるようにするための設定をしていきましょう。\nあまり意味はないですが、複数Podの起動も合わせてやっていきましょう。\n\n###Deplymentの作成\nDeploymentを使って複数Podを作成できるようにします。\nDeploymentのマニフェストファイルは以下のように記述しました。\n\n```yaml:deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-deploymnet\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: my-nginx\n  template:\n    metadata:\n      labels:\n        app: my-nginx\n    spec:\n      containers:\n        - name: test-nginx\n          image: nginx:latest\n          ports:\n            - containerPort: 80\n```\nDeploymentのAPIGROUPはappsなので、apiVersionを `apps/v1` とします。`kubectl api-resources` と実行すると確認できます。\nmetadataでは、Deploymentの名前を指定します。\nspecでは、Deploymentの詳細情報を記述していきます。\nReplicaSetでは、レプリカ数を指定します。このファイルの場合、同じ構成のPodを2つ作成するという意味になります。\nselectorでは、どのようなPodを作成するのかを指定します。app: my-nginxと指定しますが、すぐ下のtemplateで定義されたものを使用するという意味です。\ntemplateで具体的なPodの情報を記述します。selectorで選択してもらえるようにapp: my-nginx と設定します。\nそれ以外は `nginx.yaml` と同じように記述します。\n\n###Serviceの作成\n次はServiceを使って外部からアクセスできるようにします。\nServiceのマニフェストファイルは以下のように記述しました。\n\n```yaml:service.yaml\napiVersion: v1\nkind: Service\nmetadata: \n  name: nginx-service\nspec:\n  type: NodePort\n  ports:\n    - nodePort: 30000\n      port: 8080\n      targetPort: 80\n      protocol: TCP\n  selector:\n    app: my-nginx \n```\napiVersionでは、`kubectl api-resources`で確認したところ空欄なので`v1`とします。\nmetadataでは、Serviceの名前を指定します。\nspecでは、Serviceの詳細を記述していきます。\ntypeはServiceの種類を指定します。ここでは、ノード（今回だとEC2）のIPアドレスを通じてアクセスできるNodePortとしました。試してないですが、ほかの種類にしてもできるかもしれません。\nportsでは、ポートの設定を行います。\nnodePortはノードのポート番号、portはServiceのポート番号、targetPortはPodのポート番号です。\nノードがポート30000で通信を待ち受け、そこからServiceのポート8080に転送、最後にPodのポート80に転送というような流れとなります。\n\n###Serviceを使ってnginxのテストページを確認する\nDeploymentとService オブジェクトを用いて、nginxのテストページを確認していきます。\nServiceのポートは8080、ノードのポートには30000が割り当てられていることがわかります。\n\n```terminal\n# Deploymentオブジェクトの作成\n$ kubectl create -f deployment.yaml\ndeployment.apps/my-deploymnet created\n\n# Serviceオブジェクトの作成\n$ kubectl create -f service.yaml\nservice/nginx-service created\n\n# Serviceの状態を確認\n$ kubectl get services\nNAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE\nkubernetes      ClusterIP   10.96.0.1       <none>        443/TCP          11d\nnginx-service   NodePort    10.110.191.26   <none>        8080:30000/TCP   82s\n```\n\nまだやることがあります。\nEC2のセキュリティグループの設定で30000ポートを許可してあげないとテストページが見れません。\n※初めてやったときにここでつまりました笑\n\nAWSにログインして、EC2 > セキュリティグループでEC2に割り当てたセキュリティグループ名を選択し、インバウンドルールを編集というボタンがあるのでそのボタンをクリックします。\n\n私は以下のように設定しました。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/379397/7c1d0d02-cf16-9eea-ae1a-fa3c2242673b.png)\n\nブラウザで `xxx.xxx.xxx.xxx:30000`（xxx.xxx.xxx.xxxはEC2のパブリックIP）に接続するとnginxのテストページを確認できました。\n![キャプチャ.PNG](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/379397/ad6d30bc-7b6f-d3b6-8f2e-ad4eb976ab64.png)\n\n#感想\n今回の検証を通して、Kubernetesの基本的な使い方をなんとなく知ることができました。\n手を動かしたほうが、理解が進んだような気がします。\n\n今度は以前やったBIND, Unboundのマニフェスト化に取り組んでいけたらと思います。\n',coediting:!1,comments_count:0,created_at:"2020-11-17T22:08:46+09:00",group:null,id:"cf48b593249a79fb6718",likes_count:0,private:!1,reactions_count:0,tags:[{name:"kubernetes",versions:[]},{name:"minikube",versions:[]}],title:"Minikubeでk8sの基本操作を学ぶ",updated_at:"2020-11-17T22:08:46+09:00",url:"https://qiita.com/e_krecker/items/cf48b593249a79fb6718",user:{description:"都内のIT企業",facebook_id:"",followees_count:4,followers_count:0,github_login_name:"ekrecker",id:"e_krecker",items_count:3,linkedin_id:"",location:"",name:"",organization:"",permanent_id:379397,profile_image_url:"https://avatars0.githubusercontent.com/u/26991786?v=4",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'\n<h2>\n<span id="目次" class="fragment"></span><a href="#%E7%9B%AE%E6%AC%A1"><i class="fa fa-link"></i></a>目次</h2>\n\n<ol>\n<li><a href="#%E6%A6%82%E8%A6%81">概要</a></li>\n<li><a href="#%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6">前提条件</a></li>\n<li><a href="#%E3%83%87%E3%83%BC%E3%82%BF%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF">データアップロードの仕組み</a></li>\n<li><a href="#%E3%83%87%E3%83%BC%E3%82%BF%E9%80%A3%E6%90%BA%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96">データ連携の自動化</a></li>\n<li><a href="#%E3%81%BE%E3%81%A8%E3%82%81">まとめ</a></li>\n</ol>\n\n<h2>\n<span id="概要" class="fragment"></span><a href="#%E6%A6%82%E8%A6%81"><i class="fa fa-link"></i></a>概要</h2>\n\n<p>最近、<a href="https://codeforafrica.org" rel="nofollow noopener" target="_blank">Code for Africa</a>という団体が運営している<a href="https://open.africa" rel="nofollow noopener" target="_blank">openAFRICA</a>というアフリカのオープンデータのポータルサイトと、自身がルワンダの水道公社WASACと共同でメンテナンスしている水道ベクトルタイルデータの自動連携機能を、Pythonで実装した。</p>\n\n<p>日本の自治体のオープンデータサイトでも多く使われていると思われるCKANというAPIを用いているので、自組織が持っているファイルなどのオープンデータをAPI経由で自動連携させたい場合に活用できると思うので、共有したいと思う。</p>\n\n<h2>\n<span id="前提条件" class="fragment"></span><a href="#%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6"><i class="fa fa-link"></i></a>前提条件</h2>\n\n<ul>\n<li>\n<a href="https://docs.ckan.org/en/2.7/api/#api-examples" rel="nofollow noopener" target="_blank">CKAN API</a>を使っているオープンデータプラットフォームに自組織のアカウントを持っている</li>\n<li>Githubでオープンデータを管理している</li>\n</ul>\n\n<p>この記事を通して、Githubに置いてあるオープンデータを更新したタイミングで、Github Actionを用いて、CKAN経由でプラットフォーム上のデータを自動連携させるようにします。</p>\n\n<p>ちなみにルワンダの水道公社の水道ベクトルタイルのオープンデータのopenAFRICAのページは以下のリンクにあります。<br>\n<a href="https://open.africa/dataset/rw-water-vectortiles" class="autolink" rel="nofollow noopener" target="_blank">https://open.africa/dataset/rw-water-vectortiles</a></p>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2Fb46451ae-dd33-af48-1927-63718068c6f8.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=17286b83fabd02d5a128a80940ebaff1" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2Fb46451ae-dd33-af48-1927-63718068c6f8.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=17286b83fabd02d5a128a80940ebaff1" alt="image.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/858331/b46451ae-dd33-af48-1927-63718068c6f8.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2Fb46451ae-dd33-af48-1927-63718068c6f8.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f1a404a011104fff3b368002432abbb1 1x" loading="lazy"></a></p>\n\n<p>また水道ベクトルタイルのGithubリポジトリは以下のリンクにあり、毎週水道公社内のサーバーからGithubに自動更新されます。<br>\n<a href="https://github.com/WASAC/vt" class="autolink" rel="nofollow noopener" target="_blank">https://github.com/WASAC/vt</a></p>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2F012139e2-6dfd-3244-d44e-fa8d0b57bb91.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4320c4ccfbe33e895fc0e07155f66078" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2F012139e2-6dfd-3244-d44e-fa8d0b57bb91.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4320c4ccfbe33e895fc0e07155f66078" alt="image.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/858331/012139e2-6dfd-3244-d44e-fa8d0b57bb91.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2F012139e2-6dfd-3244-d44e-fa8d0b57bb91.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=739f7d40dbebee98c5ef90d8f1b798a9 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="データアップロードの仕組み" class="fragment"></span><a href="#%E3%83%87%E3%83%BC%E3%82%BF%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF"><i class="fa fa-link"></i></a>データアップロードの仕組み</h2>\n\n<h3>\n<span id="リポジトリのダウンロードとインストール" class="fragment"></span><a href="#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB"><i class="fa fa-link"></i></a>リポジトリのダウンロードとインストール</h3>\n\n<p>pipenvがインストールされていない場合は、まず設定を行ってください。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>git clone https://github.com/watergis/open-africa-uploader\ncd open-africa-uploader\npipenv install\npipenv shell\n</pre></div></div>\n\n<h3>\n<span id="ckan-apiを用いたファイルのアップロードの仕組み" class="fragment"></span><a href="#ckan-api%E3%82%92%E7%94%A8%E3%81%84%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF"><i class="fa fa-link"></i></a>CKAN APIを用いたファイルのアップロードの仕組み</h3>\n\n<p>まずリポジトリ内の<code>OpenAfricaUploader.py</code>のソースコード全文を載せます。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">os</span>\n<span class="kn">import</span> <span class="nn">ckanapi</span>\n<span class="kn">import</span> <span class="nn">requests</span>\n\n\n<span class="k">class</span> <span class="nc">OpanAfricaUploader</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>\n  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">api_key</span><span class="p">):</span>\n    <span class="s">"""Constructor\n\n    Args:\n        api_key (string): CKAN api key\n    """</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">data_portal</span> <span class="o">=</span> <span class="s">\'https://africaopendata.org\'</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">APIKEY</span> <span class="o">=</span> <span class="n">api_key</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">ckan</span> <span class="o">=</span> <span class="n">ckanapi</span><span class="p">.</span><span class="n">RemoteCKAN</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">data_portal</span><span class="p">,</span> <span class="n">apikey</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">APIKEY</span><span class="p">)</span>\n\n  <span class="k">def</span> <span class="nf">create_package</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">title</span><span class="p">):</span>\n    <span class="s">"""create new package if it does not exist yet.\n\n    Args:\n        url (str): the url of package eg. https://open.africa/dataset/{package url}\n        title (str): the title of package\n    """</span>\n    <span class="n">package_name</span> <span class="o">=</span> <span class="n">url</span>\n    <span class="n">package_title</span> <span class="o">=</span> <span class="n">title</span>\n    <span class="k">try</span><span class="p">:</span>\n        <span class="k">print</span> <span class="p">(</span><span class="s">\'Creating "{package_title}" package\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="o">**</span><span class="nb">locals</span><span class="p">()))</span>\n        <span class="bp">self</span><span class="p">.</span><span class="n">package</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">ckan</span><span class="p">.</span><span class="n">action</span><span class="p">.</span><span class="n">package_create</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="n">package_name</span><span class="p">,</span>\n                                            <span class="n">title</span><span class="o">=</span><span class="n">package_title</span><span class="p">,</span>\n                                            <span class="n">owner_org</span> <span class="o">=</span> <span class="s">\'water-and-sanitation-corporation-ltd-wasac\'</span><span class="p">)</span>\n    <span class="k">except</span> <span class="p">(</span><span class="n">ckanapi</span><span class="p">.</span><span class="n">ValidationError</span><span class="p">)</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>\n        <span class="k">if</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">error_dict</span><span class="p">[</span><span class="s">\'__type\'</span><span class="p">]</span> <span class="o">==</span> <span class="s">\'Validation Error\'</span> <span class="ow">and</span>\n          <span class="n">e</span><span class="p">.</span><span class="n">error_dict</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]</span> <span class="o">==</span> <span class="p">[</span><span class="s">\'That URL is already in use.\'</span><span class="p">]):</span>\n            <span class="k">print</span> <span class="p">(</span><span class="s">\'"{package_title}" package already exists\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="o">**</span><span class="nb">locals</span><span class="p">()))</span>\n            <span class="bp">self</span><span class="p">.</span><span class="n">package</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">ckan</span><span class="p">.</span><span class="n">action</span><span class="p">.</span><span class="n">package_show</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="n">package_name</span><span class="p">)</span>\n        <span class="k">else</span><span class="p">:</span>\n            <span class="k">raise</span>\n\n  <span class="k">def</span> <span class="nf">resource_create</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">api</span><span class="o">=</span><span class="s">"/api/action/resource_create"</span><span class="p">):</span>\n    <span class="s">"""create new resource, or update existing resource\n\n    Args:\n        data (object): data for creating resource. data must contain package_id, name, format, description. If you overwrite existing resource, id also must be included.\n        path (str): file path for uploading\n        api (str, optional): API url for creating or updating. Defaults to "/api/action/resource_create". If you want to update, please specify url for "/api/action/resource_update"\n    """</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">api_url</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">data_portal</span> <span class="o">+</span> <span class="n">api</span>\n    <span class="k">print</span> <span class="p">(</span><span class="s">\'Creating "{}"\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]))</span>\n    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">api_url</span><span class="p">,</span>\n                      <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span>\n                      <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s">\'Authorization\'</span><span class="p">:</span> <span class="bp">self</span><span class="p">.</span><span class="n">APIKEY</span><span class="p">},</span>\n                      <span class="n">files</span><span class="o">=</span><span class="p">[(</span><span class="s">\'upload\'</span><span class="p">,</span> <span class="nb">open</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="s">\'rb\'</span><span class="p">))])</span>\n\n    <span class="k">if</span> <span class="n">r</span><span class="p">.</span><span class="n">status_code</span> <span class="o">!=</span> <span class="mi">200</span><span class="p">:</span>\n        <span class="k">print</span> <span class="p">(</span><span class="s">\'Error while creating resource: {0}\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">content</span><span class="p">))</span>\n    <span class="k">else</span><span class="p">:</span>\n      <span class="k">print</span> <span class="p">(</span><span class="s">\'Uploaded "{}" successfully\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]))</span>\n\n  <span class="k">def</span> <span class="nf">resource_update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span>\n    <span class="s">"""update existing resource\n\n    Args:\n        data (object): data for creating resource. data must contain id, package_id, name, format, description.\n        path (str): file path for uploading\n    """</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">resource_create</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="s">"/api/action/resource_update"</span><span class="p">)</span>\n\n  <span class="k">def</span> <span class="nf">upload_datasets</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">description</span><span class="p">):</span>\n    <span class="s">"""upload datasets under the package\n\n    Args:\n        path (str): file path for uploading\n        description (str): description for the dataset\n    """</span>\n    <span class="n">filename</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">basename</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>\n    <span class="n">extension</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">filename</span><span class="p">)[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">:].</span><span class="n">lower</span><span class="p">()</span>\n\n    <span class="n">data</span> <span class="o">=</span> <span class="p">{</span>\n      <span class="s">\'package_id\'</span><span class="p">:</span> <span class="bp">self</span><span class="p">.</span><span class="n">package</span><span class="p">[</span><span class="s">\'id\'</span><span class="p">],</span>\n      <span class="s">\'name\'</span><span class="p">:</span> <span class="n">filename</span><span class="p">,</span>\n      <span class="s">\'format\'</span><span class="p">:</span> <span class="n">extension</span><span class="p">,</span>\n      <span class="s">\'description\'</span><span class="p">:</span> <span class="n">description</span>\n    <span class="p">}</span>\n\n    <span class="n">resources</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">package</span><span class="p">[</span><span class="s">\'resources\'</span><span class="p">]</span>\n    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">resources</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>\n      <span class="n">target_resource</span> <span class="o">=</span> <span class="bp">None</span>\n      <span class="k">for</span> <span class="n">resource</span> <span class="ow">in</span> <span class="nb">reversed</span><span class="p">(</span><span class="n">resources</span><span class="p">):</span>\n        <span class="k">if</span> <span class="n">filename</span> <span class="o">==</span> <span class="n">resource</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]:</span>\n          <span class="n">target_resource</span> <span class="o">=</span> <span class="n">resource</span>\n          <span class="k">break</span>\n\n      <span class="k">if</span> <span class="n">target_resource</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>\n        <span class="bp">self</span><span class="p">.</span><span class="n">resource_create</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>\n      <span class="k">else</span><span class="p">:</span>\n        <span class="k">print</span> <span class="p">(</span><span class="s">\'Resource "{}" already exists, it will be overwritten\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">target_resource</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]))</span>\n        <span class="n">data</span><span class="p">[</span><span class="s">\'id\'</span><span class="p">]</span> <span class="o">=</span> <span class="n">target_resource</span><span class="p">[</span><span class="s">\'id\'</span><span class="p">]</span>\n        <span class="bp">self</span><span class="p">.</span><span class="n">resource_update</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>\n    <span class="k">else</span><span class="p">:</span>\n      <span class="bp">self</span><span class="p">.</span><span class="n">resource_create</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>\n</pre></div></div>\n\n<p><code>OpenAfricaUploader.py</code>を呼び出してファイルをアップロードするソースコードは以下のような感じです。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">os</span>\n<span class="kn">from</span> <span class="nn">OpenAfricaUploader</span> <span class="kn">import</span> <span class="n">OpanAfricaUploader</span>\n\n<span class="n">uploader</span> <span class="o">=</span> <span class="n">OpanAfricaUploader</span><span class="p">(</span><span class="n">args</span><span class="p">.</span><span class="n">key</span><span class="p">)</span>\n<span class="n">uploader</span><span class="p">.</span><span class="n">create_package</span><span class="p">(</span><span class="s">\'rw-water-vectortiles\'</span><span class="p">,</span><span class="s">\'Vector Tiles for rural water supply systems in Rwanda\'</span><span class="p">)</span>\n<span class="n">uploader</span><span class="p">.</span><span class="n">upload_datasets</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">abspath</span><span class="p">(</span><span class="s">\'../data/rwss.mbtiles\'</span><span class="p">),</span> <span class="s">\'mbtiles format of Mapbox Vector Tiles which was created by tippecanoe.\'</span><span class="p">)</span>\n</pre></div></div>\n\n<hr>\n\n<p>一個ずつ説明していきます。</p>\n\n<h4>\n<span id="コンストラクタ" class="fragment"></span><a href="#%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF"><i class="fa fa-link"></i></a>コンストラクタ</h4>\n\n<p>このモジュールはあらかじめopenAFRICAにアップロードするためにベースとなるポータルサイトのURLをコンストラクタ内で設定しています。</p>\n\n<p><code>self.data_portal = \'https://africaopendata.org\'</code>の部分のURLを自組織が利用しているCKAN APIのURLと置き換えてください。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre>  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">api_key</span><span class="p">):</span>\n    <span class="s">"""Constructor\n\n    Args:\n        api_key (string): CKAN api key\n    """</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">data_portal</span> <span class="o">=</span> <span class="s">\'https://africaopendata.org\'</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">APIKEY</span> <span class="o">=</span> <span class="n">api_key</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">ckan</span> <span class="o">=</span> <span class="n">ckanapi</span><span class="p">.</span><span class="n">RemoteCKAN</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">data_portal</span><span class="p">,</span> <span class="n">apikey</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">APIKEY</span><span class="p">)</span>\n</pre></div></div>\n\n<p>コンストラクタの呼び出しは次のようになります。<code>args.key</code>にご自身のアカウントのCKAN APIキーを指定してください。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre><span class="n">uploader</span> <span class="o">=</span> <span class="n">OpanAfricaUploader</span><span class="p">(</span><span class="n">args</span><span class="p">.</span><span class="n">key</span><span class="p">)</span>\n</pre></div></div>\n\n<h4>\n<span id="パッケージの作成" class="fragment"></span><a href="#%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AE%E4%BD%9C%E6%88%90"><i class="fa fa-link"></i></a>パッケージの作成</h4>\n\n<p><a href="https://docs.ckan.org/en/2.7/api/index.html?highlight=package_create#module-ckan.logic.action.create" rel="nofollow noopener" target="_blank">package_create</a>というAPIを利用してパッケージを作成します。その際引数には以下を指定します。</p>\n\n<ul>\n<li>name=ここで指定した文字列がパッケージのURLになります</li>\n<li>title=パッケージのタイトルです</li>\n<li>owner_org=CKANのポータル上の対象組織のIDです</li>\n</ul>\n\n<p>作成に成功すると、パッケージ情報が戻り値として返って来ます。既にある場合はエラーになるため、例外処理の中で既存のパッケージ情報を取得する処理を書いています。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre>  <span class="k">def</span> <span class="nf">create_package</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">title</span><span class="p">):</span>\n    <span class="s">"""create new package if it does not exist yet.\n\n    Args:\n        url (str): the url of package eg. https://open.africa/dataset/{package url}\n        title (str): the title of package\n    """</span>\n    <span class="n">package_name</span> <span class="o">=</span> <span class="n">url</span>\n    <span class="n">package_title</span> <span class="o">=</span> <span class="n">title</span>\n    <span class="k">try</span><span class="p">:</span>\n        <span class="k">print</span> <span class="p">(</span><span class="s">\'Creating "{package_title}" package\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="o">**</span><span class="nb">locals</span><span class="p">()))</span>\n        <span class="bp">self</span><span class="p">.</span><span class="n">package</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">ckan</span><span class="p">.</span><span class="n">action</span><span class="p">.</span><span class="n">package_create</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="n">package_name</span><span class="p">,</span>\n                                            <span class="n">title</span><span class="o">=</span><span class="n">package_title</span><span class="p">,</span>\n                                            <span class="n">owner_org</span> <span class="o">=</span> <span class="s">\'water-and-sanitation-corporation-ltd-wasac\'</span><span class="p">)</span>\n    <span class="k">except</span> <span class="p">(</span><span class="n">ckanapi</span><span class="p">.</span><span class="n">ValidationError</span><span class="p">)</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>\n        <span class="k">if</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">error_dict</span><span class="p">[</span><span class="s">\'__type\'</span><span class="p">]</span> <span class="o">==</span> <span class="s">\'Validation Error\'</span> <span class="ow">and</span>\n          <span class="n">e</span><span class="p">.</span><span class="n">error_dict</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]</span> <span class="o">==</span> <span class="p">[</span><span class="s">\'That URL is already in use.\'</span><span class="p">]):</span>\n            <span class="k">print</span> <span class="p">(</span><span class="s">\'"{package_title}" package already exists\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="o">**</span><span class="nb">locals</span><span class="p">()))</span>\n            <span class="bp">self</span><span class="p">.</span><span class="n">package</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">ckan</span><span class="p">.</span><span class="n">action</span><span class="p">.</span><span class="n">package_show</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="n">package_name</span><span class="p">)</span>\n        <span class="k">else</span><span class="p">:</span>\n            <span class="k">raise</span>\n</pre></div></div>\n\n<p>この関数の呼び出し方は以下の通りになります</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre><span class="n">uploader</span><span class="p">.</span><span class="n">create_package</span><span class="p">(</span><span class="s">\'rw-water-vectortiles\'</span><span class="p">,</span><span class="s">\'Vector Tiles for rural water supply systems in Rwanda\'</span><span class="p">)</span>\n</pre></div></div>\n\n<h4>\n<span id="リソースの作成及び更新" class="fragment"></span><a href="#%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90%E5%8F%8A%E3%81%B3%E6%9B%B4%E6%96%B0"><i class="fa fa-link"></i></a>リソースの作成及び更新</h4>\n\n<p>リソースの作成は<code>resource_create</code>という関数で行っています。<code>/api/action/resource_create</code>というREST APIを使用して、アップロード対象のバイナリデータやファイル情報などもろもろを渡してあげれば良いです。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">resource_create</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">api</span><span class="o">=</span><span class="s">"/api/action/resource_create"</span><span class="p">):</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">api_url</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">data_portal</span> <span class="o">+</span> <span class="n">api</span>\n    <span class="k">print</span> <span class="p">(</span><span class="s">\'Creating "{}"\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]))</span>\n    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">api_url</span><span class="p">,</span>\n                      <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span>\n                      <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s">\'Authorization\'</span><span class="p">:</span> <span class="bp">self</span><span class="p">.</span><span class="n">APIKEY</span><span class="p">},</span>\n                      <span class="n">files</span><span class="o">=</span><span class="p">[(</span><span class="s">\'upload\'</span><span class="p">,</span> <span class="nb">open</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="s">\'rb\'</span><span class="p">))])</span>\n\n    <span class="k">if</span> <span class="n">r</span><span class="p">.</span><span class="n">status_code</span> <span class="o">!=</span> <span class="mi">200</span><span class="p">:</span>\n        <span class="k">print</span> <span class="p">(</span><span class="s">\'Error while creating resource: {0}\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">content</span><span class="p">))</span>\n    <span class="k">else</span><span class="p">:</span>\n      <span class="k">print</span> <span class="p">(</span><span class="s">\'Uploaded "{}" successfully\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]))</span>\n</pre></div></div>\n\n<p>但し、<code>resource_create</code>だけだとリソースの追加だけしかできず、更新するたびにどんどん数が増えてしまいますので、<code>/api/action/resource_update</code>というAPIを使って、既存のリソースがあったら更新してあげるようにします。</p>\n\n<p><code>resource_update</code>の使い方は基本的に<code>resource_create</code>と同じで、違いは<code>data</code>のなかに<code>resource_id</code>があるかないかだけです</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">resource_update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span>\n    <span class="bp">self</span><span class="p">.</span><span class="n">resource_create</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="s">"/api/action/resource_update"</span><span class="p">)</span>\n</pre></div></div>\n\n<p><code>resource_create</code>と<code>resource_update</code>をいい感じに組み合わせて、既存のリソースがあったら更新し、なかったら新規作成するという処理にしたのが<code>upload_datasets</code>という関数です。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">upload_datasets</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">description</span><span class="p">):</span>\n    <span class="c1"># ファイル名を拡張子と分離します\n</span>    <span class="n">filename</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">basename</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>\n    <span class="n">extension</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">filename</span><span class="p">)[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">:].</span><span class="n">lower</span><span class="p">()</span>\n\n    <span class="c1"># リソース作成用のデータを作ります\n</span>    <span class="n">data</span> <span class="o">=</span> <span class="p">{</span>\n      <span class="s">\'package_id\'</span><span class="p">:</span> <span class="bp">self</span><span class="p">.</span><span class="n">package</span><span class="p">[</span><span class="s">\'id\'</span><span class="p">],</span> <span class="c1">#パッケージのID\n</span>      <span class="s">\'name\'</span><span class="p">:</span> <span class="n">filename</span><span class="p">,</span>                 <span class="c1">#更新対象のファイル名\n</span>      <span class="s">\'format\'</span><span class="p">:</span> <span class="n">extension</span><span class="p">,</span>              <span class="c1">#フォーマット（ここでは拡張子にしています）\n</span>      <span class="s">\'description\'</span><span class="p">:</span> <span class="n">description</span>        <span class="c1">#ファイルの説明\n</span>    <span class="p">}</span>\n\n    <span class="c1"># 既にパッケージ内にリソースがあった場合はアップロード対象のファイル名と同じ名前のリソースがあるかないかチェックする。\n</span>    <span class="n">resources</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">package</span><span class="p">[</span><span class="s">\'resources\'</span><span class="p">]</span>\n    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">resources</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>\n      <span class="n">target_resource</span> <span class="o">=</span> <span class="bp">None</span>\n      <span class="k">for</span> <span class="n">resource</span> <span class="ow">in</span> <span class="nb">reversed</span><span class="p">(</span><span class="n">resources</span><span class="p">):</span>\n        <span class="k">if</span> <span class="n">filename</span> <span class="o">==</span> <span class="n">resource</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]:</span>\n          <span class="n">target_resource</span> <span class="o">=</span> <span class="n">resource</span>\n          <span class="k">break</span>\n\n      <span class="k">if</span> <span class="n">target_resource</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>\n        <span class="c1"># 同じ名前のリソースがない場合はresource_createを呼び出す\n</span>        <span class="bp">self</span><span class="p">.</span><span class="n">resource_create</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>\n      <span class="k">else</span><span class="p">:</span>\n        <span class="c1"># リソースがある場合はdataにIDを設定してresource_updateを呼び出す\n</span>        <span class="k">print</span> <span class="p">(</span><span class="s">\'Resource "{}" already exists, it will be overwritten\'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">target_resource</span><span class="p">[</span><span class="s">\'name\'</span><span class="p">]))</span>\n        <span class="n">data</span><span class="p">[</span><span class="s">\'id\'</span><span class="p">]</span> <span class="o">=</span> <span class="n">target_resource</span><span class="p">[</span><span class="s">\'id\'</span><span class="p">]</span>\n        <span class="bp">self</span><span class="p">.</span><span class="n">resource_update</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>\n    <span class="k">else</span><span class="p">:</span>\n      <span class="c1"># リソースがない場合はresource_createを呼び出す\n</span>      <span class="bp">self</span><span class="p">.</span><span class="n">resource_create</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>\n</pre></div></div>\n\n<p><code>upload_datasets</code>関数の呼び出し方は以下のようになります。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre> <span class="n">uploader</span><span class="p">.</span><span class="n">upload_datasets</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">abspath</span><span class="p">(</span><span class="s">\'../data/rwss.mbtiles\'</span><span class="p">),</span> <span class="s">\'mbtiles format of Mapbox Vector Tiles which was created by tippecanoe.\'</span><span class="p">)</span>\n</pre></div></div>\n\n<h3>\n<span id="アップロードのソースをコマンドラインから呼べるようにする" class="fragment"></span><a href="#%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%AE%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89%E5%91%BC%E3%81%B9%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B"><i class="fa fa-link"></i></a>アップロードのソースをコマンドラインから呼べるようにする</h3>\n\n<p><code>upload2openafrica.py</code>でコマンドラインから呼べるようにしています。</p>\n\n<div class="code-frame" data-lang="python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">os</span>\n<span class="kn">import</span> <span class="nn">argparse</span>\n<span class="kn">from</span> <span class="nn">OpenAfricaUploader</span> <span class="kn">import</span> <span class="n">OpanAfricaUploader</span>\n\n<span class="k">def</span> <span class="nf">get_args</span><span class="p">():</span>\n  <span class="n">prog</span> <span class="o">=</span> <span class="s">"upload2openafrica.py"</span>\n  <span class="n">usage</span> <span class="o">=</span> <span class="s">"%(prog)s [options]"</span>\n  <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="p">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">prog</span><span class="o">=</span><span class="n">prog</span><span class="p">,</span> <span class="n">usage</span><span class="o">=</span><span class="n">usage</span><span class="p">)</span>\n  <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"--key"</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">"key"</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"Your CKAN api key"</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>\n  <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"--pkg"</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">"package"</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"Target url of your package"</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>\n  <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"--title"</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">"title"</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"Title of your package"</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>\n  <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"--file"</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">"file"</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"Relative path of file which you would like to upload"</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>\n  <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"--desc"</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">"description"</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"any description for your file"</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>\n  <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="p">.</span><span class="n">parse_args</span><span class="p">()</span>\n\n  <span class="k">return</span> <span class="n">args</span>\n\n<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>\n  <span class="n">args</span> <span class="o">=</span> <span class="n">get_args</span><span class="p">()</span>\n\n  <span class="n">uploader</span> <span class="o">=</span> <span class="n">OpanAfricaUploader</span><span class="p">(</span><span class="n">args</span><span class="p">.</span><span class="n">key</span><span class="p">)</span>\n  <span class="n">uploader</span><span class="p">.</span><span class="n">create_package</span><span class="p">(</span><span class="n">args</span><span class="p">.</span><span class="n">package</span><span class="p">,</span><span class="n">args</span><span class="p">.</span><span class="n">title</span><span class="p">)</span>\n  <span class="n">uploader</span><span class="p">.</span><span class="n">upload_datasets</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">abspath</span><span class="p">(</span><span class="n">args</span><span class="p">.</span><span class="nb">file</span><span class="p">),</span> <span class="n">args</span><span class="p">.</span><span class="n">description</span><span class="p">)</span>\n</pre></div></div>\n\n<p>実際に使う際は以下のような感じになります。<code>upload_mbtiles.sh</code>というシェルスクリプトを作っています。環境変数に<code>CKAN_API_KEY</code>を設定するようにしてください。</p>\n\n<div class="code-frame" data-lang="bash"><div class="highlight"><pre>\n<span class="c">#!/bin/bash</span>\n\npipenv run python upload2openafrica.py <span class="se">\\</span>\n  <span class="nt">--key</span> <span class="k">${</span><span class="nv">CKAN_API_KEY</span><span class="k">}</span> <span class="se">\\</span>\n  <span class="nt">--pkg</span> rw-water-vectortiles <span class="se">\\</span>\n  <span class="nt">--title</span> <span class="s2">"Vector Tiles for rural water supply systems in Rwanda"</span> <span class="se">\\</span>\n  <span class="nt">--file</span> ../data/rwss.mbtiles <span class="se">\\</span>\n  <span class="nt">--desc</span> <span class="s2">"mbtiles format of Mapbox Vector Tiles which was created by tippecanoe."</span>\n</pre></div></div>\n\n<p>これでCKAN APIを使ってオープンデータをアップロードできるようになりました。</p>\n\n<h2>\n<span id="データ連携の自動化" class="fragment"></span><a href="#%E3%83%87%E3%83%BC%E3%82%BF%E9%80%A3%E6%90%BA%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96"><i class="fa fa-link"></i></a>データ連携の自動化</h2>\n\n<p>でも毎回手動でCKANと連携するのは面倒なので、Github Actionで自動化します。ワークフローファイルは以下のような感じです。</p>\n\n<div class="code-frame" data-lang="yaml"><div class="highlight"><pre><span class="na">name</span><span class="pi">:</span> <span class="s">openAFRICA upload</span>\n\n<span class="na">on</span><span class="pi">:</span>\n  <span class="na">push</span><span class="pi">:</span>\n    <span class="na">branches</span><span class="pi">:</span> <span class="pi">[</span> <span class="nv">master</span> <span class="pi">]</span>\n    <span class="c1"># ここではdataフォルダ以下が更新された場合にワークフローが走るようにしています</span>\n    <span class="na">paths</span><span class="pi">:</span>\n      <span class="pi">-</span> <span class="s2">"</span><span class="s">data/**"</span>\n\n<span class="na">jobs</span><span class="pi">:</span>\n  <span class="na">build</span><span class="pi">:</span>\n\n    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>\n\n    <span class="na">steps</span><span class="pi">:</span>\n    <span class="pi">-</span> <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v2</span>\n    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Set up Python </span><span class="m">3.8</span>\n      <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/setup-python@v2</span>\n      <span class="na">with</span><span class="pi">:</span>\n        <span class="na">python-version</span><span class="pi">:</span> <span class="m">3.8</span>\n    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Install dependencies</span>\n      <span class="c1"># ここでまずPipenvの初期設定をします</span>\n      <span class="na">run</span><span class="pi">:</span> <span class="pi">|</span>\n        <span class="s">cd scripts</span>\n        <span class="s">pip install pipenv</span>\n        <span class="s">pipenv install</span>\n    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">upload to openAFRICA</span>\n      <span class="c1"># GithubのリポジトリのSettingsページのSecretsでCKAN_API_KEYという名前で登録しておけば次のようにして環境変数を使うことができます</span>\n      <span class="na">env</span><span class="pi">:</span>\n        <span class="na">CKAN_API_KEY</span><span class="pi">:</span> <span class="s">${{secrets.CKAN_API_KEY}}</span>\n      <span class="c1"># その上で、シェルスクリプトを呼んであげるようにします</span>\n      <span class="na">run</span><span class="pi">:</span> <span class="pi">|</span>\n        <span class="s">cd scripts</span>\n        <span class="s">./upload_mbtiles.sh</span>\n</pre></div></div>\n\n<p>これだけでGithubにファイルがアップロードされたらオープンデータプラットフォームに自動連携できるようになりました。次の画像はルワンダの水道公社のGithub Acitonが実行された際の画面です。</p>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2Fa6cd15c0-878c-468d-eaa4-be7d7c3762cf.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e42c7ba37106ac947b761b9c82b59c04" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2Fa6cd15c0-878c-468d-eaa4-be7d7c3762cf.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e42c7ba37106ac947b761b9c82b59c04" alt="image.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/858331/a6cd15c0-878c-468d-eaa4-be7d7c3762cf.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F858331%2Fa6cd15c0-878c-468d-eaa4-be7d7c3762cf.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=32a15816b4a358a801972ccdcb48162a 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="まとめ" class="fragment"></span><a href="#%E3%81%BE%E3%81%A8%E3%82%81"><i class="fa fa-link"></i></a>まとめ</h2>\n\n<p>CKAN APIは国内外の様々なオープンソースプラットフォームで使用されています。そのCKAN APIはPythonを用いることで比較的簡単にデータ連携を実装することが可能です。またオープンデータを管理しているのがGithub上なら、Github Actionを用いてさらに容易に自動連携することができます。</p>\n\n<p>今回openAFRICA向けに作成したモジュールが国内外の他のCKANを使ったオープンデータの利活用に役に立つことを願っています。</p>\n',body:"## 目次\n\n1. [概要](#概要)\n1. [前提条件](#前提条件)\n1. [データアップロードの仕組み](#データアップロードの仕組み)\n1. [データ連携の自動化](#データ連携の自動化)\n1. [まとめ](#まとめ)\n\n## 概要\n\n最近、[Code for Africa](https://codeforafrica.org)という団体が運営している[openAFRICA](https://open.africa)というアフリカのオープンデータのポータルサイトと、自身がルワンダの水道公社WASACと共同でメンテナンスしている水道ベクトルタイルデータの自動連携機能を、Pythonで実装した。\n\n日本の自治体のオープンデータサイトでも多く使われていると思われるCKANというAPIを用いているので、自組織が持っているファイルなどのオープンデータをAPI経由で自動連携させたい場合に活用できると思うので、共有したいと思う。\n\n## 前提条件\n\n- [CKAN API](https://docs.ckan.org/en/2.7/api/#api-examples)を使っているオープンデータプラットフォームに自組織のアカウントを持っている\n- Githubでオープンデータを管理している\n\nこの記事を通して、Githubに置いてあるオープンデータを更新したタイミングで、Github Actionを用いて、CKAN経由でプラットフォーム上のデータを自動連携させるようにします。\n\nちなみにルワンダの水道公社の水道ベクトルタイルのオープンデータのopenAFRICAのページは以下のリンクにあります。\nhttps://open.africa/dataset/rw-water-vectortiles\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/858331/b46451ae-dd33-af48-1927-63718068c6f8.png)\n\nまた水道ベクトルタイルのGithubリポジトリは以下のリンクにあり、毎週水道公社内のサーバーからGithubに自動更新されます。\nhttps://github.com/WASAC/vt\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/858331/012139e2-6dfd-3244-d44e-fa8d0b57bb91.png)\n\n\n## データアップロードの仕組み\n\n### リポジトリのダウンロードとインストール\n\npipenvがインストールされていない場合は、まず設定を行ってください。\n\n```\ngit clone https://github.com/watergis/open-africa-uploader\ncd open-africa-uploader\npipenv install\npipenv shell\n```\n\n### CKAN APIを用いたファイルのアップロードの仕組み\n\nまずリポジトリ内の`OpenAfricaUploader.py`のソースコード全文を載せます。\n\n```python\nimport os\nimport ckanapi\nimport requests\n\n\nclass OpanAfricaUploader(object):\n  def __init__(self, api_key):\n    \"\"\"Constructor\n\n    Args:\n        api_key (string): CKAN api key\n    \"\"\"\n    self.data_portal = 'https://africaopendata.org'\n    self.APIKEY = api_key\n    self.ckan = ckanapi.RemoteCKAN(self.data_portal, apikey=self.APIKEY)\n\n  def create_package(self, url, title):\n    \"\"\"create new package if it does not exist yet.\n\n    Args:\n        url (str): the url of package eg. https://open.africa/dataset/{package url}\n        title (str): the title of package\n    \"\"\"\n    package_name = url\n    package_title = title\n    try:\n        print ('Creating \"{package_title}\" package'.format(**locals()))\n        self.package = self.ckan.action.package_create(name=package_name,\n                                            title=package_title,\n                                            owner_org = 'water-and-sanitation-corporation-ltd-wasac')\n    except (ckanapi.ValidationError) as e:\n        if (e.error_dict['__type'] == 'Validation Error' and\n          e.error_dict['name'] == ['That URL is already in use.']):\n            print ('\"{package_title}\" package already exists'.format(**locals()))\n            self.package = self.ckan.action.package_show(id=package_name)\n        else:\n            raise\n\n  def resource_create(self, data, path, api=\"/api/action/resource_create\"):\n    \"\"\"create new resource, or update existing resource\n\n    Args:\n        data (object): data for creating resource. data must contain package_id, name, format, description. If you overwrite existing resource, id also must be included.\n        path (str): file path for uploading\n        api (str, optional): API url for creating or updating. Defaults to \"/api/action/resource_create\". If you want to update, please specify url for \"/api/action/resource_update\"\n    \"\"\"\n    self.api_url = self.data_portal + api\n    print ('Creating \"{}\"'.format(data['name']))\n    r = requests.post(self.api_url,\n                      data=data,\n                      headers={'Authorization': self.APIKEY},\n                      files=[('upload', open(path, 'rb'))])\n\n    if r.status_code != 200:\n        print ('Error while creating resource: {0}'.format(r.content))\n    else:\n      print ('Uploaded \"{}\" successfully'.format(data['name']))\n\n  def resource_update(self, data, path):\n    \"\"\"update existing resource\n\n    Args:\n        data (object): data for creating resource. data must contain id, package_id, name, format, description.\n        path (str): file path for uploading\n    \"\"\"\n    self.resource_create(data, path, \"/api/action/resource_update\")\n\n  def upload_datasets(self, path, description):\n    \"\"\"upload datasets under the package\n\n    Args:\n        path (str): file path for uploading\n        description (str): description for the dataset\n    \"\"\"\n    filename = os.path.basename(path)\n    extension = os.path.splitext(filename)[1][1:].lower()\n    \n    data = {\n      'package_id': self.package['id'],\n      'name': filename,\n      'format': extension,\n      'description': description\n    }\n\n    resources = self.package['resources']\n    if len(resources) > 0:\n      target_resource = None\n      for resource in reversed(resources):\n        if filename == resource['name']:\n          target_resource = resource\n          break\n\n      if target_resource == None:\n        self.resource_create(data, path)\n      else:\n        print ('Resource \"{}\" already exists, it will be overwritten'.format(target_resource['name']))\n        data['id'] = target_resource['id']\n        self.resource_update(data, path)\n    else:\n      self.resource_create(data, path)\n```\n\n`OpenAfricaUploader.py`を呼び出してファイルをアップロードするソースコードは以下のような感じです。\n\n```python\nimport os\nfrom OpenAfricaUploader import OpanAfricaUploader\n\nuploader = OpanAfricaUploader(args.key)\nuploader.create_package('rw-water-vectortiles','Vector Tiles for rural water supply systems in Rwanda')\nuploader.upload_datasets(os.path.abspath('../data/rwss.mbtiles'), 'mbtiles format of Mapbox Vector Tiles which was created by tippecanoe.')\n```\n\n---\n\n一個ずつ説明していきます。\n\n#### コンストラクタ\n\nこのモジュールはあらかじめopenAFRICAにアップロードするためにベースとなるポータルサイトのURLをコンストラクタ内で設定しています。\n\n`self.data_portal = 'https://africaopendata.org'`の部分のURLを自組織が利用しているCKAN APIのURLと置き換えてください。\n\n```python\n  def __init__(self, api_key):\n    \"\"\"Constructor\n\n    Args:\n        api_key (string): CKAN api key\n    \"\"\"\n    self.data_portal = 'https://africaopendata.org'\n    self.APIKEY = api_key\n    self.ckan = ckanapi.RemoteCKAN(self.data_portal, apikey=self.APIKEY)\n```\n\nコンストラクタの呼び出しは次のようになります。`args.key`にご自身のアカウントのCKAN APIキーを指定してください。\n\n```python\nuploader = OpanAfricaUploader(args.key)\n```\n\n#### パッケージの作成\n\n[package_create](https://docs.ckan.org/en/2.7/api/index.html?highlight=package_create#module-ckan.logic.action.create)というAPIを利用してパッケージを作成します。その際引数には以下を指定します。\n\n- name=ここで指定した文字列がパッケージのURLになります\n- title=パッケージのタイトルです\n- owner_org=CKANのポータル上の対象組織のIDです\n\n作成に成功すると、パッケージ情報が戻り値として返って来ます。既にある場合はエラーになるため、例外処理の中で既存のパッケージ情報を取得する処理を書いています。\n\n```python\n  def create_package(self, url, title):\n    \"\"\"create new package if it does not exist yet.\n\n    Args:\n        url (str): the url of package eg. https://open.africa/dataset/{package url}\n        title (str): the title of package\n    \"\"\"\n    package_name = url\n    package_title = title\n    try:\n        print ('Creating \"{package_title}\" package'.format(**locals()))\n        self.package = self.ckan.action.package_create(name=package_name,\n                                            title=package_title,\n                                            owner_org = 'water-and-sanitation-corporation-ltd-wasac')\n    except (ckanapi.ValidationError) as e:\n        if (e.error_dict['__type'] == 'Validation Error' and\n          e.error_dict['name'] == ['That URL is already in use.']):\n            print ('\"{package_title}\" package already exists'.format(**locals()))\n            self.package = self.ckan.action.package_show(id=package_name)\n        else:\n            raise\n```\n\nこの関数の呼び出し方は以下の通りになります\n\n```python\nuploader.create_package('rw-water-vectortiles','Vector Tiles for rural water supply systems in Rwanda')\n```\n\n#### リソースの作成及び更新\n\nリソースの作成は`resource_create`という関数で行っています。`/api/action/resource_create`というREST APIを使用して、アップロード対象のバイナリデータやファイル情報などもろもろを渡してあげれば良いです。\n\n```python\ndef resource_create(self, data, path, api=\"/api/action/resource_create\"):\n    self.api_url = self.data_portal + api\n    print ('Creating \"{}\"'.format(data['name']))\n    r = requests.post(self.api_url,\n                      data=data,\n                      headers={'Authorization': self.APIKEY},\n                      files=[('upload', open(path, 'rb'))])\n\n    if r.status_code != 200:\n        print ('Error while creating resource: {0}'.format(r.content))\n    else:\n      print ('Uploaded \"{}\" successfully'.format(data['name']))\n```\n\n但し、`resource_create`だけだとリソースの追加だけしかできず、更新するたびにどんどん数が増えてしまいますので、`/api/action/resource_update`というAPIを使って、既存のリソースがあったら更新してあげるようにします。\n\n`resource_update`の使い方は基本的に`resource_create`と同じで、違いは`data`のなかに`resource_id`があるかないかだけです\n\n```python\ndef resource_update(self, data, path):\n    self.resource_create(data, path, \"/api/action/resource_update\")\n```\n\n`resource_create`と`resource_update`をいい感じに組み合わせて、既存のリソースがあったら更新し、なかったら新規作成するという処理にしたのが`upload_datasets`という関数です。\n\n```python\ndef upload_datasets(self, path, description):\n    # ファイル名を拡張子と分離します\n    filename = os.path.basename(path)\n    extension = os.path.splitext(filename)[1][1:].lower()\n    \n    # リソース作成用のデータを作ります\n    data = {\n      'package_id': self.package['id'], #パッケージのID\n      'name': filename,                 #更新対象のファイル名\n      'format': extension,              #フォーマット（ここでは拡張子にしています）\n      'description': description        #ファイルの説明\n    }\n\n    # 既にパッケージ内にリソースがあった場合はアップロード対象のファイル名と同じ名前のリソースがあるかないかチェックする。\n    resources = self.package['resources']\n    if len(resources) > 0:\n      target_resource = None\n      for resource in reversed(resources):\n        if filename == resource['name']:\n          target_resource = resource\n          break\n\n      if target_resource == None:\n        # 同じ名前のリソースがない場合はresource_createを呼び出す\n        self.resource_create(data, path)\n      else:\n        # リソースがある場合はdataにIDを設定してresource_updateを呼び出す\n        print ('Resource \"{}\" already exists, it will be overwritten'.format(target_resource['name']))\n        data['id'] = target_resource['id']\n        self.resource_update(data, path)\n    else:\n      # リソースがない場合はresource_createを呼び出す\n      self.resource_create(data, path)\n```\n\n`upload_datasets`関数の呼び出し方は以下のようになります。\n\n```python\n uploader.upload_datasets(os.path.abspath('../data/rwss.mbtiles'), 'mbtiles format of Mapbox Vector Tiles which was created by tippecanoe.')\n```\n\n### アップロードのソースをコマンドラインから呼べるようにする\n\n`upload2openafrica.py`でコマンドラインから呼べるようにしています。\n\n```python\nimport os\nimport argparse\nfrom OpenAfricaUploader import OpanAfricaUploader\n\ndef get_args():\n  prog = \"upload2openafrica.py\"\n  usage = \"%(prog)s [options]\"\n  parser = argparse.ArgumentParser(prog=prog, usage=usage)\n  parser.add_argument(\"--key\", dest=\"key\", help=\"Your CKAN api key\", required=True)\n  parser.add_argument(\"--pkg\", dest=\"package\", help=\"Target url of your package\", required=True)\n  parser.add_argument(\"--title\", dest=\"title\", help=\"Title of your package\", required=True)\n  parser.add_argument(\"--file\", dest=\"file\", help=\"Relative path of file which you would like to upload\", required=True)\n  parser.add_argument(\"--desc\", dest=\"description\", help=\"any description for your file\", required=True)\n  args = parser.parse_args()\n\n  return args\n\nif __name__ == \"__main__\":\n  args = get_args()\n\n  uploader = OpanAfricaUploader(args.key)\n  uploader.create_package(args.package,args.title)\n  uploader.upload_datasets(os.path.abspath(args.file), args.description)\n```\n\n実際に使う際は以下のような感じになります。`upload_mbtiles.sh`というシェルスクリプトを作っています。環境変数に`CKAN_API_KEY`を設定するようにしてください。\n\n```bash\n\n#!/bin/bash\n\npipenv run python upload2openafrica.py \\\n  --key ${CKAN_API_KEY} \\\n  --pkg rw-water-vectortiles \\\n  --title \"Vector Tiles for rural water supply systems in Rwanda\" \\\n  --file ../data/rwss.mbtiles \\\n  --desc \"mbtiles format of Mapbox Vector Tiles which was created by tippecanoe.\"\n```\n\nこれでCKAN APIを使ってオープンデータをアップロードできるようになりました。\n\n## データ連携の自動化\n\nでも毎回手動でCKANと連携するのは面倒なので、Github Actionで自動化します。ワークフローファイルは以下のような感じです。\n\n```yaml\nname: openAFRICA upload\n\non:\n  push:\n    branches: [ master ]\n    # ここではdataフォルダ以下が更新された場合にワークフローが走るようにしています\n    paths:\n      - \"data/**\"\n\njobs:\n  build:\n\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v2\n    - name: Set up Python 3.8\n      uses: actions/setup-python@v2\n      with:\n        python-version: 3.8\n    - name: Install dependencies\n      # ここでまずPipenvの初期設定をします\n      run: |\n        cd scripts\n        pip install pipenv\n        pipenv install\n    - name: upload to openAFRICA\n      # GithubのリポジトリのSettingsページのSecretsでCKAN_API_KEYという名前で登録しておけば次のようにして環境変数を使うことができます\n      env:\n        CKAN_API_KEY: ${{secrets.CKAN_API_KEY}}\n      # その上で、シェルスクリプトを呼んであげるようにします\n      run: |\n        cd scripts\n        ./upload_mbtiles.sh\n```\n\nこれだけでGithubにファイルがアップロードされたらオープンデータプラットフォームに自動連携できるようになりました。次の画像はルワンダの水道公社のGithub Acitonが実行された際の画面です。\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/858331/a6cd15c0-878c-468d-eaa4-be7d7c3762cf.png)\n\n\n## まとめ\n\nCKAN APIは国内外の様々なオープンソースプラットフォームで使用されています。そのCKAN APIはPythonを用いることで比較的簡単にデータ連携を実装することが可能です。またオープンデータを管理しているのがGithub上なら、Github Actionを用いてさらに容易に自動連携することができます。\n\n今回openAFRICA向けに作成したモジュールが国内外の他のCKANを使ったオープンデータの利活用に役に立つことを願っています。\n",coediting:!1,comments_count:0,created_at:"2020-11-17T22:06:45+09:00",group:null,id:"b773aa998e96459cb696",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Python",versions:[]},{name:"opendata",versions:[]},{name:"civictech",versions:[]},{name:"ckan",versions:[]},{name:"GitHubActions",versions:[]}],title:"PythonでCKAN APIを使ってオープンデータとしてアップロード&Github Actionsで自動連携する",updated_at:"2020-11-17T22:24:12+09:00",url:"https://qiita.com/JinIgarashi/items/b773aa998e96459cb696",user:{description:"GIS Software Developer",facebook_id:"",followees_count:0,followers_count:1,github_login_name:"JinIgarashi",id:"JinIgarashi",items_count:2,linkedin_id:"jinigarashi",location:"Kanagawa",name:"Jin IGARASHI ",organization:"MIERUNE Inc",permanent_id:858331,profile_image_url:"https://avatars1.githubusercontent.com/u/2639701?v=4",team_only:!1,twitter_screen_name:null,website_url:"https://docs.water-gis.com"},page_views_count:null},{rendered_body:'<p></p><blockquote class="twitter-tweet">\n<p>ペンギンの「ペンペン」が現れて何かしゃべるところまで。<a href="https://twitter.com/hashtag/protoout?src=hash&amp;ref_src=twsrc%5Etfw" rel="nofollow noopener" target="_blank">#protoout</a> <a href="https://twitter.com/hashtag/AR?src=hash&amp;ref_src=twsrc%5Etfw" rel="nofollow noopener" target="_blank">#AR</a> <a href="https://t.co/mew6weQHUA" rel="nofollow noopener" target="_blank">pic.twitter.com/mew6weQHUA</a></p>— 3do. (@3doHi) <a href="https://twitter.com/3doHi/status/1328597873378914305?ref_src=twsrc%5Etfw" rel="nofollow noopener" target="_blank">November 17, 2020</a>\n</blockquote> <script async src="https://platform.twitter.com/widgets.js"><\/script>\n\n<h1>\n<span id="イヤイヤ期を解決する子育てサポートwebarアプリケーション" class="fragment"></span><a href="#%E3%82%A4%E3%83%A4%E3%82%A4%E3%83%A4%E6%9C%9F%E3%82%92%E8%A7%A3%E6%B1%BA%E3%81%99%E3%82%8B%E5%AD%90%E8%82%B2%E3%81%A6%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88webar%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3"><i class="fa fa-link"></i></a>「イヤイヤ期」を解決する子育てサポートWebARアプリケーション</h1>\n\n<p>　現在、イヤイヤ期を迎えたこどもを持つパパ/ママ向けの子育てサポートWebアプリケーションを作成中です。</p>\n\n<p>　試作の状態のため、「アプリケーションを作ろうと思った背景」や、「プロダクトの全体像」、「解決しようとしている課題とその狙い」などの詳細説明は、本記事では割愛しますが、<b>制作の状況や、完成品はQiitaにも都度アップデート出来ればと思っていますので、ご興味あれば引き続き記事のチェックお願いします！</b></p>\n\n<p>　ざっくり言うと、<b>こどもの『ごはんのイヤイヤ（最後まで食べずに遊びたい）と、その後のお風呂のイヤイヤ（お風呂入りたくない）を、お風呂場にあるおもちゃのARコンテンツで解決したい』</b>と思っています！</p>\n\n<p>　現時点で出来ている下記2点までで、娘に使ってもらうテストをしてみましたので、その様子と、見えてきた改善点などを記事にしてみたいと思います。<br>\n・ARマーカーを読み取りマーカー上にモデルを出現させる<br>\n・モデルを画面に出現させたタイミングでmp3音源を再生する</p>\n\n<h1>\n<span id="娘に使ってもらいその様子を観察した" class="fragment"></span><a href="#%E5%A8%98%E3%81%AB%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%82%E3%82%89%E3%81%84%E3%81%9D%E3%81%AE%E6%A7%98%E5%AD%90%E3%82%92%E8%A6%B3%E5%AF%9F%E3%81%97%E3%81%9F"><i class="fa fa-link"></i></a>娘に使ってもらい、その様子を観察した</h1>\n\n<p><b>１．使用感</b><br>\n　1才11か月の娘には<b>ARの世界観を理解してもらえるか（怖がったりしないか）、不安なところもありました</b>が、スマホをかざすと、現実には存在しないペンギンが現れることに<b>かなり興味を示し、楽しんでる様子でした！</b>スマホの中を覗き込んだり、スマホの外からマーカーを直接見たりしながら、「現実にあるようで無い」世界観をニヤニヤしながら楽しんでいました。<br>\n　一方で、よっぽど楽しいのか何度も何度も「スマホをかずす」→「やめる」の繰り返しとなり、終わりのない感じになってしまいました。この点は、<b>アプリケーションとしての「終わり」を準備してあげる必要性を感じました。</b><br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F737339%2F132d067c-8a8d-a113-bee1-61728e5151a2.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0829b938a5a933990810a0b638838db5" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F737339%2F132d067c-8a8d-a113-bee1-61728e5151a2.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0829b938a5a933990810a0b638838db5" alt="IMG_9587.PNG" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/737339/132d067c-8a8d-a113-bee1-61728e5151a2.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F737339%2F132d067c-8a8d-a113-bee1-61728e5151a2.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=83ee93ddea49bb7c4df83b28cc114ca7 1x" loading="lazy"></a><br>\n<b>２．効果</b><br>\n　ペンギンのARが出現したタイミングで、アプリケーション内で流れる「●●ちゃん、お風呂に入ろう！」という音声については、「･･･お風呂」と小さな声で呟いていたので、「お風呂」というキーワードは認識してくれたと思います。さらに妻が「ペンペン(←我が家のペンギンの愛称)がお風呂で待ってるってよ～」と促すと、<b>いつもよりスムーズにお風呂場に向かってくれました。</b>そして、洗面台にいるペンペンに対面したときは<b>「あーペンペンだー！」</b>と言って、嬉しそうにペンギンのおもちゃを手にしていましたので、お風呂に入りたくないという<b>イヤイヤの改善効果はある程度見込めるのではないかと思いました！</b><br>\n　ただし、初めてだったので、<b>目新しもあり、良い反応を示したということもある</b>と思いましたので、継続して利用してもらえるように、ペンギンだけでなく「今日は誰がお風呂で待ってくれてるだろう感」が必要な気がしました。<br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F737339%2Fd17de963-c22b-be62-2994-7d6e7cd00288.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=326bb67c66bf8f03effeb54b1af25eb7" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F737339%2Fd17de963-c22b-be62-2994-7d6e7cd00288.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=326bb67c66bf8f03effeb54b1af25eb7" alt="IMG_9588.PNG" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/737339/d17de963-c22b-be62-2994-7d6e7cd00288.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F737339%2Fd17de963-c22b-be62-2994-7d6e7cd00288.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f8c9cb58851f8ac315ca70c2abe6ddf5 1x" loading="lazy"></a></p>\n\n<p><b>３．妻へのヒアリング</b><br>\n　娘の反応は結構いいね！という同じ評価をもらえましたが、下記3点の指摘ももらいました。<br>\n・ARモデルのペンペン(ペンギン)がリアルすぎてお風呂にいるおもちゃとギャップある。<br>\n・娘の操作だと、スマホが固定できずARマーカーの読み取りが途中で切れてしまうことが何度かあった。音声が途中で途切れてしまうと、「お風呂に入ろう！」というキーワードまで辿りつかないこともあった。<br>\n・うちの娘以外の反応も見てみた方がいいのではないか？</p>\n\n<h1>\n<span id="ということで今後考えたい改善点" class="fragment"></span><a href="#%E3%81%A8%E3%81%84%E3%81%86%E3%81%93%E3%81%A8%E3%81%A7%E4%BB%8A%E5%BE%8C%E8%80%83%E3%81%88%E3%81%9F%E3%81%84%E6%94%B9%E5%96%84%E7%82%B9"><i class="fa fa-link"></i></a>ということで、今後考えたい改善点</h1>\n\n<table>\n<thead>\n<tr>\n<th>見えた課題</th>\n<th>対策</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ARが楽しくて終わりがない</td>\n<td>音声再生が終わったらペンペン(←我が家のペンギンの愛称)が自ら立ち去るようにしたい</td>\n</tr>\n<tr>\n<td>継続して利用してもらえるかわからない</td>\n<td>ペンギンだけでないARモデルも準備したい</td>\n</tr>\n<tr>\n<td>ARモデルのペンペンがリアルすぎてお風呂にいるおもちゃとギャップある</td>\n<td>もう少しデフォルメされたペンギンのARモデルを探す</td>\n</tr>\n<tr>\n<td>娘の操作だと、スマホが固定できずARマーカーの読み取りが途中で切れて、音声が途切れてしまう</td>\n<td>対策検討中（持ちやすそうなカメラ型のスマホケース買ってみたので次はそれでテスト予定）</td>\n</tr>\n<tr>\n<td>我が子以外のこどもの反応が悪い可能性がある</td>\n<td>検証に協力してくれる人を探して、色んなフィードバックをもらう</td>\n</tr>\n</tbody>\n</table>\n\n<h1>\n<span id="今回は以上引き続き頑張ります" class="fragment"></span><a href="#%E4%BB%8A%E5%9B%9E%E3%81%AF%E4%BB%A5%E4%B8%8A%E5%BC%95%E3%81%8D%E7%B6%9A%E3%81%8D%E9%A0%91%E5%BC%B5%E3%82%8A%E3%81%BE%E3%81%99"><i class="fa fa-link"></i></a>今回は以上。引き続き頑張ります！</h1>\n\n<p>　とりあえずはベースとなる機能と簡単な検証は成功したとと思うので、今回見えた課題の改善に取り組み、より良いモノを引き続き目指していきたいです！！</p>\n\n<p>続く。</p>\n',body:'<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ペンギンの「ペンペン」が現れて何かしゃべるところまで。<a href="https://twitter.com/hashtag/protoout?src=hash&amp;ref_src=twsrc%5Etfw">#protoout</a> <a href="https://twitter.com/hashtag/AR?src=hash&amp;ref_src=twsrc%5Etfw">#AR</a> <a href="https://t.co/mew6weQHUA">pic.twitter.com/mew6weQHUA</a></p>&mdash; 3do. (@3doHi) <a href="https://twitter.com/3doHi/status/1328597873378914305?ref_src=twsrc%5Etfw">November 17, 2020</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"><\/script>\n\n#「イヤイヤ期」を解決する子育てサポートWebARアプリケーション\n　現在、イヤイヤ期を迎えたこどもを持つパパ/ママ向けの子育てサポートWebアプリケーションを作成中です。\n\n　試作の状態のため、「アプリケーションを作ろうと思った背景」や、「プロダクトの全体像」、「解決しようとしている課題とその狙い」などの詳細説明は、本記事では割愛しますが、<B>制作の状況や、完成品はQiitaにも都度アップデート出来ればと思っていますので、ご興味あれば引き続き記事のチェックお願いします！</B>\n\n　ざっくり言うと、<B>こどもの『ごはんのイヤイヤ（最後まで食べずに遊びたい）と、その後のお風呂のイヤイヤ（お風呂入りたくない）を、お風呂場にあるおもちゃのARコンテンツで解決したい』</B>と思っています！\n\n　現時点で出来ている下記2点までで、娘に使ってもらうテストをしてみましたので、その様子と、見えてきた改善点などを記事にしてみたいと思います。\n・ARマーカーを読み取りマーカー上にモデルを出現させる\n・モデルを画面に出現させたタイミングでmp3音源を再生する\n\n#娘に使ってもらい、その様子を観察した\n\n<B>１．使用感</B>\n　1才11か月の娘には<B>ARの世界観を理解してもらえるか（怖がったりしないか）、不安なところもありました</B>が、スマホをかざすと、現実には存在しないペンギンが現れることに<B>かなり興味を示し、楽しんでる様子でした！</B>スマホの中を覗き込んだり、スマホの外からマーカーを直接見たりしながら、「現実にあるようで無い」世界観をニヤニヤしながら楽しんでいました。\n　一方で、よっぽど楽しいのか何度も何度も「スマホをかずす」→「やめる」の繰り返しとなり、終わりのない感じになってしまいました。この点は、<B>アプリケーションとしての「終わり」を準備してあげる必要性を感じました。</B>\n![IMG_9587.PNG](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/737339/132d067c-8a8d-a113-bee1-61728e5151a2.png)\n<B>２．効果</B>\n　ペンギンのARが出現したタイミングで、アプリケーション内で流れる「●●ちゃん、お風呂に入ろう！」という音声については、「･･･お風呂」と小さな声で呟いていたので、「お風呂」というキーワードは認識してくれたと思います。さらに妻が「ペンペン(←我が家のペンギンの愛称)がお風呂で待ってるってよ～」と促すと、<B>いつもよりスムーズにお風呂場に向かってくれました。</B>そして、洗面台にいるペンペンに対面したときは<B>「あーペンペンだー！」</B>と言って、嬉しそうにペンギンのおもちゃを手にしていましたので、お風呂に入りたくないという<B>イヤイヤの改善効果はある程度見込めるのではないかと思いました！</B>\n　ただし、初めてだったので、<B>目新しもあり、良い反応を示したということもある</B>と思いましたので、継続して利用してもらえるように、ペンギンだけでなく「今日は誰がお風呂で待ってくれてるだろう感」が必要な気がしました。\n![IMG_9588.PNG](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/737339/d17de963-c22b-be62-2994-7d6e7cd00288.png)\n\n<B>３．妻へのヒアリング</B>\n　娘の反応は結構いいね！という同じ評価をもらえましたが、下記3点の指摘ももらいました。\n・ARモデルのペンペン(ペンギン)がリアルすぎてお風呂にいるおもちゃとギャップある。\n・娘の操作だと、スマホが固定できずARマーカーの読み取りが途中で切れてしまうことが何度かあった。音声が途中で途切れてしまうと、「お風呂に入ろう！」というキーワードまで辿りつかないこともあった。\n・うちの娘以外の反応も見てみた方がいいのではないか？\n\n#ということで、今後考えたい改善点\n\n|見えた課題|対策                  |\n|------------|--------------------------|\n|ARが楽しくて終わりがない|音声再生が終わったらペンペン(←我が家のペンギンの愛称)が自ら立ち去るようにしたい|\n|継続して利用してもらえるかわからない|ペンギンだけでないARモデルも準備したい|\n|ARモデルのペンペンがリアルすぎてお風呂にいるおもちゃとギャップある|もう少しデフォルメされたペンギンのARモデルを探す|\n|娘の操作だと、スマホが固定できずARマーカーの読み取りが途中で切れて、音声が途切れてしまう|対策検討中（持ちやすそうなカメラ型のスマホケース買ってみたので次はそれでテスト予定）|\n|我が子以外のこどもの反応が悪い可能性がある|検証に協力してくれる人を探して、色んなフィードバックをもらう|\n#今回は以上。引き続き頑張ります！\n　とりあえずはベースとなる機能と簡単な検証は成功したとと思うので、今回見えた課題の改善に取り組み、より良いモノを引き続き目指していきたいです！！\n\n続く。\n',coediting:!1,comments_count:0,created_at:"2020-11-17T22:06:03+09:00",group:null,id:"47d2eb8d9a092e168685",likes_count:1,private:!1,reactions_count:0,tags:[{name:"JavaScript",versions:[]},{name:"AR",versions:[]},{name:"A-Frame",versions:[]},{name:"Netlify",versions:[]},{name:"Poly",versions:[]}],title:"子育てサポートWebARアプリケーションを作成中！プログラム初心者パパの挑戦",updated_at:"2020-11-17T22:26:47+09:00",url:"https://qiita.com/m3do/items/47d2eb8d9a092e168685",user:{description:"",facebook_id:"",followees_count:7,followers_count:20,github_login_name:null,id:"m3do",items_count:15,linkedin_id:"",location:"東京都文京区",name:"三戸 誠",organization:"",permanent_id:737339,profile_image_url:"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/737339/6bf2bc9e72f199792e56ec850cebdcd0ac8888d9/large.png?1602845702",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'<p><strong>image_picker</strong>で、ライブラリからの画像選択、カメラを起動・撮影した画像の利用が可能。</p>\n\n<h2>\n<span id="パッケージの導入" class="fragment"></span><a href="#%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AE%E5%B0%8E%E5%85%A5"><i class="fa fa-link"></i></a>パッケージの導入</h2>\n\n<p>pubspec.yamlにimage_pickerを追加</p>\n\n<div class="code-frame" data-lang="yaml">\n<div class="code-lang"><span class="bold">pubspec.yaml</span></div>\n<div class="highlight"><pre><span class="na">dependencies</span><span class="pi">:</span>\n  <span class="na">flutter</span><span class="pi">:</span>\n    <span class="na">sdk</span><span class="pi">:</span> <span class="s">flutter</span>\n  <span class="na">image_picker</span><span class="pi">:</span> <span class="s">^0.6.7+14</span>\n</pre></div>\n</div>\n\n<h2>\n<span id="image_pickerを用いた画像選択処理" class="fragment"></span><a href="#image_picker%E3%82%92%E7%94%A8%E3%81%84%E3%81%9F%E7%94%BB%E5%83%8F%E9%81%B8%E6%8A%9E%E5%87%A6%E7%90%86"><i class="fa fa-link"></i></a>image_pickerを用いた画像選択処理</h2>\n\n<div class="code-frame" data-lang="dart">\n<div class="code-lang"><span class="bold">user_icon_photo_page.dart</span></div>\n<div class="highlight"><pre><span class="kn">import</span> <span class="s">\'dart:io\'</span><span class="o">;</span>\n<span class="kn">import</span> <span class="s">\'package:flutter/material.dart\'</span><span class="o">;</span>\n<span class="kn">import</span> <span class="s">\'package:image_picker/image_picker.dart\'</span><span class="o">;</span>\n<span class="kn">import</span> <span class="s">\'package:project_name/widgets/custom_button_text.dart\'</span><span class="o">;</span>\n\n\n<span class="kd">class</span> <span class="nc">UserIconPhotoPage</span> <span class="kd">extends</span> <span class="n">StatefulWidget</span> <span class="o">{</span>\n  <span class="nd">@override</span>\n  <span class="n">_UserIconPhotoPageState</span> <span class="n">createState</span><span class="o">()</span> <span class="o">=&gt;</span> <span class="n">_UserIconPhotoPageState</span><span class="o">();</span>\n<span class="o">}</span>\n\n<span class="kd">class</span> <span class="nc">_UserIconPhotoPageState</span> <span class="kd">extends</span> <span class="n">State</span><span class="o">&lt;</span><span class="n">UserIconPhotoPage</span><span class="o">&gt;</span> <span class="o">{</span>\n  <span class="n">File</span> <span class="n">_image</span><span class="o">;</span>\n  <span class="kd">final</span> <span class="n">_picker</span> <span class="o">=</span> <span class="n">ImagePicker</span><span class="o">();</span>\n\n  <span class="n">Future</span><span class="o">&lt;</span><span class="kt">void</span><span class="o">&gt;</span> <span class="n">_getImage</span><span class="o">(</span><span class="n">ImageSource</span> <span class="kn">source</span><span class="o">)</span> <span class="n">async</span> <span class="o">{</span>\n    <span class="kd">final</span> <span class="n">pickedFile</span> <span class="o">=</span> <span class="n">await</span> <span class="n">_picker</span><span class="o">.</span><span class="na">getImage</span><span class="o">(</span><span class="kn">source</span><span class="o">:</span> <span class="kn">source</span><span class="o">);</span>\n\n    <span class="n">setState</span><span class="o">(()</span> <span class="o">{</span>\n      <span class="k">if</span> <span class="o">(</span><span class="n">pickedFile</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>\n        <span class="n">_image</span> <span class="o">=</span> <span class="n">File</span><span class="o">(</span><span class="n">pickedFile</span><span class="o">.</span><span class="na">path</span><span class="o">);</span>\n      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>\n        <span class="n">print</span><span class="o">(</span><span class="s">\'画像が選択されていません\'</span><span class="o">);</span>\n      <span class="o">}</span>\n    <span class="o">});</span>\n  <span class="o">}</span>\n\n  <span class="nd">@override</span>\n  <span class="n">Widget</span> <span class="n">build</span><span class="o">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>\n    <span class="k">return</span> <span class="n">Scaffold</span><span class="o">(</span>\n      <span class="nl">body:</span> <span class="n">Center</span><span class="o">(</span>\n        <span class="nl">child:</span> <span class="n">Column</span><span class="o">(</span>\n          <span class="nl">mainAxisAlignment:</span> <span class="n">MainAxisAlignment</span><span class="o">.</span><span class="na">center</span><span class="o">,</span>\n          <span class="nl">children:</span> <span class="o">[</span>\n            <span class="k">if</span> <span class="o">(</span><span class="n">_image</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">Image</span><span class="o">.</span><span class="na">file</span><span class="o">(</span><span class="n">_image</span><span class="o">),</span> <span class="c1">// 画像選択後、画像が表示される</span>\n            <span class="n">RaisedButton</span><span class="o">(</span>\n              <span class="nl">color:</span> <span class="n">Colors</span><span class="o">.</span><span class="na">grey</span><span class="o">,</span>\n              <span class="nl">shape:</span> <span class="n">StadiumBorder</span><span class="o">(),</span>\n              <span class="nl">onPressed:</span> <span class="o">()</span> <span class="o">{</span>\n                <span class="n">_getImage</span><span class="o">(</span><span class="n">ImageSource</span><span class="o">.</span><span class="na">gallery</span><span class="o">);</span>\n              <span class="o">},</span>\n              <span class="nl">child:</span> <span class="kd">const</span> <span class="n">CustomButtonText</span><span class="o">(</span><span class="nl">buttonText:</span> <span class="s">"ライブラリから選択"</span><span class="o">)</span>\n            <span class="o">),</span>\n            <span class="kd">const</span> <span class="n">SizedBox</span><span class="o">(</span>\n              <span class="nl">height:</span> <span class="mi">20</span><span class="o">,</span>\n            <span class="o">),</span>\n            <span class="n">RaisedButton</span><span class="o">(</span>\n              <span class="nl">color:</span> <span class="n">Colors</span><span class="o">.</span><span class="na">grey</span><span class="o">,</span>\n              <span class="nl">shape:</span> <span class="n">StadiumBorder</span><span class="o">(),</span>\n              <span class="nl">onPressed:</span> <span class="o">()</span> <span class="o">{</span>\n                <span class="n">_getImage</span><span class="o">(</span><span class="n">ImageSource</span><span class="o">.</span><span class="na">camera</span><span class="o">);</span>\n              <span class="o">},</span>\n              <span class="nl">child:</span> <span class="kd">const</span> <span class="n">CustomButtonText</span><span class="o">(</span><span class="nl">buttonText:</span> <span class="s">"写真を撮影する"</span><span class="o">),</span>\n            <span class="o">),</span>\n          <span class="o">],</span>\n        <span class="o">),</span>\n      <span class="o">),</span>\n    <span class="o">);</span>\n  <span class="o">}</span>\n<span class="o">}</span>\n</pre></div>\n</div>\n\n<p>※ RaisedButtonに利用するテキストを別Widgetに切り出しています。</p>\n\n<div class="code-frame" data-lang="dart">\n<div class="code-lang"><span class="bold">custom_button_text.dart</span></div>\n<div class="highlight"><pre><span class="kn">import</span> <span class="s">\'package:flutter/material.dart\'</span><span class="o">;</span>\n\n<span class="kd">class</span> <span class="nc">CustomButtonText</span> <span class="kd">extends</span> <span class="n">StatelessWidget</span> <span class="o">{</span>\n  <span class="kd">final</span> <span class="n">buttonText</span><span class="o">;</span>\n\n  <span class="kd">const</span> <span class="n">CustomButtonText</span><span class="o">({</span><span class="n">Key</span> <span class="n">key</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">buttonText</span><span class="o">})</span> <span class="o">:</span> <span class="k">super</span><span class="o">(</span><span class="nl">key:</span> <span class="n">key</span><span class="o">);</span>\n\n  <span class="nd">@override</span>\n  <span class="n">Widget</span> <span class="n">build</span><span class="o">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>\n    <span class="k">return</span> <span class="n">Container</span><span class="o">(</span>\n      <span class="nl">width:</span> <span class="mi">200</span><span class="o">,</span>\n      <span class="nl">height:</span> <span class="mi">40</span><span class="o">,</span>\n      <span class="nl">child:</span> <span class="n">Center</span><span class="o">(</span>\n        <span class="nl">child:</span> <span class="n">Text</span><span class="o">(</span>\n          <span class="n">buttonText</span><span class="o">,</span>\n          <span class="nl">style:</span> <span class="n">TextStyle</span><span class="o">(</span>\n            <span class="nl">color:</span> <span class="n">Colors</span><span class="o">.</span><span class="na">white</span><span class="o">,</span>\n            <span class="nl">fontSize:</span> <span class="mi">18</span><span class="o">,</span>\n          <span class="o">),</span>\n        <span class="o">),</span>\n      <span class="o">),</span>\n    <span class="o">);</span>\n  <span class="o">}</span>\n<span class="o">}</span>\n</pre></div>\n</div>\n\n<h2>\n<span id="参考" class="fragment"></span><a href="#%E5%8F%82%E8%80%83"><i class="fa fa-link"></i></a>参考</h2>\n\n<ul>\n<li>image_picker : <a href="https://pub.dev/packages/image_picker" class="autolink" rel="nofollow noopener" target="_blank">https://pub.dev/packages/image_picker</a>\n</li>\n</ul>\n',body:"**image_picker**で、ライブラリからの画像選択、カメラを起動・撮影した画像の利用が可能。\n\n## パッケージの導入\npubspec.yamlにimage_pickerを追加\n\n```pubspec.yaml\ndependencies:\n  flutter:\n    sdk: flutter\n  image_picker: ^0.6.7+14\n```\n\n## image_pickerを用いた画像選択処理\n\n```user_icon_photo_page.dart\nimport 'dart:io';\nimport 'package:flutter/material.dart';\nimport 'package:image_picker/image_picker.dart';\nimport 'package:project_name/widgets/custom_button_text.dart';\n\n\nclass UserIconPhotoPage extends StatefulWidget {\n  @override\n  _UserIconPhotoPageState createState() => _UserIconPhotoPageState();\n}\n\nclass _UserIconPhotoPageState extends State<UserIconPhotoPage> {\n  File _image;\n  final _picker = ImagePicker();\n\n  Future<void> _getImage(ImageSource source) async {\n    final pickedFile = await _picker.getImage(source: source);\n\n    setState(() {\n      if (pickedFile != null) {\n        _image = File(pickedFile.path);\n      } else {\n        print('画像が選択されていません');\n      }\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            if (_image != null) Image.file(_image), // 画像選択後、画像が表示される\n            RaisedButton(\n              color: Colors.grey,\n              shape: StadiumBorder(),\n              onPressed: () {\n                _getImage(ImageSource.gallery);\n              },\n              child: const CustomButtonText(buttonText: \"ライブラリから選択\")\n            ),\n            const SizedBox(\n              height: 20,\n            ),\n            RaisedButton(\n              color: Colors.grey,\n              shape: StadiumBorder(),\n              onPressed: () {\n                _getImage(ImageSource.camera);\n              },\n              child: const CustomButtonText(buttonText: \"写真を撮影する\"),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n``` \n\n※ RaisedButtonに利用するテキストを別Widgetに切り出しています。\n\n```custom_button_text.dart\nimport 'package:flutter/material.dart';\n\nclass CustomButtonText extends StatelessWidget {\n  final buttonText;\n\n  const CustomButtonText({Key key, this.buttonText}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 200,\n      height: 40,\n      child: Center(\n        child: Text(\n          buttonText,\n          style: TextStyle(\n            color: Colors.white,\n            fontSize: 18,\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n## 参考\n- image_picker : https://pub.dev/packages/image_picker\n\n",coediting:!1,comments_count:0,created_at:"2020-11-17T22:05:32+09:00",group:null,id:"0242481d92b04653ce86",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Flutter",versions:[]}],title:"【Flutter】image_pickerを利用した画像選択処理（カメラ撮影・ギャラリーから選択）",updated_at:"2020-11-17T22:05:32+09:00",url:"https://qiita.com/kedev01/items/0242481d92b04653ce86",user:{description:null,facebook_id:null,followees_count:0,followers_count:0,github_login_name:null,id:"kedev01",items_count:1,linkedin_id:null,location:null,name:"",organization:null,permanent_id:681808,profile_image_url:"https://abs.twimg.com/sticky/default_profile_images/default_profile_bigger.png",team_only:!1,twitter_screen_name:"kedev01",website_url:null},page_views_count:null},{rendered_body:'\n<h2>\n<span id="概要" class="fragment"></span><a href="#%E6%A6%82%E8%A6%81"><i class="fa fa-link"></i></a>概要</h2>\n\n<p>コンテナを立ち上げるときにエラーが起きたので、その対処法とコマンドをまとめておきます。</p>\n\n<h2>\n<span id="エラー文" class="fragment"></span><a href="#%E3%82%A8%E3%83%A9%E3%83%BC%E6%96%87"><i class="fa fa-link"></i></a>エラー文</h2>\n\n<div class="code-frame" data-lang="terminal">\n<div class="code-lang"><span class="bold">ターミナル</span></div>\n<div class="highlight"><pre><span class="go">Error response from daemon: Conflict. The container name "コンテナ名" is already in use by container "コンテナID". You have to remove (or rename) that container to be able to reuse that name.\n</span></pre></div>\n</div>\n\n<p>コンテナがすでにあるので、名前を変更するか削除するかしてください。要するに同じコンテナ名は複数つくれないということですね！！</p>\n\n<h2>\n<span id="仮説" class="fragment"></span><a href="#%E4%BB%AE%E8%AA%AC"><i class="fa fa-link"></i></a>仮説</h2>\n\n<ul>\n<li>動作しているコンテナ一覧を見る。</li>\n<li>動作を止め、コンテナ削除。</li>\n</ul>\n\n<h2>\n<span id="必要になるコマンド" class="fragment"></span><a href="#%E5%BF%85%E8%A6%81%E3%81%AB%E3%81%AA%E3%82%8B%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89"><i class="fa fa-link"></i></a>必要になるコマンド</h2>\n\n<table>\n<thead>\n<tr>\n<th style="text-align: center">Dockerコマンド</th>\n<th style="text-align: center">備考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align: center"><code>docker ps</code></td>\n<td style="text-align: center">動作中コンテナ一覧</td>\n</tr>\n<tr>\n<td style="text-align: center">docker ps -a     　</td>\n<td style="text-align: center">コンテナ一覧</td>\n</tr>\n<tr>\n<td style="text-align: center">docker stop コンテナID</td>\n<td style="text-align: center">動作しているコンテナをストップ</td>\n</tr>\n<tr>\n<td style="text-align: center">docker rm (-f) コンテナID</td>\n<td style="text-align: center">停止しているコンテナを削除 ※-fオプションを付けると強制削除</td>\n</tr>\n</tbody>\n</table>\n\n<p>注意が必要なのが、コンテナをストップしてからでないとコンテナ削除ができないこと。<br>動作しているコンテナを停止コマンドで停止させたあと、<strong><em>そのまま削除するのではなく、動作していたコンテナが停止できたのか？を確認をしてから削除</em></strong>する。また、<strong><em>削除に成功したあとも削除できたのか確認する。</em></strong><br>\nもしくは<code>-f</code>オプションで強制的に削除してしまえばコンテナ起動中でも削除可能。<br>\n<br><strong><em>このようにいちいち確認する癖をつけておけば後で痛い目に合う確率が減ると思いました。</em></strong></p>\n\n<h2>\n<span id="再度コンテナ作成" class="fragment"></span><a href="#%E5%86%8D%E5%BA%A6%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E4%BD%9C%E6%88%90"><i class="fa fa-link"></i></a>再度コンテナ作成</h2>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fi.gyazo.com%2F88d42501ee7e603343c145b24f7e30b7.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bcef5e734dbb3bae715587c964483ffc" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fi.gyazo.com%2F88d42501ee7e603343c145b24f7e30b7.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bcef5e734dbb3bae715587c964483ffc" alt="image.png" data-canonical-src="https://i.gyazo.com/88d42501ee7e603343c145b24f7e30b7.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fi.gyazo.com%2F88d42501ee7e603343c145b24f7e30b7.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=be98689c7c86c5208ab7537d1c78eea7 1x" loading="lazy"></a></p>\n\n<p>Cookieが大きいというエラー。読み取るとおそらくCookieが溜まってるから削除して！！という感じだと思います。<br>\n早速溜まったCookieを削除し挙動を確認。</p>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fi.gyazo.com%2F34d41a3d38669caf2b3d130d6eca0cce.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4e40b057eb7a38dad2d5591048582d5c" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fi.gyazo.com%2F34d41a3d38669caf2b3d130d6eca0cce.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4e40b057eb7a38dad2d5591048582d5c" alt="image.png" data-canonical-src="https://i.gyazo.com/34d41a3d38669caf2b3d130d6eca0cce.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fi.gyazo.com%2F34d41a3d38669caf2b3d130d6eca0cce.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=585232d5acfd341db623ecedca8c756e 1x" loading="lazy"></a></p>\n\n<p><strong><em>仮説通りnginxコンテナを実行することができました！！</em></strong></p>\n\n<h2>\n<span id="まとめ" class="fragment"></span><a href="#%E3%81%BE%E3%81%A8%E3%82%81"><i class="fa fa-link"></i></a>まとめ</h2>\n\n<ul>\n<li>コンテナは同じ名前のものを作ることができない。</li>\n<li>コンテナ削除とイメージ削除で少しコマンドが違う(<code>rmi</code> か　<code>rm</code>)ので削除に失敗しても落ち着く。</li>\n<li>\n<code>rmi</code>の<code>i</code>はイメージのことで<code>i</code>を<code>removing</code>（取り除く）ということ。</li>\n<li>コマンドを打ったあと挙動が正しいか確認する癖をつける。</li>\n</ul>\n\n<h2>\n<span id="参考文献" class="fragment"></span><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE"><i class="fa fa-link"></i></a>参考文献</h2>\n\n<p>この記事は以下の情報を参考にして執筆しました。</p>\n\n<ul>\n<li><a href="https://qiita.com/tifa2chan/items/e9aa408244687a63a0ae" id="reference-2be55bc5b57dea0d0283">Dockerイメージとコンテナの削除方法</a></li>\n<li><a href="http://hokoxjouhou.blog105.fc2.com/blog-entry-1548.html" rel="nofollow noopener" target="_blank">Chromeに「 400 Bad Request Header Or Cookie Too Large 」が出たときの対処方法</a></li>\n</ul>\n',body:'## 概要\nコンテナを立ち上げるときにエラーが起きたので、その対処法とコマンドをまとめておきます。\n\n## エラー文\n\n```terminal:ターミナル\nError response from daemon: Conflict. The container name "コンテナ名" is already in use by container "コンテナID". You have to remove (or rename) that container to be able to reuse that name.\n```\n\nコンテナがすでにあるので、名前を変更するか削除するかしてください。要するに同じコンテナ名は複数つくれないということですね！！\n\n## 仮説\n- 動作しているコンテナ一覧を見る。\n- 動作を止め、コンテナ削除。\n\n## 必要になるコマンド\n\n| Dockerコマンド | 備考 |\n|:-:|:-:|\n| `docker ps`           |  動作中コンテナ一覧 |\n|  docker ps -a     　  | コンテナ一覧  |\n|  docker stop コンテナID |   動作しているコンテナをストップ |\n| docker rm (-f) コンテナID    | 停止しているコンテナを削除 ※-fオプションを付けると強制削除 |\n\n注意が必要なのが、コンテナをストップしてからでないとコンテナ削除ができないこと。<br>動作しているコンテナを停止コマンドで停止させたあと、***そのまま削除するのではなく、動作していたコンテナが停止できたのか？を確認をしてから削除***する。また、***削除に成功したあとも削除できたのか確認する。***\nもしくは`-f`オプションで強制的に削除してしまえばコンテナ起動中でも削除可能。\n<br>***このようにいちいち確認する癖をつけておけば後で痛い目に合う確率が減ると思いました。***\n\n## 再度コンテナ作成\n![image.png](https://i.gyazo.com/88d42501ee7e603343c145b24f7e30b7.png)\n\nCookieが大きいというエラー。読み取るとおそらくCookieが溜まってるから削除して！！という感じだと思います。\n早速溜まったCookieを削除し挙動を確認。\n\n![image.png](https://i.gyazo.com/34d41a3d38669caf2b3d130d6eca0cce.png)\n\n***仮説通りnginxコンテナを実行することができました！！***\n\n## まとめ\n- コンテナは同じ名前のものを作ることができない。\n- コンテナ削除とイメージ削除で少しコマンドが違う(`rmi` か　`rm`)ので削除に失敗しても落ち着く。\n- `rmi`の`i`はイメージのことで`i`を`removing`（取り除く）ということ。\n- コマンドを打ったあと挙動が正しいか確認する癖をつける。\n\n\n## 参考文献\n\nこの記事は以下の情報を参考にして執筆しました。\n\n- [Dockerイメージとコンテナの削除方法](https://qiita.com/tifa2chan/items/e9aa408244687a63a0ae)\n- [Chromeに「 400 Bad Request Header Or Cookie Too Large 」が出たときの対処方法](http://hokoxjouhou.blog105.fc2.com/blog-entry-1548.html)\n',coediting:!1,comments_count:0,created_at:"2020-11-17T21:58:29+09:00",group:null,id:"069f4517bd9a0d2ac704",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Docker",versions:[]},{name:"container",versions:[]}],title:"Error response from daemon: conflict: Dockerコンテナを作成しようとしたらコンフリクトが起きたので解決法",updated_at:"2020-11-17T21:59:32+09:00",url:"https://qiita.com/suzu12/items/069f4517bd9a0d2ac704",user:{description:"プログラミング学習中です。主にRailsを中心に学習しております。\r\nエラーが出たときの対処法や思考の整理の場として活用、また活用してもらったら幸いです！\r\n間違いなどあればぜひ、コメントお願いいたします。\r\nよろしくお願いいたします！",facebook_id:"",followees_count:0,followers_count:0,github_login_name:"suzu12",id:"suzu12",items_count:4,linkedin_id:"",location:"",name:"",organization:"",permanent_id:647973,profile_image_url:"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/647973/98013b20d6e3671518c2bfb1c82cb742d10c2dcb/x_large.png?1604881442",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'<p>はいどうも！<br>\n某プログラミングスクールに通い始めた37歳のおっさんです。<br>\nプログラミングは完全に未経験。<br>\nそんなおっさんが転職するまでの軌跡（奇跡？）をぼちぼち綴っていこうと思います。</p>\n\n<p>投稿は今日が初めてですがスクールは今日で9日目。<br>\nHTML＆CSSをやってRubyに入り、Railsをやって試験を受けて、というところです。<br><br></p>\n\n<p>簡単に私の経歴を<br>\n↪️<br>\n地方出身、東京の文系私立大学卒、東京で就職し営業職(toC &amp; toB)でマネジメント経験あり。<br>\nインディーズですが学生時代にやっていたバンドでCDを1枚だけ出しています。<br>\nキャンプとジム通い、音楽掘りが趣味。<br>\nジャンルはRock、JazzからEDMまで幅広く聴きます。<br>\n今はちょっと難しくなってしまいましたが海外旅行もそこそこ行きました。<br>\n<br><br><br><br>\nなぜプログラミングを始めたのか、どうして転職を決意したのかなどは後々ゆっくりとupしていこうと思います。<br>\nとりあえずまだ始めたばかりですが感想としては<br>\n「めちゃくちゃやることがいっぱいある」<br>\n「勉強すること、覚えることが今までやってきたことの比じゃないレベルで多い」<br>\nこの二つですね。<br>\n日々思ったこと、できなかったこと、疑問点などなど<br>\n自分が見返した時に<br>\n「あ〜こんなことあったな」とか、<br>\n「こんなことで悩んでたんだな」とかとか、<br>\nあとはこれを読んだ他の方に少しでも役に立てればなと思います。</p>\n\n<p>そんな具合ですが本日は頭がパンクしているのでこれにて<img alt=":wave_tone1:" class="emoji" height="20" src="https://cdn.qiita.com/emoji/twemoji/unicode/1f44b-1f3fb.png" title=":wave_tone1:" width="20" loading="lazy"></p>\n',body:"はいどうも！\n某プログラミングスクールに通い始めた37歳のおっさんです。\nプログラミングは完全に未経験。\nそんなおっさんが転職するまでの軌跡（奇跡？）をぼちぼち綴っていこうと思います。\n\n投稿は今日が初めてですがスクールは今日で9日目。\nHTML＆CSSをやってRubyに入り、Railsをやって試験を受けて、というところです。<br><br>\n\n\n\n\n簡単に私の経歴を\n↪️\n地方出身、東京の文系私立大学卒、東京で就職し営業職(toC & toB)でマネジメント経験あり。\nインディーズですが学生時代にやっていたバンドでCDを1枚だけ出しています。\nキャンプとジム通い、音楽掘りが趣味。\nジャンルはRock、JazzからEDMまで幅広く聴きます。\n今はちょっと難しくなってしまいましたが海外旅行もそこそこ行きました。\n<br><br><br>\nなぜプログラミングを始めたのか、どうして転職を決意したのかなどは後々ゆっくりとupしていこうと思います。\nとりあえずまだ始めたばかりですが感想としては\n「めちゃくちゃやることがいっぱいある」\n「勉強すること、覚えることが今までやってきたことの比じゃないレベルで多い」\nこの二つですね。\n日々思ったこと、できなかったこと、疑問点などなど\n自分が見返した時に\n「あ〜こんなことあったな」とか、\n「こんなことで悩んでたんだな」とかとか、\nあとはこれを読んだ他の方に少しでも役に立てればなと思います。\n\nそんな具合ですが本日は頭がパンクしているのでこれにて:wave_tone1:\n",coediting:!1,comments_count:0,created_at:"2020-11-17T21:58:10+09:00",group:null,id:"807122fb311031c44c59",likes_count:1,private:!1,reactions_count:0,tags:[{name:"Ruby",versions:[]},{name:"HTML",versions:[]},{name:"CSS",versions:[]},{name:"Rails",versions:[]}],title:"未経験のおっさんがプログラミングを学ぶまで",updated_at:"2020-11-17T21:58:10+09:00",url:"https://qiita.com/bon_hxg/items/807122fb311031c44c59",user:{description:"37歳未経験のおっさんが\r\nエンジニアになるまでの道のり",facebook_id:"",followees_count:1,followers_count:1,github_login_name:null,id:"bon_hxg",items_count:1,linkedin_id:"",location:"",name:"",organization:"",permanent_id:887559,profile_image_url:"https://lh3.googleusercontent.com/a-/AOh14GjLrzgp7LGDi7ZGQ5soGORBI3fW6rZbV_m49xCF2g=s50",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'\n<h2>\n<span id="問題" class="fragment"></span><a href="#%E5%95%8F%E9%A1%8C"><i class="fa fa-link"></i></a>問題</h2>\n\n<p>Anaconda で　install したはずの　パッケージが使用できず　下記のようなエラーが発生しました．</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>ModuleNotFoundError: No module named \'selenium\'\n</pre></div></div>\n\n<p>今回はselenium をinstall したはずなのに　上記のようなエラーが出ました．</p>\n\n<h2>\n<span id="原因" class="fragment"></span><a href="#%E5%8E%9F%E5%9B%A0"><i class="fa fa-link"></i></a>原因</h2>\n\n<p>anacondaプロンプトで python プログラム(****.py) を動作するときにpy.exeを使用していた．</p>\n\n<h2>\n<span id="対策" class="fragment"></span><a href="#%E5%AF%BE%E7%AD%96"><i class="fa fa-link"></i></a>対策</h2>\n\n<p>起動するときに　以下のように記述した．</p>\n\n<h3>\n<span id="前-py-py-エラーが出た" class="fragment"></span><a href="#%E5%89%8D-py-py-%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E5%87%BA%E3%81%9F"><i class="fa fa-link"></i></a>前: py *********.py (エラーが出た)</h3>\n\n<h3>\n<span id="後-python-py--動いた" class="fragment"></span><a href="#%E5%BE%8C-python-py--%E5%8B%95%E3%81%84%E3%81%9F"><i class="fa fa-link"></i></a>後: python *********.py  (動いた)</h3>\n\n<h2>\n<span id="感想" class="fragment"></span><a href="#%E6%84%9F%E6%83%B3"><i class="fa fa-link"></i></a>感想</h2>\n\n<p>pyrhon.exe と　py.exe 2種は違うものだと知った(今までは同じだと思っていた)<br>\n py.exe とはいったい何なのか，新たな疑問が生まれた<br>\n 解決してみれば非常に単純な問題だが，時間がかかった<br>\n 単純なミス過ぎて，ネットで検索しても出てこなかった．この記事が誰かの役に立とうれしいです．</p>\n\n<h2>\n<span id="解決までの道" class="fragment"></span><a href="#%E8%A7%A3%E6%B1%BA%E3%81%BE%E3%81%A7%E3%81%AE%E9%81%93"><i class="fa fa-link"></i></a>解決までの道</h2>\n\n<p>自分に対するメモです<br>\n1.問題に気づく<br>\n2.py と　python パッケージをどこからimportしているか調べる</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>import sys,pprint\npprint.pprint(sys.path)\n</pre></div></div>\n\n<h3>\n<span id="結果が違うことに気づく計2時間程度" class="fragment"></span><a href="#%E7%B5%90%E6%9E%9C%E3%81%8C%E9%81%95%E3%81%86%E3%81%93%E3%81%A8%E3%81%AB%E6%B0%97%E3%81%A5%E3%81%8F%E8%A8%882%E6%99%82%E9%96%93%E7%A8%8B%E5%BA%A6"><i class="fa fa-link"></i></a>結果が違うことに気づく!!(計　2時間程度)</h3>\n\n<p>3.解決 (力尽きて作業進まず)</p>\n',body:"##問題\nAnaconda で　install したはずの　パッケージが使用できず　下記のようなエラーが発生しました．\n\n```\nModuleNotFoundError: No module named 'selenium'\n```\n今回はselenium をinstall したはずなのに　上記のようなエラーが出ました．\n##原因\n anacondaプロンプトで python プログラム(****.py) を動作するときにpy.exeを使用していた．\n\n##対策\n起動するときに　以下のように記述した．\n\n###前: py *********.py (エラーが出た)\n###後: python *********.py  (動いた)\n\n##感想\n pyrhon.exe と　py.exe 2種は違うものだと知った(今までは同じだと思っていた)\n py.exe とはいったい何なのか，新たな疑問が生まれた\n 解決してみれば非常に単純な問題だが，時間がかかった\n 単純なミス過ぎて，ネットで検索しても出てこなかった．この記事が誰かの役に立とうれしいです．\n\n\n##解決までの道\n自分に対するメモです\n1.問題に気づく\n2.py と　python パッケージをどこからimportしているか調べる\n\n```\nimport sys,pprint\npprint.pprint(sys.path)\n```\n###結果が違うことに気づく!!(計　2時間程度)\n3.解決 (力尽きて作業進まず)\n\n",coediting:!1,comments_count:0,created_at:"2020-11-17T21:57:22+09:00",group:null,id:"77454cbcbc989415d784",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Python",versions:[]},{name:"Anaconda",versions:[]}],title:"Anaconda で　conda install したはずの　パッケージが import できない",updated_at:"2020-11-17T22:08:22+09:00",url:"https://qiita.com/tzks1/items/77454cbcbc989415d784",user:{description:"",facebook_id:"",followees_count:3,followers_count:0,github_login_name:null,id:"tzks1",items_count:2,linkedin_id:"",location:"",name:"",organization:"",permanent_id:550504,profile_image_url:"https://lh6.googleusercontent.com/-NuMrlH6iPR4/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reX5To8qg2-9lVJV1wYHpHSPpc64w/s50/photo.jpg",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'\n<h2>\n<span id="起こった事" class="fragment"></span><a href="#%E8%B5%B7%E3%81%93%E3%81%A3%E3%81%9F%E4%BA%8B"><i class="fa fa-link"></i></a>起こった事</h2>\n\n<p><code>go run ***.go</code>でサーバーを立ちあげた後にエディターでgoファイルを編集すると<code>gocode-gomod</code>がかなりCPUを食いエディターがフリーズ＆PCが落ちてしまう、、、、</p>\n\n<h2>\n<span id="環境" class="fragment"></span><a href="#%E7%92%B0%E5%A2%83"><i class="fa fa-link"></i></a>環境</h2>\n\n<ul>\n<li>go 1.15.3</li>\n<li>docker</li>\n<li>VSCode</li>\n</ul>\n\n<h2>\n<span id="解決策" class="fragment"></span><a href="#%E8%A7%A3%E6%B1%BA%E7%AD%96"><i class="fa fa-link"></i></a>解決策</h2>\n\n<p>設定ファイル(<code>setting.json</code>)を開き以下のコードを追記すると治るそう</p>\n\n<div class="code-frame" data-lang="json">\n<div class="code-lang"><span class="bold">setting.json</span></div>\n<div class="highlight"><pre><span class="p">{</span><span class="w">\n  </span><span class="nl">"go.useLanguageServer"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">\n</span><span class="p">}</span><span class="w">\n</span></pre></div>\n</div>\n\n<h2>\n<span id="原因" class="fragment"></span><a href="#%E5%8E%9F%E5%9B%A0"><i class="fa fa-link"></i></a>原因</h2>\n\n<blockquote>\n<p><a href="https://github.com/golang/vscode-go/issues/249#issuecomment-647902730" class="autolink" rel="nofollow noopener" target="_blank">https://github.com/golang/vscode-go/issues/249#issuecomment-647902730</a></p>\n</blockquote>\n\n<p><code>go</code>の候補表示してくれる<code>gocode-gomod</code>は現在メモリをかなり食ってしまうようになっているらしくメンテナンス中かつ開発がストップしているそう、、<br>\nなので、変わりに<code>gopls</code>を使ってくれとの事でした！</p>\n\n<p>これでgoでの開発に集中できる^^</p>\n',body:'## 起こった事\n`go run ***.go`でサーバーを立ちあげた後にエディターでgoファイルを編集すると`gocode-gomod`がかなりCPUを食いエディターがフリーズ＆PCが落ちてしまう、、、、\n\n## 環境\n- go 1.15.3\n- docker\n- VSCode\n\n\n## 解決策\n設定ファイル(`setting.json`)を開き以下のコードを追記すると治るそう\n\n```json:setting.json\n{\n  "go.useLanguageServer": true,\n}\n```\n\n\n## 原因\n>https://github.com/golang/vscode-go/issues/249#issuecomment-647902730\n\n`go`の候補表示してくれる`gocode-gomod`は現在メモリをかなり食ってしまうようになっているらしくメンテナンス中かつ開発がストップしているそう、、\nなので、変わりに`gopls`を使ってくれとの事でした！\n\nこれでgoでの開発に集中できる^^\n',coediting:!1,comments_count:0,created_at:"2020-11-17T21:56:47+09:00",group:null,id:"e64b16ca8ad1b62c6f27",likes_count:1,private:!1,reactions_count:0,tags:[{name:"Go",versions:[]},{name:"Docker",versions:[]},{name:"VSCode",versions:[]}],title:"goでサーバーを立ちあげたらVSCodeがフリーズ＆PCが落ちる",updated_at:"2020-11-17T22:01:16+09:00",url:"https://qiita.com/uta3chame/items/e64b16ca8ad1b62c6f27",user:{description:"つよつよエンジニアになるまでの成長日記、、、",facebook_id:"",followees_count:16,followers_count:5,github_login_name:"chameleon333",id:"uta3chame",items_count:9,linkedin_id:"",location:"",name:"yusei kaneta",organization:"",permanent_id:335593,profile_image_url:"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/335593/profile-images/1582621616",team_only:!1,twitter_screen_name:"uta3chame",website_url:""},page_views_count:null},{rendered_body:'<p>この記事では、OCIのマネージドTerraform環境であるリソース・マネージャを使って、MySQL Database Serviceを作成してみたことを紹介します。</p>\n\n<h1>\n<span id="リソースマネージャとは" class="fragment"></span><a href="#%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3%E3%81%A8%E3%81%AF"><i class="fa fa-link"></i></a>リソース・マネージャとは</h1>\n\n<p>Oracle Cloud Infrastructureリソースをプロビジョニングするプロセスを自動化できるOracle Cloud Infrastructureサービス<br>\n「infrastructure-as-code」モデルを使用してリソースをインストール、構成、および管理するのに役立つTerraformのマネージド環境</p>\n\n<h2>\n<span id="リソースマネージャの機能" class="fragment"></span><a href="#%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3%E3%81%AE%E6%A9%9F%E8%83%BD"><i class="fa fa-link"></i></a>リソース・マネージャの機能</h2>\n\n<p>リソース・マネージャは以下のような特徴、機能があります（2020/11/15時点）<br>\n- インフラストラクチャの自動化と標準化、環境のレプリケーションを容易に行う<br>\n- Terraform エンジンのフルマネージドサービス<br>\n- 指定したコンパートメントのリソースをTerraform構成ファイルの生成（Resource Discovery）<br>\n- GitLabで管理されたTerraform構成ファイルからリソース・マネージャスタックの作成（構成ソース・プロバイダ）<br>\n- スタックの最後に実行された構成と実際(現在)のインフラストラクチャの状態との差分抽出（ドリフト検出）<br>\n- サンプル構成を使った環境構築<br>\n- 使用できる Terraform フォーマットは v0.11/v0.12/v0.13</p>\n\n<p>以下のサンプルは Terraform v0.12 フォーマットで記載しています。</p>\n\n<h1>\n<span id="mysql-database-service-作成サンプル" class="fragment"></span><a href="#mysql-database-service-%E4%BD%9C%E6%88%90%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB"><i class="fa fa-link"></i></a>MYSQL Database Service 作成サンプル</h1>\n\n<h2>\n<span id="使用している変数" class="fragment"></span><a href="#%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E5%A4%89%E6%95%B0"><i class="fa fa-link"></i></a>使用している変数</h2>\n\n<ul>\n<li>mysql_configuration_id：MYSQL Database ServiceのコンフィグレーションID<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2F9eff2800-1d5b-cb7a-f48f-679c3a3d8717.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=dc9e75ff4a02271a4fb90d30f90d7faa" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2F9eff2800-1d5b-cb7a-f48f-679c3a3d8717.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=dc9e75ff4a02271a4fb90d30f90d7faa" alt="zu05.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/9eff2800-1d5b-cb7a-f48f-679c3a3d8717.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2F9eff2800-1d5b-cb7a-f48f-679c3a3d8717.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a1cf6dad3a5051f9806bde329334cc14 1x" loading="lazy"></a>\n</li>\n<li>mysql_password    ：管理者ユーザパスワード</li>\n<li>mysql_shape       ：MYSQL Database Serviceで利用するシェイプ</li>\n<li>privateSubnet_id  ：サブネットOCID</li>\n</ul>\n\n<h2>\n<span id="指定している名前" class="fragment"></span><a href="#%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E5%90%8D%E5%89%8D"><i class="fa fa-link"></i></a>指定している名前</h2>\n\n<ul>\n<li>admin_username    ：管理者ユーザ名（admin）</li>\n<li>hostname_label/display_name：ホスト名（mysql1）</li>\n</ul>\n\n<h2>\n<span id="そのほかはデフォルト設定を指定" class="fragment"></span><a href="#%E3%81%9D%E3%81%AE%E3%81%BB%E3%81%8B%E3%81%AF%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E8%A8%AD%E5%AE%9A%E3%82%92%E6%8C%87%E5%AE%9A"><i class="fa fa-link"></i></a>そのほかはデフォルト設定を指定</h2>\n\n<div class="code-frame" data-lang="hcl">\n<div class="code-lang"><span class="bold">mysql.tf</span></div>\n<div class="highlight"><pre><span class="nx">resource</span> <span class="nx">oci_mysql_mysql_db_system</span> <span class="nx">export_MySQL1</span> <span class="p">{</span>\n  <span class="nx">admin_password</span>      <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">mysql_password</span>\n  <span class="nx">admin_username</span>      <span class="p">=</span> <span class="s2">"admin"</span>\n  <span class="nx">availability_domain</span> <span class="p">=</span> <span class="nx">data</span><span class="err">.</span><span class="nx">oci_identity_availability_domain</span><span class="err">.</span><span class="nx">TGjA</span><span class="err">-</span><span class="nx">AD</span><span class="err">-</span><span class="mi">1</span><span class="err">.</span><span class="nx">name</span>\n  <span class="nx">backup_policy</span> <span class="p">{</span>\n    <span class="nx">is_enabled</span>        <span class="p">=</span> <span class="s2">"true"</span>\n    <span class="nx">retention_in_days</span> <span class="p">=</span> <span class="s2">"7"</span>\n    <span class="nx">window_start_time</span> <span class="p">=</span> <span class="s2">"00:00"</span>\n  <span class="p">}</span>\n  <span class="nx">compartment_id</span>          <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">compartment_ocid</span>\n  <span class="nx">configuration_id</span>        <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">mysql_configuration_id</span>\n  <span class="nx">data_storage_size_in_gb</span> <span class="p">=</span> <span class="s2">"50"</span>\n  <span class="nx">display_name</span> <span class="p">=</span> <span class="s2">"MySQL1"</span>\n  <span class="nx">fault_domain</span> <span class="p">=</span> <span class="s2">"FAULT-DOMAIN-1"</span>\n  <span class="nx">hostname_label</span> <span class="p">=</span> <span class="s2">"mysql1"</span>\n  <span class="nx">maintenance</span> <span class="p">{</span>\n    <span class="nx">window_start_time</span> <span class="p">=</span> <span class="s2">"WEDNESDAY 04:22"</span>\n  <span class="p">}</span>\n<span class="c1">#  mysql_version = "8.0.22-u2-cloud"</span>\n  <span class="nx">port</span>          <span class="p">=</span> <span class="s2">"3306"</span>\n  <span class="nx">port_x</span>        <span class="p">=</span> <span class="s2">"33060"</span>\n  <span class="nx">shape_name</span>    <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">mysql_shape</span>\n  <span class="nx">state</span>     <span class="p">=</span> <span class="s2">"ACTIVE"</span>\n  <span class="nx">subnet_id</span> <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">privateSubnet_id</span>\n\n  <span class="nx">lifecycle</span> <span class="p">{</span>\n    <span class="nx">ignore_changes</span> <span class="p">=</span> <span class="p">[</span><span class="nx">admin_password</span><span class="p">,</span> <span class="nx">admin_username</span><span class="p">]</span>\n  <span class="p">}</span>\n<span class="p">}</span>\n<span class="nx">data</span> <span class="nx">oci_identity_availability_domain</span> <span class="nx">export_TGjA</span><span class="err">-</span><span class="nx">AD</span><span class="err">-</span><span class="mi">1</span> <span class="p">{</span>\n  <span class="nx">compartment_id</span> <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">compartment_ocid</span>\n  <span class="nx">ad_number</span>      <span class="p">=</span> <span class="s2">"1"</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n\n<h1>\n<span id="サンプル環境の作成" class="fragment"></span><a href="#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E7%92%B0%E5%A2%83%E3%81%AE%E4%BD%9C%E6%88%90"><i class="fa fa-link"></i></a>サンプル環境の作成</h1>\n\n<p>MySQL Database Serviceを構築する例として以下の構成を作成<br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Ff54467dc-441f-c4d5-8f32-dd19f7709d53.gif?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ac39590dc19fb36f5deeae343386a4b4" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Ff54467dc-441f-c4d5-8f32-dd19f7709d53.gif?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ac39590dc19fb36f5deeae343386a4b4" alt="zu01.gif" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/f54467dc-441f-c4d5-8f32-dd19f7709d53.gif" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Ff54467dc-441f-c4d5-8f32-dd19f7709d53.gif?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d55d86d78613a5df3a2deafa67d3d445 1x" loading="lazy"></a><br>\nコンピュートインスタンスにnginxとphpをインストールし、wordpressモジュールを展開、MySQL Database ServiceにDatabaseとユーザを作成しています。<br>\nTerraform構成ファイルは<a href="https://github.com/kenwatan/terraform_OCIRM_sample_wordpress" rel="nofollow noopener" target="_blank">github</a>からダウンロード可能です。</p>\n\n<h1>\n<span id="環境構築の実行" class="fragment"></span><a href="#%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E5%AE%9F%E8%A1%8C"><i class="fa fa-link"></i></a>環境構築の実行</h1>\n\n<p>1.Webコンソールのメニューから「リソース・マネージャ」＞「スタック」を開き「スタックの作成」をクリック<br>\n2.githubから入手したtfファイルを圧縮したZIPファイルもしくはフォルダを指定してリソース・マネージャスタックを作成<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Ff86ea1f6-9fa7-30dd-df20-d8e221de6e11.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b632bcf2bde0dca2f86f3c144242a568" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Ff86ea1f6-9fa7-30dd-df20-d8e221de6e11.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b632bcf2bde0dca2f86f3c144242a568" alt="zu03.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/f86ea1f6-9fa7-30dd-df20-d8e221de6e11.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Ff86ea1f6-9fa7-30dd-df20-d8e221de6e11.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=08e7985e68f1f1997d896ecb2f4aeb81 1x" loading="lazy"></a><br>\n3. 計画ジョブ・適用ジョブを実行</p>\n\n<h1>\n<span id="サンプルファイルの補足" class="fragment"></span><a href="#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E8%A3%9C%E8%B6%B3"><i class="fa fa-link"></i></a>サンプルファイルの補足</h1>\n\n<h2>\n<span id="予約済パブリックipの使用" class="fragment"></span><a href="#%E4%BA%88%E7%B4%84%E6%B8%88%E3%83%91%E3%83%96%E3%83%AA%E3%83%83%E3%82%AFip%E3%81%AE%E4%BD%BF%E7%94%A8"><i class="fa fa-link"></i></a>予約済パブリックIPの使用</h2>\n\n<p>コンピュートインスタンスとロード・バランサには、それぞれ予約済パブリックIPを割り当ててみた</p>\n\n<h3>\n<span id="予約済パブリックipの生成" class="fragment"></span><a href="#%E4%BA%88%E7%B4%84%E6%B8%88%E3%83%91%E3%83%96%E3%83%AA%E3%83%83%E3%82%AFip%E3%81%AE%E7%94%9F%E6%88%90"><i class="fa fa-link"></i></a>予約済パブリックIPの生成</h3>\n\n<div class="code-frame" data-lang="hcl">\n<div class="code-lang"><span class="bold">publicip.tf</span></div>\n<div class="highlight"><pre><span class="nx">resource</span> <span class="nx">oci_core_public_ip</span> <span class="nx">publicip_lb</span> <span class="p">{</span>\n  <span class="nx">compartment_id</span> <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">compartment_ocid</span>\n  <span class="nx">display_name</span> <span class="p">=</span> <span class="s2">"lb01"</span>\n  <span class="nx">lifetime</span> <span class="p">=</span> <span class="s2">"RESERVED"</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n\n<h3>\n<span id="コンピュートインスタンスへの割り当て" class="fragment"></span><a href="#%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%83%88%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%81%B8%E3%81%AE%E5%89%B2%E3%82%8A%E5%BD%93%E3%81%A6"><i class="fa fa-link"></i></a>コンピュートインスタンスへの割り当て</h3>\n\n<p>パブリックIPを割り当てるVNIC、プライベートIPのOCIDを取得し、予約済パブリックIPを割り当てる</p>\n\n<div class="code-frame" data-lang="hcl">\n<div class="code-lang"><span class="bold">publicip_compute.tf</span></div>\n<div class="highlight"><pre><span class="nx">data</span> <span class="nx">oci_identity_availability_domain</span> <span class="nx">AD</span><span class="err">-</span><span class="mi">1</span> <span class="p">{</span>\n  <span class="nx">compartment_id</span> <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">compartment_ocid</span>\n  <span class="nx">ad_number</span>      <span class="p">=</span> <span class="s2">"1"</span>\n<span class="p">}</span>\n<span class="nx">data</span> <span class="nx">oci_core_vnic_attachments</span> <span class="nx">instance1_vnics</span> <span class="p">{</span>\n  <span class="nx">availability_domain</span> <span class="p">=</span> <span class="nx">data</span><span class="err">.</span><span class="nx">oci_identity_availability_domain</span><span class="err">.</span><span class="nx">AD</span><span class="err">-</span><span class="mi">1</span><span class="err">.</span><span class="nx">name</span>\n  <span class="nx">compartment_id</span>      <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">compartment_ocid</span>\n  <span class="nx">instance_id</span>         <span class="p">=</span> <span class="nx">oci_core_instance</span><span class="err">.</span><span class="nx">ap1</span><span class="err">.</span><span class="nx">id</span>\n<span class="p">}</span>\n\n<span class="nx">data</span> <span class="nx">oci_core_vnic</span> <span class="nx">instance1_primary_vnic</span> <span class="p">{</span>\n    <span class="nx">vnic_id</span> <span class="p">=</span> <span class="nx">data</span><span class="err">.</span><span class="nx">oci_core_vnic_attachments</span><span class="err">.</span><span class="nx">instance1_vnics</span><span class="err">.</span><span class="nx">vnic_attachments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="err">.</span><span class="nx">vnic_id</span>\n<span class="p">}</span>\n\n<span class="nx">data</span> <span class="nx">oci_core_private_ips</span> <span class="nx">instance1_ip</span> <span class="p">{</span>\n    <span class="nx">vnic_id</span> <span class="p">=</span> <span class="nx">data</span><span class="err">.</span><span class="nx">oci_core_vnic</span><span class="err">.</span><span class="nx">instance1_primary_vnic</span><span class="err">.</span><span class="nx">id</span>\n<span class="p">}</span>\n<span class="nx">resource</span> <span class="nx">oci_core_public_ip</span> <span class="nx">publicip_ap</span> <span class="p">{</span>\n  <span class="nx">compartment_id</span> <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">compartment_ocid</span>\n  <span class="nx">display_name</span> <span class="p">=</span> <span class="s2">"ap01"</span>\n  <span class="nx">lifetime</span>      <span class="p">=</span> <span class="s2">"RESERVED"</span>\n  <span class="nx">private_ip_id</span> <span class="p">=</span> <span class="nx">data</span><span class="err">.</span><span class="nx">oci_core_private_ips</span><span class="err">.</span><span class="nx">instance1_ip</span><span class="err">.</span><span class="nx">private_ips</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="err">.</span><span class="nx">id</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n\n<h3>\n<span id="ロードバランサへの割り当て" class="fragment"></span><a href="#%E3%83%AD%E3%83%BC%E3%83%89%E3%83%90%E3%83%A9%E3%83%B3%E3%82%B5%E3%81%B8%E3%81%AE%E5%89%B2%E3%82%8A%E5%BD%93%E3%81%A6"><i class="fa fa-link"></i></a>ロード・バランサへの割り当て</h3>\n\n<div class="code-frame" data-lang="hcl">\n<div class="code-lang"><span class="bold">publicip_lb.tf</span></div>\n<div class="highlight"><pre><span class="nx">resource</span> <span class="nx">oci_load_balancer_load_balancer</span> <span class="nx">LB1</span> <span class="p">{</span>\n  <span class="nx">compartment_id</span> <span class="p">=</span> <span class="nx">var</span><span class="err">.</span><span class="nx">compartment_ocid</span>\n  <span class="nx">display_name</span> <span class="p">=</span> <span class="s2">"LB1"</span>\n  <span class="nx">ip_mode</span>    <span class="p">=</span> <span class="s2">"IPV4"</span>\n  <span class="nx">is_private</span> <span class="p">=</span> <span class="s2">"false"</span>\n  <span class="nx">reserved_ips</span> <span class="p">{</span>\n    <span class="nx">id</span> <span class="p">=</span> <span class="nx">oci_core_public_ip</span><span class="err">.</span><span class="nx">publicip_lb</span><span class="err">.</span><span class="nx">id</span>\n  <span class="p">}</span>\n  <span class="nx">network_security_group_ids</span> <span class="p">=</span> <span class="p">[</span>\n    <span class="nx">oci_core_network_security_group</span><span class="err">.</span><span class="nx">export_Network</span><span class="err">-</span><span class="nx">Security</span><span class="err">-</span><span class="nx">Group</span><span class="err">-</span><span class="nx">for</span><span class="err">-</span><span class="nx">AP</span><span class="err">.</span><span class="nx">id</span><span class="p">,</span>\n  <span class="p">]</span>\n  <span class="nx">shape</span> <span class="p">=</span> <span class="s2">"100Mbps"</span>\n  <span class="nx">subnet_ids</span> <span class="p">=</span> <span class="p">[</span>\n    <span class="nx">oci_core_subnet</span><span class="err">.</span><span class="nx">export_PublicSubnet</span><span class="err">.</span><span class="nx">id</span><span class="p">,</span>\n  <span class="p">]</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n\n<h2>\n<span id="適用ジョブログ" class="fragment"></span><a href="#%E9%81%A9%E7%94%A8%E3%82%B8%E3%83%A7%E3%83%96%E3%83%AD%E3%82%B0"><i class="fa fa-link"></i></a>適用ジョブログ</h2>\n\n<p>適用ジョブのログに、ロードバランサ、APサーバのパブリックIPアドレスとAPサーバへのsshログイン用秘密鍵ファイル内容が出力される<br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Fd7d14641-4682-676c-e540-9c9f070456a1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4d8af30b901447a62735c6251e4c09e1" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Fd7d14641-4682-676c-e540-9c9f070456a1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4d8af30b901447a62735c6251e4c09e1" alt="zu04.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/d7d14641-4682-676c-e540-9c9f070456a1.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Fd7d14641-4682-676c-e540-9c9f070456a1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=81e8534e4331b942dc7fe5fff1980c84 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="wordpressの初期設定" class="fragment"></span><a href="#wordpress%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A"><i class="fa fa-link"></i></a>wordpressの初期設定</h2>\n\n<p>コンピュートインスタンスのパブリックIPアドレスに ブラウザで httpアクセスすることで wordpress 初期画面が表示されることを確認<br>\nhttp://&lt;コンピュートインスタンスパブリックIPアドレス&gt;/<br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Fd5a79762-c0c8-b24e-8fec-dab031258d13.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=26d49dab2500d9d4d9bfd2aee93a588f" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Fd5a79762-c0c8-b24e-8fec-dab031258d13.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=26d49dab2500d9d4d9bfd2aee93a588f" alt="zu02.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/d5a79762-c0c8-b24e-8fec-dab031258d13.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F108635%2Fd5a79762-c0c8-b24e-8fec-dab031258d13.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=cd3f3b1ba7611dff96638d0908eafafe 1x" loading="lazy"></a></p>\n\n<h1>\n<span id="おわりに" class="fragment"></span><a href="#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB"><i class="fa fa-link"></i></a>おわりに</h1>\n\n<p>OCIの Terraform マネージドサービスのリソース・マネージャを使用して MySQL Database Serviceおよびそれにアクセスするコンピュートインスタンスにwordpress環境をデプロイしてみた。</p>\n',body:'\nこの記事では、OCIのマネージドTerraform環境であるリソース・マネージャを使って、MySQL Database Serviceを作成してみたことを紹介します。\n\n# リソース・マネージャとは\nOracle Cloud Infrastructureリソースをプロビジョニングするプロセスを自動化できるOracle Cloud Infrastructureサービス\n「infrastructure-as-code」モデルを使用してリソースをインストール、構成、および管理するのに役立つTerraformのマネージド環境\n\n## リソース・マネージャの機能\nリソース・マネージャは以下のような特徴、機能があります（2020/11/15時点）\n- インフラストラクチャの自動化と標準化、環境のレプリケーションを容易に行う\n- Terraform エンジンのフルマネージドサービス\n- 指定したコンパートメントのリソースをTerraform構成ファイルの生成（Resource Discovery）\n- GitLabで管理されたTerraform構成ファイルからリソース・マネージャスタックの作成（構成ソース・プロバイダ）\n- スタックの最後に実行された構成と実際(現在)のインフラストラクチャの状態との差分抽出（ドリフト検出）\n- サンプル構成を使った環境構築\n- 使用できる Terraform フォーマットは v0.11/v0.12/v0.13\n\n以下のサンプルは Terraform v0.12 フォーマットで記載しています。\n\n# MYSQL Database Service 作成サンプル\n## 使用している変数\n- mysql_configuration_id：MYSQL Database ServiceのコンフィグレーションID![zu05.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/9eff2800-1d5b-cb7a-f48f-679c3a3d8717.png)\n- mysql_password\t：管理者ユーザパスワード\n- mysql_shape\t\t：MYSQL Database Serviceで利用するシェイプ\n- privateSubnet_id\t：サブネットOCID\n\n## 指定している名前\n- admin_username\t：管理者ユーザ名（admin）\n- hostname_label/display_name：ホスト名（mysql1）\n\n## そのほかはデフォルト設定を指定\n\n```mysql.tf\nresource oci_mysql_mysql_db_system export_MySQL1 {\n  admin_password      = var.mysql_password\n  admin_username      = "admin"\n  availability_domain = data.oci_identity_availability_domain.TGjA-AD-1.name\n  backup_policy {\n    is_enabled        = "true"\n    retention_in_days = "7"\n    window_start_time = "00:00"\n  }\n  compartment_id          = var.compartment_ocid\n  configuration_id        = var.mysql_configuration_id\n  data_storage_size_in_gb = "50"\n  display_name = "MySQL1"\n  fault_domain = "FAULT-DOMAIN-1"\n  hostname_label = "mysql1"\n  maintenance {\n    window_start_time = "WEDNESDAY 04:22"\n  }\n#  mysql_version = "8.0.22-u2-cloud"\n  port          = "3306"\n  port_x        = "33060"\n  shape_name    = var.mysql_shape\n  state     = "ACTIVE"\n  subnet_id = var.privateSubnet_id\n\n  lifecycle {\n    ignore_changes = [admin_password, admin_username]\n  }\n}\ndata oci_identity_availability_domain export_TGjA-AD-1 {\n  compartment_id = var.compartment_ocid\n  ad_number      = "1"\n}\n```\n\n# サンプル環境の作成\nMySQL Database Serviceを構築する例として以下の構成を作成\n![zu01.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/f54467dc-441f-c4d5-8f32-dd19f7709d53.gif)\nコンピュートインスタンスにnginxとphpをインストールし、wordpressモジュールを展開、MySQL Database ServiceにDatabaseとユーザを作成しています。\nTerraform構成ファイルは[github](https://github.com/kenwatan/terraform_OCIRM_sample_wordpress)からダウンロード可能です。\n\n\n\n# 環境構築の実行\n\n1.Webコンソールのメニューから「リソース・マネージャ」＞「スタック」を開き「スタックの作成」をクリック\n2.githubから入手したtfファイルを圧縮したZIPファイルもしくはフォルダを指定してリソース・マネージャスタックを作成![zu03.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/f86ea1f6-9fa7-30dd-df20-d8e221de6e11.png)\n3. 計画ジョブ・適用ジョブを実行\n\n# サンプルファイルの補足\n## 予約済パブリックIPの使用\nコンピュートインスタンスとロード・バランサには、それぞれ予約済パブリックIPを割り当ててみた\n\n### 予約済パブリックIPの生成\n\n```publicip.tf\nresource oci_core_public_ip publicip_lb {\n  compartment_id = var.compartment_ocid\n  display_name = "lb01"\n  lifetime = "RESERVED"\n}\n```\n\n### コンピュートインスタンスへの割り当て\nパブリックIPを割り当てるVNIC、プライベートIPのOCIDを取得し、予約済パブリックIPを割り当てる\n\n```publicip_compute.tf\ndata oci_identity_availability_domain AD-1 {\n  compartment_id = var.compartment_ocid\n  ad_number      = "1"\n}\ndata oci_core_vnic_attachments instance1_vnics {\n  availability_domain = data.oci_identity_availability_domain.AD-1.name\n  compartment_id      = var.compartment_ocid\n  instance_id         = oci_core_instance.ap1.id\n}\n\ndata oci_core_vnic instance1_primary_vnic {\n    vnic_id = data.oci_core_vnic_attachments.instance1_vnics.vnic_attachments[0].vnic_id\n}\n\ndata oci_core_private_ips instance1_ip {\n    vnic_id = data.oci_core_vnic.instance1_primary_vnic.id\n}\nresource oci_core_public_ip publicip_ap {\n  compartment_id = var.compartment_ocid\n  display_name = "ap01"\n  lifetime      = "RESERVED"\n  private_ip_id = data.oci_core_private_ips.instance1_ip.private_ips[0].id\n}\n```\n\n### ロード・バランサへの割り当て\n```publicip_lb.tf\nresource oci_load_balancer_load_balancer LB1 {\n  compartment_id = var.compartment_ocid\n  display_name = "LB1"\n  ip_mode    = "IPV4"\n  is_private = "false"\n  reserved_ips {\n    id = oci_core_public_ip.publicip_lb.id\n  }\n  network_security_group_ids = [\n    oci_core_network_security_group.export_Network-Security-Group-for-AP.id,\n  ]\n  shape = "100Mbps"\n  subnet_ids = [\n    oci_core_subnet.export_PublicSubnet.id,\n  ]\n}\n```\n\n## 適用ジョブログ\n適用ジョブのログに、ロードバランサ、APサーバのパブリックIPアドレスとAPサーバへのsshログイン用秘密鍵ファイル内容が出力される\n![zu04.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/d7d14641-4682-676c-e540-9c9f070456a1.png)\n\n\n## wordpressの初期設定\nコンピュートインスタンスのパブリックIPアドレスに ブラウザで httpアクセスすることで wordpress 初期画面が表示されることを確認\nhttp://<コンピュートインスタンスパブリックIPアドレス>/\n![zu02.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/108635/d5a79762-c0c8-b24e-8fec-dab031258d13.png)\n\n\n# おわりに\nOCIの Terraform マネージドサービスのリソース・マネージャを使用して MySQL Database Serviceおよびそれにアクセスするコンピュートインスタンスにwordpress環境をデプロイしてみた。\n',coediting:!1,comments_count:0,created_at:"2020-11-17T21:53:27+09:00",group:null,id:"a7dde25954c5f1f5d92b",likes_count:1,private:!1,reactions_count:0,tags:[{name:"MySQL",versions:[]},{name:"Terraform",versions:[]},{name:"oci",versions:[]},{name:"ResourceManager",versions:[]}],title:"[OCI]リソース・マネージャを使って、MYSQL Database Serviceを作成してみた (2020/11/15)",updated_at:"2020-11-17T22:25:00+09:00",url:"https://qiita.com/kenwatan/items/a7dde25954c5f1f5d92b",user:{description:"Database 好き",facebook_id:"",followees_count:6,followers_count:24,github_login_name:null,id:"kenwatan",items_count:30,linkedin_id:"",location:"",name:"",organization:"日本オラクル株式会社",permanent_id:108635,profile_image_url:"https://qiita-image-store.s3.amazonaws.com/0/108635/profile-images/1473710616",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'<p>自作PCの自動起動を好きにカスタムできる良い感じのアプリが無いので、自分で製作を考えている。試しにobnizを利用してWebアプリから電源ONを試作。　※今回は電源ONの代わりにLED点灯を試す。<br>\nちょっと分かり辛いが、電源ONクリックするとLEDが１秒点灯して消える。<br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2F18d24f32-0fcf-eaa8-7ef0-19cf9e4d9d60.gif?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b78d9a9c2fe8b29ffc7366ab7149bd12" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2F18d24f32-0fcf-eaa8-7ef0-19cf9e4d9d60.gif?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b78d9a9c2fe8b29ffc7366ab7149bd12" width="200" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/725039/18d24f32-0fcf-eaa8-7ef0-19cf9e4d9d60.gif" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2F18d24f32-0fcf-eaa8-7ef0-19cf9e4d9d60.gif?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b934524162aad4080160b00aaa017c20 1x" loading="lazy"></a></p>\n\n<h1>\n<span id="webアプリ画面" class="fragment"></span><a href="#web%E3%82%A2%E3%83%97%E3%83%AA%E7%94%BB%E9%9D%A2"><i class="fa fa-link"></i></a>Webアプリ画面</h1>\n\n<p>曜日別に起動時間を設定したいので、曜日別時間設定画面を設けた。データベース保存はまだ実装出来ていない。<a href="https://codepen.io/pmanrabbit/pen/jOrJOjr" rel="nofollow noopener" target="_blank">CodePenはコチラから</a><br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2Fbf72e907-8cda-f2b3-841d-37067e08a152.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2b82f3d3e62fc9176d01488ea31fbaf6" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2Fbf72e907-8cda-f2b3-841d-37067e08a152.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2b82f3d3e62fc9176d01488ea31fbaf6" alt="image.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/725039/bf72e907-8cda-f2b3-841d-37067e08a152.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2Fbf72e907-8cda-f2b3-841d-37067e08a152.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=17c68b0e5e32e05621228fb89976fbba 1x" loading="lazy"></a></p>\n\n<h1>\n<span id="コード" class="fragment"></span><a href="#%E3%82%B3%E3%83%BC%E3%83%89"><i class="fa fa-link"></i></a>コード</h1>\n\n<div class="code-frame" data-lang="html">\n<div class="code-lang"><span class="bold">.html</span></div>\n<div class="highlight"><pre><span class="cp">&lt;!DOCTYPE html&gt;</span>\n<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"jp"</span> <span class="nt">&gt;</span>\n<span class="nt">&lt;head&gt;</span>\n  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>\n  <span class="nt">&lt;title&gt;</span>HPC-accede<span class="nt">&lt;/title&gt;</span>\n  <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">\'stylesheet\'</span> <span class="na">href=</span><span class="s">\'https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.min.css\'</span><span class="nt">&gt;</span>\n<span class="nt">&lt;/head&gt;</span>\n\n<span class="nt">&lt;body&gt;</span>\n<span class="c">&lt;!-- 全体をVue.js有効にする --&gt;</span>\n<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span> <span class="na">class=</span><span class="s">"container text-white bg-dark p-1"</span><span class="nt">&gt;</span>\n\n  <span class="c">&lt;!-- タイトル --&gt;</span>\n  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row text-center"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-sm-6 mx-auto"</span><span class="nt">&gt;&lt;h1&gt;</span>HPC-accede<span class="nt">&lt;/h1&gt;&lt;/div&gt;</span>\n  <span class="nt">&lt;/div&gt;</span>\n  <span class="c">&lt;!-- 設定 --&gt;</span>\n  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group my-3 mx-4"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"border-bottom col-sm-12"</span><span class="nt">&gt;&lt;h5&gt;</span>Obniz ID<span class="nt">&lt;/h5&gt;&lt;/div&gt;</span>\n  <span class="nt">&lt;/div&gt;</span>\n  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group form-inline my-3 mx-5"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"ObnizID[0]"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">maxlength=</span><span class="s">"4"</span> <span class="na">style=</span><span class="s">"width:80px;"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"control-label mx-2"</span><span class="nt">&gt;</span>-<span class="nt">&lt;/label&gt;</span>\n    <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"ObnizID[1]"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">maxlength=</span><span class="s">"4"</span> <span class="na">style=</span><span class="s">"width:80px;"</span><span class="nt">&gt;</span>  \n  <span class="nt">&lt;/div&gt;</span>\n\n  <span class="c">&lt;!-- 即時電源ON --&gt;</span>\n  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group my-3 mx-4"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"border-bottom col-sm-12"</span><span class="nt">&gt;&lt;h5&gt;</span>即時起動<span class="nt">&lt;/h5&gt;&lt;/div&gt;</span>\n  <span class="nt">&lt;/div&gt;</span>\n  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group my-3 mx-5"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;button</span> <span class="na">v-on:click=</span><span class="s">"PowerON"</span> <span class="na">class=</span><span class="s">"btn btn-success"</span><span class="nt">&gt;</span>電源ON<span class="nt">&lt;/button&gt;</span>\n  <span class="nt">&lt;/div&gt;</span>\n\n  <span class="c">&lt;!-- 曜日指定 --&gt;</span>\n  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group my-3 mx-4"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"border-bottom col-sm-12"</span><span class="nt">&gt;&lt;h5&gt;</span>曜日別時間設定<span class="nt">&lt;/h5&gt;&lt;/div&gt;</span>\n  <span class="nt">&lt;/div&gt;</span>\n\n  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group form-inline col-sm-12"</span><span class="nt">&gt;</span>\n    <span class="c">&lt;!-- 日曜 --&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-inline col-sm-4 mb-2"</span><span class="nt">&gt;</span>\n      <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"control-label mx-3"</span><span class="nt">&gt;</span>日曜：<span class="nt">&lt;/label&gt;</span>\n      <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"WeekTime[\'Sun\']"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"time"</span> <span class="na">step=</span><span class="s">"1"</span> <span class="na">style=</span><span class="s">"width:130px;"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;/div&gt;</span>\n    <span class="c">&lt;!-- 月曜 --&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-inline col-sm-4 mb-2"</span><span class="nt">&gt;</span>\n      <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"control-label mx-3"</span><span class="nt">&gt;</span>月曜：<span class="nt">&lt;/label&gt;</span>\n      <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"WeekTime[\'Mon\']"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"time"</span> <span class="na">step=</span><span class="s">"1"</span> <span class="na">style=</span><span class="s">"width:130px;"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;/div&gt;</span>\n    <span class="c">&lt;!-- 火曜 --&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-inline col-sm-4 mb-2"</span><span class="nt">&gt;</span>\n      <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"control-label mx-3"</span><span class="nt">&gt;</span>火曜：<span class="nt">&lt;/label&gt;</span>\n      <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"WeekTime[\'Tue\']"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"time"</span> <span class="na">step=</span><span class="s">"1"</span> <span class="na">style=</span><span class="s">"width:130px;"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;/div&gt;</span>\n    <span class="c">&lt;!-- 水曜 --&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-inline col-sm-4 mb-2"</span><span class="nt">&gt;</span>\n      <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"control-label mx-3"</span><span class="nt">&gt;</span>水曜：<span class="nt">&lt;/label&gt;</span>\n      <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"WeekTime[\'Wed\']"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"time"</span> <span class="na">step=</span><span class="s">"1"</span> <span class="na">style=</span><span class="s">"width:130px;"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;/div&gt;</span>\n    <span class="c">&lt;!-- 木曜 --&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-inline col-sm-4 mb-2"</span><span class="nt">&gt;</span>\n      <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"control-label mx-3"</span><span class="nt">&gt;</span>木曜：<span class="nt">&lt;/label&gt;</span>\n      <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"WeekTime[\'Thu\']"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"time"</span> <span class="na">step=</span><span class="s">"1"</span> <span class="na">style=</span><span class="s">"width:130px;"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;/div&gt;</span>\n    <span class="c">&lt;!-- 金曜 --&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-inline col-sm-4 mb-2"</span><span class="nt">&gt;</span>\n      <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"control-label mx-3"</span><span class="nt">&gt;</span>金曜：<span class="nt">&lt;/label&gt;</span>\n      <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"WeekTime[\'Fri\']"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"time"</span> <span class="na">step=</span><span class="s">"1"</span> <span class="na">style=</span><span class="s">"width:130px;"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;/div&gt;</span>\n    <span class="c">&lt;!-- 土曜 --&gt;</span>\n    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-inline col-sm-4 mb-2"</span><span class="nt">&gt;</span>\n      <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"control-label mx-3"</span><span class="nt">&gt;</span>土曜：<span class="nt">&lt;/label&gt;</span>\n      <span class="nt">&lt;input</span> <span class="na">v-model:value=</span><span class="s">"WeekTime[\'Sat\']"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">type=</span><span class="s">"time"</span> <span class="na">step=</span><span class="s">"1"</span> <span class="na">style=</span><span class="s">"width:130px;"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;/div&gt;</span>\n  <span class="nt">&lt;/div&gt;</span>\n<span class="nt">&lt;/div&gt;</span>\n\n<span class="c">&lt;!-- CDN --&gt;</span>\n<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">\'https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.11/vue.min.js\'</span><span class="nt">&gt;&lt;/script&gt;</span>\n<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">\'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\'</span><span class="nt">&gt;&lt;/script&gt;</span>\n<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">\'https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.3/js/bootstrap.min.js\'</span><span class="nt">&gt;&lt;/script&gt;</span>\n<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">\'https://unpkg.com/obniz@3.9.0/obniz.js\'</span><span class="nt">&gt;</span>\n<span class="nt">&lt;/script&gt;&lt;script  </span><span class="na">src=</span><span class="s">"./script.js"</span><span class="nt">&gt;&lt;/script&gt;</span>\n\n<span class="nt">&lt;/body&gt;</span>\n<span class="nt">&lt;/html&gt;</span>\n</pre></div>\n</div>\n\n<div class="code-frame" data-lang="javascript">\n<div class="code-lang"><span class="bold">script.js</span></div>\n<div class="highlight"><pre><span class="c1">// 任意の秒数待つことができる関数</span>\n<span class="kd">const</span> <span class="nx">sleep</span> <span class="o">=</span> <span class="p">(</span><span class="nx">msec</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">res</span><span class="p">,</span> <span class="nx">msec</span><span class="p">));</span>\n<span class="c1">// Obniz関数</span>\n<span class="kd">let</span> <span class="nx">obniz</span><span class="p">;</span>\n\n<span class="c1">// Obniz呼び出し関数</span>\n<span class="kd">const</span> <span class="nx">connect</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">func</span><span class="p">,</span> <span class="nx">ob</span><span class="p">){</span>\n  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ob</span><span class="p">.</span><span class="nx">connectionState</span><span class="p">);</span>\n  <span class="c1">// Obnizへの接続を確認</span>\n  <span class="k">if</span> <span class="p">(</span><span class="nx">ob</span><span class="p">.</span><span class="nx">connectionState</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">connected</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>\n    <span class="nx">func</span><span class="p">();</span>\n  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>\n    <span class="nx">ob</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">\'</span><span class="s1">connect</span><span class="dl">\'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>\n      <span class="nx">func</span><span class="p">();</span>\n    <span class="p">})</span>\n  <span class="p">}</span>\n<span class="p">}</span>\n\n<span class="kd">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>\n  <span class="na">el</span><span class="p">:</span> <span class="dl">\'</span><span class="s1">#app</span><span class="dl">\'</span><span class="p">,</span> <span class="c1">// Vueが管理する一番外側のDOM要素</span>\n  <span class="na">data</span><span class="p">:</span> <span class="p">{</span>\n    <span class="c1">// Vue内部で利用する変数定義</span>\n    <span class="na">ObnizID</span><span class="p">:</span> <span class="p">[</span><span class="dl">\'</span><span class="s1">0000</span><span class="dl">\'</span><span class="p">,</span> <span class="dl">\'</span><span class="s1">0000</span><span class="dl">\'</span><span class="p">],</span>\n    <span class="na">WeekTime</span><span class="p">:</span> <span class="p">[</span>\n      <span class="p">{</span><span class="dl">\'</span><span class="s1">Sun</span><span class="dl">\'</span><span class="p">:</span><span class="dl">\'</span><span class="s1">00:00:00</span><span class="dl">\'</span><span class="p">},</span>\n      <span class="p">{</span><span class="dl">\'</span><span class="s1">Mon</span><span class="dl">\'</span><span class="p">:</span><span class="dl">\'</span><span class="s1">00:00:00</span><span class="dl">\'</span><span class="p">},</span>\n      <span class="p">{</span><span class="dl">\'</span><span class="s1">Tue</span><span class="dl">\'</span><span class="p">:</span><span class="dl">\'</span><span class="s1">00:00:00</span><span class="dl">\'</span><span class="p">},</span>\n      <span class="p">{</span><span class="dl">\'</span><span class="s1">Wed</span><span class="dl">\'</span><span class="p">:</span><span class="dl">\'</span><span class="s1">00:00:00</span><span class="dl">\'</span><span class="p">},</span>\n      <span class="p">{</span><span class="dl">\'</span><span class="s1">Thu</span><span class="dl">\'</span><span class="p">:</span><span class="dl">\'</span><span class="s1">00:00:00</span><span class="dl">\'</span><span class="p">},</span>\n      <span class="p">{</span><span class="dl">\'</span><span class="s1">Fri</span><span class="dl">\'</span><span class="p">:</span><span class="dl">\'</span><span class="s1">00:00:00</span><span class="dl">\'</span><span class="p">},</span>\n      <span class="p">{</span><span class="dl">\'</span><span class="s1">Sat</span><span class="dl">\'</span><span class="p">:</span><span class="dl">\'</span><span class="s1">00:00:00</span><span class="dl">\'</span><span class="p">},</span>\n    <span class="p">],</span>\n  <span class="p">},</span>\n\n  <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>\n    <span class="c1">// 関数はココに記述</span>\n    <span class="na">PowerON</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>\n      <span class="c1">// LED ON</span>\n      <span class="c1">// Obniz ID 指定</span>\n      <span class="kd">let</span> <span class="nx">obnizid</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">ObnizID</span><span class="p">[</span><span class="mi">0</span><span class="p">]}</span><span class="err">-</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">ObnizID</span><span class="p">[</span><span class="mi">1</span><span class="p">]}</span><span class="s2">`</span><span class="p">;</span>\n      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obnizid</span><span class="p">);</span>\n      <span class="k">this</span><span class="p">.</span><span class="nx">obniz</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Obniz</span><span class="p">(</span><span class="nx">obnizid</span><span class="p">);</span>\n\n      <span class="kd">let</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span> <span class="c1">// thisを関数内で使えないので変数に代入</span>\n      <span class="c1">// connect関数を呼んで、connect関数内で以下のFunctionを実行</span>\n      <span class="nx">connect</span><span class="p">(</span><span class="k">async</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>\n        <span class="kd">const</span> <span class="nx">led</span> <span class="o">=</span> <span class="nx">me</span><span class="p">.</span><span class="nx">obniz</span><span class="p">.</span><span class="nx">wired</span><span class="p">(</span><span class="dl">\'</span><span class="s1">LED</span><span class="dl">\'</span><span class="p">,</span> <span class="p">{</span> <span class="na">anode</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="na">cathode</span><span class="p">:</span> <span class="mi">1</span> <span class="p">});</span>\n        <span class="nx">me</span><span class="p">.</span><span class="nx">obniz</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>\n        <span class="nx">me</span><span class="p">.</span><span class="nx">obniz</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nx">print</span><span class="p">(</span><span class="dl">\'</span><span class="s1">ON</span><span class="dl">\'</span><span class="p">);</span>\n        <span class="nx">led</span><span class="p">.</span><span class="nx">on</span><span class="p">();</span> <span class="k">await</span> <span class="nx">sleep</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="nx">led</span><span class="p">.</span><span class="nx">off</span><span class="p">();</span>   <span class="c1">// LED点灯 1s</span>\n        <span class="nx">me</span><span class="p">.</span><span class="nx">obniz</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>\n      <span class="p">},</span> <span class="k">this</span><span class="p">.</span><span class="nx">obniz</span><span class="p">);</span>\n    <span class="p">},</span>\n  <span class="p">},</span>\n<span class="p">});</span>\n</pre></div>\n</div>\n\n<h1>\n<span id="弟に使い勝手とかを聞いてみた" class="fragment"></span><a href="#%E5%BC%9F%E3%81%AB%E4%BD%BF%E3%81%84%E5%8B%9D%E6%89%8B%E3%81%A8%E3%81%8B%E3%82%92%E8%81%9E%E3%81%84%E3%81%A6%E3%81%BF%E3%81%9F"><i class="fa fa-link"></i></a>弟に使い勝手とかを聞いてみた</h1>\n\n<p>今回はLED点灯だが、完成後はPCが起動するようになるイメージを持ってもらったうえで使ってもらった。</p>\n\n<h4>\n<span id="操作面" class="fragment"></span><a href="#%E6%93%8D%E4%BD%9C%E9%9D%A2"><i class="fa fa-link"></i></a>操作面</h4>\n\n<ul>\n<li>初回実行時のLED点灯の動作がちょっとおかしい。　※コーディングミスってるかも。</li>\n<li>初期設定（ObnizID）は別メニューの方が良いと思う。</li>\n<li>電源ON を押したらすぐ起動しちゃうの？間違えて起動とか考慮したら？</li>\n<li>毎日を同じ時間にしたい場合、一つずつ設定するのは面倒では？</li>\n<li>電源OFF は出来ないんだよね？（聞いてみただけみたい。）</li>\n<li>この日だけ臨時で時間設定とか出来たら良いのでは？</li>\n<li>プリセット登録（パターンを予め設定できる）とかどう？</li>\n</ul>\n\n<h4>\n<span id="企画面" class="fragment"></span><a href="#%E4%BC%81%E7%94%BB%E9%9D%A2"><i class="fa fa-link"></i></a>企画面</h4>\n\n<ul>\n<li>自作PCじゃないから使わないな。（自作PCでしか出来ない？）</li>\n<li>同じ仕組みで遠隔起動出来ると良いかもしれないけど、思いつかないね。（私も思いつかない。）</li>\n</ul>\n\n<h1>\n<span id="なぜ自動起動したいか補足" class="fragment"></span><a href="#%E3%81%AA%E3%81%9C%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%9F%E3%81%84%E3%81%8B%E8%A3%9C%E8%B6%B3"><i class="fa fa-link"></i></a>なぜ自動起動したいか（補足）</h1>\n\n<p>PCでTV録画しているからって理由。毎日同じ時間で起動はBIOSで設定できるけど、もう少し起動時間をフレキシブルに変更したいっていう私のわがまま。</p>\n\n<h1>\n<span id="想定イメージ" class="fragment"></span><a href="#%E6%83%B3%E5%AE%9A%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8"><i class="fa fa-link"></i></a>想定イメージ</h1>\n\n<p>今回はWebアプリとObnizの連携部分のみの実装。<strong>LED部分をリレーと置き換え、自作PCのPowerSWと置き換えてショートさせれば電源ON出来る想定。（たぶん。）</strong><br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2Fb52cdc08-5878-4805-1737-80a5f82f9a40.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6e3783c39159114381608cdd1a488aaf" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2Fb52cdc08-5878-4805-1737-80a5f82f9a40.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6e3783c39159114381608cdd1a488aaf" width="450" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/725039/b52cdc08-5878-4805-1737-80a5f82f9a40.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F725039%2Fb52cdc08-5878-4805-1737-80a5f82f9a40.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=13714baf7628c9e3443a11330a6e3496 1x" loading="lazy"></a></p>\n',body:'自作PCの自動起動を好きにカスタムできる良い感じのアプリが無いので、自分で製作を考えている。試しにobnizを利用してWebアプリから電源ONを試作。　※今回は電源ONの代わりにLED点灯を試す。\nちょっと分かり辛いが、電源ONクリックするとLEDが１秒点灯して消える。\n<img src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/725039/18d24f32-0fcf-eaa8-7ef0-19cf9e4d9d60.gif" width="200">\n\n#Webアプリ画面\n曜日別に起動時間を設定したいので、曜日別時間設定画面を設けた。データベース保存はまだ実装出来ていない。[CodePenはコチラから](https://codepen.io/pmanrabbit/pen/jOrJOjr)\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/725039/bf72e907-8cda-f2b3-841d-37067e08a152.png)\n\n#コード\n```html:.html\n<!DOCTYPE html>\n<html lang="jp" >\n<head>\n  <meta charset="UTF-8">\n  <title>HPC-accede</title>\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel=\'stylesheet\' href=\'https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.min.css\'>\n</head>\n\n<body>\n\x3c!-- 全体をVue.js有効にする --\x3e\n<div id="app" class="container text-white bg-dark p-1">\n\n  \x3c!-- タイトル --\x3e\n  <div class="row text-center">\n    <div class="col-sm-6 mx-auto"><h1>HPC-accede</h1></div>\n  </div>\n  \x3c!-- 設定 --\x3e\n  <div class="form-group my-3 mx-4">\n    <div class="border-bottom col-sm-12"><h5>Obniz ID</h5></div>\n  </div>\n  <div class="form-group form-inline my-3 mx-5">\n    <input v-model:value="ObnizID[0]" class="form-control" type="text" maxlength="4" style="width:80px;">\n    <label class="control-label mx-2">-</label>\n    <input v-model:value="ObnizID[1]" class="form-control" type="text" maxlength="4" style="width:80px;">  \n  </div>\n\n  \x3c!-- 即時電源ON --\x3e\n  <div class="form-group my-3 mx-4">\n    <div class="border-bottom col-sm-12"><h5>即時起動</h5></div>\n  </div>\n  <div class="form-group my-3 mx-5">\n    <button v-on:click="PowerON" class="btn btn-success">電源ON</button>\n  </div>\n\n  \x3c!-- 曜日指定 --\x3e\n  <div class="form-group my-3 mx-4">\n    <div class="border-bottom col-sm-12"><h5>曜日別時間設定</h5></div>\n  </div>\n\n  <div class="form-group form-inline col-sm-12">\n    \x3c!-- 日曜 --\x3e\n    <div class="form-inline col-sm-4 mb-2">\n      <label class="control-label mx-3">日曜：</label>\n      <input v-model:value="WeekTime[\'Sun\']" class="form-control" type="time" step="1" style="width:130px;">\n    </div>\n    \x3c!-- 月曜 --\x3e\n    <div class="form-inline col-sm-4 mb-2">\n      <label class="control-label mx-3">月曜：</label>\n      <input v-model:value="WeekTime[\'Mon\']" class="form-control" type="time" step="1" style="width:130px;">\n    </div>\n    \x3c!-- 火曜 --\x3e\n    <div class="form-inline col-sm-4 mb-2">\n      <label class="control-label mx-3">火曜：</label>\n      <input v-model:value="WeekTime[\'Tue\']" class="form-control" type="time" step="1" style="width:130px;">\n    </div>\n    \x3c!-- 水曜 --\x3e\n    <div class="form-inline col-sm-4 mb-2">\n      <label class="control-label mx-3">水曜：</label>\n      <input v-model:value="WeekTime[\'Wed\']" class="form-control" type="time" step="1" style="width:130px;">\n    </div>\n    \x3c!-- 木曜 --\x3e\n    <div class="form-inline col-sm-4 mb-2">\n      <label class="control-label mx-3">木曜：</label>\n      <input v-model:value="WeekTime[\'Thu\']" class="form-control" type="time" step="1" style="width:130px;">\n    </div>\n    \x3c!-- 金曜 --\x3e\n    <div class="form-inline col-sm-4 mb-2">\n      <label class="control-label mx-3">金曜：</label>\n      <input v-model:value="WeekTime[\'Fri\']" class="form-control" type="time" step="1" style="width:130px;">\n    </div>\n    \x3c!-- 土曜 --\x3e\n    <div class="form-inline col-sm-4 mb-2">\n      <label class="control-label mx-3">土曜：</label>\n      <input v-model:value="WeekTime[\'Sat\']" class="form-control" type="time" step="1" style="width:130px;">\n    </div>\n  </div>\n</div>\n\n\x3c!-- CDN --\x3e\n<script src=\'https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.11/vue.min.js\'><\/script>\n<script src=\'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\'><\/script>\n<script src=\'https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.3/js/bootstrap.min.js\'><\/script>\n<script src=\'https://unpkg.com/obniz@3.9.0/obniz.js\'>\n<\/script><script  src="./script.js"><\/script>\n\n</body>\n</html>\n```\n\n```javascript:script.js\n// 任意の秒数待つことができる関数\nconst sleep = (msec) => new Promise(res => setTimeout(res, msec));\n// Obniz関数\nlet obniz;\n\n// Obniz呼び出し関数\nconst connect = function(func, ob){\n  console.log(ob.connectionState);\n  // Obnizへの接続を確認\n  if (ob.connectionState === "connected") {\n    func();\n  } else {\n    ob.on(\'connect\', () => {\n      func();\n    })\n  }\n}\n\nconst app = new Vue({\n  el: \'#app\', // Vueが管理する一番外側のDOM要素\n  data: {\n    // Vue内部で利用する変数定義\n    ObnizID: [\'0000\', \'0000\'],\n    WeekTime: [\n      {\'Sun\':\'00:00:00\'},\n      {\'Mon\':\'00:00:00\'},\n      {\'Tue\':\'00:00:00\'},\n      {\'Wed\':\'00:00:00\'},\n      {\'Thu\':\'00:00:00\'},\n      {\'Fri\':\'00:00:00\'},\n      {\'Sat\':\'00:00:00\'},\n    ],\n  },\n\n  methods: {\n    // 関数はココに記述\n    PowerON: function() {\n      // LED ON\n      // Obniz ID 指定\n      let obnizid = `${this.ObnizID[0]}-${this.ObnizID[1]}`;\n      console.log(obnizid);\n      this.obniz = new Obniz(obnizid);\n\n      let me = this; // thisを関数内で使えないので変数に代入\n      // connect関数を呼んで、connect関数内で以下のFunctionを実行\n      connect(async function() {\n        const led = me.obniz.wired(\'LED\', { anode: 0, cathode: 1 });\n        me.obniz.display.clear();\n        me.obniz.display.print(\'ON\');\n        led.on(); await sleep(1000); led.off();   // LED点灯 1s\n        me.obniz.display.clear();\n      }, this.obniz);\n    },\n  },\n});\n```\n\n#弟に使い勝手とかを聞いてみた\n今回はLED点灯だが、完成後はPCが起動するようになるイメージを持ってもらったうえで使ってもらった。\n\n####操作面\n* 初回実行時のLED点灯の動作がちょっとおかしい。　※コーディングミスってるかも。\n* 初期設定（ObnizID）は別メニューの方が良いと思う。\n* 電源ON を押したらすぐ起動しちゃうの？間違えて起動とか考慮したら？\n* 毎日を同じ時間にしたい場合、一つずつ設定するのは面倒では？\n* 電源OFF は出来ないんだよね？（聞いてみただけみたい。）\n* この日だけ臨時で時間設定とか出来たら良いのでは？\n* プリセット登録（パターンを予め設定できる）とかどう？\n\n####企画面\n* 自作PCじゃないから使わないな。（自作PCでしか出来ない？）\n* 同じ仕組みで遠隔起動出来ると良いかもしれないけど、思いつかないね。（私も思いつかない。）\n\n#なぜ自動起動したいか（補足）\nPCでTV録画しているからって理由。毎日同じ時間で起動はBIOSで設定できるけど、もう少し起動時間をフレキシブルに変更したいっていう私のわがまま。\n\n#想定イメージ\n今回はWebアプリとObnizの連携部分のみの実装。**LED部分をリレーと置き換え、自作PCのPowerSWと置き換えてショートさせれば電源ON出来る想定。（たぶん。）**\n<img src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/725039/b52cdc08-5878-4805-1737-80a5f82f9a40.png" width="450">\n\n\n\n\n\n\n\n',coediting:!1,comments_count:0,created_at:"2020-11-17T21:53:02+09:00",group:null,id:"dc265392961b2182b9b0",likes_count:0,private:!1,reactions_count:0,tags:[{name:"HTML",versions:[]},{name:"JavaScript",versions:[]},{name:"Vue.js",versions:[]},{name:"obniz",versions:[]}],title:"自作PC特化だけど、リモート起動や自動起動を好きにカスタムできるWebアプリをobnizで試作してみた",updated_at:"2020-11-17T21:53:52+09:00",url:"https://qiita.com/PmanRabbit/items/dc265392961b2182b9b0",user:{description:"",facebook_id:"",followees_count:8,followers_count:9,github_login_name:null,id:"PmanRabbit",items_count:16,linkedin_id:"",location:"",name:"Jun Is",organization:"",permanent_id:725039,profile_image_url:"https://lh4.googleusercontent.com/-HiRgT9BwGhs/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucn6fEww7AM-iQ47zqz2c1L2l8N65A/s50/photo.jpg",team_only:!1,twitter_screen_name:"PmanRabbit",website_url:""},page_views_count:null},{rendered_body:'\n<h1>\n<span id="はじめに" class="fragment"></span><a href="#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB"><i class="fa fa-link"></i></a>はじめに</h1>\n\n<p>今回はDeviseを使ってログイン機能を作成していきます。<br>\nまたDeviseの日本語化やBootstrap4の適用までを行っていきます。</p>\n\n<h1>\n<span id="準備" class="fragment"></span><a href="#%E6%BA%96%E5%82%99"><i class="fa fa-link"></i></a>準備</h1>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>$ rails new devise-sample \n$ rails g controller homes index\n</pre></div></div>\n\n<div class="code-frame" data-lang="ruby">\n<div class="code-lang"><span class="bold">config/routes.rb</span></div>\n<div class="highlight"><pre><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">routes</span><span class="p">.</span><span class="nf">draw</span> <span class="k">do</span>\n  <span class="n">root</span> <span class="s1">\'homes#index\'</span>\n<span class="k">end</span>\n</pre></div>\n</div>\n\n<h2>\n<span id="ナビバーを追加しレスポンシブ対応のためのmetaタグを追加" class="fragment"></span><a href="#%E3%83%8A%E3%83%93%E3%83%90%E3%83%BC%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%97%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B7%E3%83%96%E5%AF%BE%E5%BF%9C%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEmeta%E3%82%BF%E3%82%B0%E3%82%92%E8%BF%BD%E5%8A%A0"><i class="fa fa-link"></i></a>ナビバーを追加し，レスポンシブ対応のためのmetaタグを追加</h2>\n\n<div class="code-frame" data-lang="html+erb">\n<div class="code-lang"><span class="bold">app/views/layouts/application.html.erb</span></div>\n<div class="highlight"><pre> (略)\n     &lt;%= csrf_meta_tags %&gt;\n     &lt;%= csp_meta_tag %&gt;\n     &lt;meta name="viewport" content="width=device-width,initial-scale=1"&gt;　　//追加\n (略)\n  &lt;body&gt;\n     &lt;%= render \'shared/header\' %&gt;     //追加\n     &lt;%= yield %&gt;\n   &lt;/body&gt;\n</pre></div>\n</div>\n\n<div class="code-frame" data-lang="html+erb">\n<div class="code-lang"><span class="bold">app/views/homes/index.html.erb</span></div>\n<div class="highlight"><pre>&lt;%= render \'shared/flash_messages\' %&gt;\n</pre></div>\n</div>\n\n<h3>\n<span id="新しくsharedフォルダと各renderファイルを作成" class="fragment"></span><a href="#%E6%96%B0%E3%81%97%E3%81%8Fshared%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%81%A8%E5%90%84render%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90"><i class="fa fa-link"></i></a>新しくsharedフォルダと各renderファイルを作成</h3>\n\n<div class="code-frame" data-lang="html+erb">\n<div class="code-lang"><span class="bold">app/views/shared/flash_messages.html.erb</span></div>\n<div class="highlight"><pre>&lt;% flash.each do |msg_type, msg| %&gt;\n  &lt;div class="alert alert-&lt;%= msg_type %&gt;" role="alert" id="alert"&gt;\n    &lt;a href="#" class="close" data-dismiss="alert"&gt;×&lt;/a&gt;\n    &lt;%= msg %&gt;\n  &lt;/div&gt;\n&lt;% end %&gt;\n</pre></div>\n</div>\n\n<div class="code-frame" data-lang="html+erb">\n<div class="code-lang"><span class="bold">app/views/shared/_header.html.erb</span></div>\n<div class="highlight"><pre>&lt;header&gt;\n  &lt;nav class="navbar navbar-expand navbar-light"&gt;\n    &lt;%= link_to "Deviseサンプル", root_path, class: \'navbar-brand\' %&gt;\n    &lt;div id="Navber"&gt;\n      &lt;ul class="navbar-nav"&gt;\n        &lt;% if user_signed_in? %&gt;\n          &lt;li class="nav-item active"&gt;\n            &lt;%= link_to \'アカウント編集\', edit_user_registration_path, class: \'nav-link\' %&gt;\n          &lt;/li&gt;\n          &lt;li class="nav-item active"&gt;\n            &lt;%= link_to \'ログアウト\', destroy_user_session_path, method: :delete, class: \'nav-link\' %&gt;\n          &lt;/li&gt;\n      &lt;% else %&gt;\n          &lt;li class="nav-item active"&gt;\n            &lt;%= link_to "新規登録", new_user_registration_path, class: \'nav-link\' %&gt;\n          &lt;/li&gt;\n          &lt;li class="nav-item active"&gt;\n            &lt;%= link_to "ログイン", new_user_session_path, class: \'nav-link\' %&gt;\n          &lt;/li&gt;\n        &lt;% end %&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  &lt;/nav&gt;\n&lt;/header&gt;\n</pre></div>\n</div>\n\n<h2>\n<span id="gemの追加" class="fragment"></span><a href="#gem%E3%81%AE%E8%BF%BD%E5%8A%A0"><i class="fa fa-link"></i></a>Gemの追加</h2>\n\n<p>Gemfileに以下を追加して<code>$ bundle install</code></p>\n\n<div class="code-frame" data-lang="Gemfile"><div class="highlight"><pre># ログイン機能に必要なGem\ngem \'devise\'\n\n# 日本語化に必要なGem\ngem \'rails-i18n\', \'~&gt; 5.1\'\ngem \'devise-i18n\'\n\n# Bootstrapに必要なGem\ngem \'bootstrap\', \'~&gt; 4.4.1\'\ngem \'jquery-rails\'\ngem \'devise-bootstrap-views\', \'~&gt; 1.0\'\n</pre></div></div>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>$ bundle install\n</pre></div></div>\n\n<h2>\n<span id="bootstrapの導入" class="fragment"></span><a href="#bootstrap%E3%81%AE%E5%B0%8E%E5%85%A5"><i class="fa fa-link"></i></a>Bootstrapの導入</h2>\n\n<ul>\n<li><p><code>application.css</code>の拡張子を<code>scss</code>に変更</p></li>\n<li><p><code>application.scss</code>から，<code>*= require_tree .</code>と<code>*= require_self</code>を削除</p></li>\n<li><p><code>application.scss</code>に<code>@import "bootstrap";</code>を追加</p></li>\n<li><p>スタイルも追加</p></li>\n</ul>\n\n<div class="code-frame" data-lang="scss">\n<div class="code-lang"><span class="bold">app/assets/stylesheets/application.scss</span></div>\n<div class="highlight"><pre><span class="k">@import</span> <span class="s2">"bootstrap"</span><span class="p">;</span>\n\n<span class="c1">// ログイン画面</span>\n\n<span class="nc">.container-login</span> <span class="p">{</span>\n  <span class="k">@extend</span> <span class="nc">.container-fluid</span><span class="p">;</span>\n  <span class="nl">max-width</span><span class="p">:</span> <span class="m">576px</span><span class="p">;</span>\n  <span class="nl">padding</span><span class="p">:</span> <span class="m">2rem</span><span class="p">;</span>\n<span class="p">}</span>\n\n<span class="c1">// 「ログインしました」などのフラッシュ用スタイル</span>\n\n<span class="nc">.alert-notice</span> <span class="p">{</span>\n  <span class="k">@extend</span> <span class="nc">.alert-info</span><span class="p">;</span>\n<span class="p">}</span>\n\n<span class="nc">.alert-alert</span> <span class="p">{</span>\n  <span class="k">@extend</span> <span class="nc">.alert-danger</span><span class="p">;</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n\n<h3>\n<span id="applicationjsに３つ追加" class="fragment"></span><a href="#applicationjs%E3%81%AB%EF%BC%93%E3%81%A4%E8%BF%BD%E5%8A%A0"><i class="fa fa-link"></i></a>application.jsに３つ追加</h3>\n\n<div class="code-frame" data-lang="javascript">\n<div class="code-lang"><span class="bold">app/assets/javascripts/application.js</span></div>\n<div class="highlight"><pre><span class="c1">//= require jquery3</span>\n<span class="c1">//= require popper</span>\n<span class="c1">//= require bootstrap-sprockets</span>\n</pre></div>\n</div>\n\n<h2>\n<span id="deviseの導入" class="fragment"></span><a href="#devise%E3%81%AE%E5%B0%8E%E5%85%A5"><i class="fa fa-link"></i></a>Deviseの導入</h2>\n\n<p><code>Devise</code>をインストール（userの箇所は，任意のモデル名でOKです）</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>$ rails g devise:install\n$ rails g devise user\n$ rails db:create db:migrate\n</pre></div></div>\n\n<p>問題がなければ，<code>$ rails s</code>の後，<code>http://localhost:3000</code>からログインボタンを押せば，ログイン画面が表示されます。</p>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fdd512864-c4ee-b2e8-b1ca-6b877cc8562e.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c5fe6d2a81422949f78fddbedd125e75" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fdd512864-c4ee-b2e8-b1ca-6b877cc8562e.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c5fe6d2a81422949f78fddbedd125e75" alt="スクリーンショット 2020-11-16 15.19.55.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/dd512864-c4ee-b2e8-b1ca-6b877cc8562e.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fdd512864-c4ee-b2e8-b1ca-6b877cc8562e.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=50f77bd3c1d886ca94d161ac9fb9a268 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="deviseの日本語化" class="fragment"></span><a href="#devise%E3%81%AE%E6%97%A5%E6%9C%AC%E8%AA%9E%E5%8C%96"><i class="fa fa-link"></i></a>Deviseの日本語化</h2>\n\n<div class="code-frame" data-lang="ruby">\n<div class="code-lang"><span class="bold">config/application.rb</span></div>\n<div class="highlight"><pre><span class="k">module</span> <span class="nn">AssociationTutorial</span>\n  <span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>\n    <span class="c1"># 以下を追加すれば日本語に</span>\n    <span class="n">config</span><span class="p">.</span><span class="nf">i18n</span><span class="p">.</span><span class="nf">default_locale</span> <span class="o">=</span> <span class="ss">:ja</span> \n    <span class="c1"># タイムゾーンも変更するなら，以下を追加</span>\n    <span class="n">config</span><span class="p">.</span><span class="nf">time_zone</span> <span class="o">=</span> <span class="s1">\'Asia/Tokyo\'</span>   \n  <span class="k">end</span>\n<span class="k">end</span>\n</pre></div>\n</div>\n\n<p>サーバーを落として<code>$ rails s</code><br>\nで再起動すれば日本語に変更されます。</p>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F23554109-48a5-ccd8-d5ae-920455fb038e.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=05ab34e9e72ccf8e0c64d2320be04619" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F23554109-48a5-ccd8-d5ae-920455fb038e.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=05ab34e9e72ccf8e0c64d2320be04619" alt="スクリーンショット 2020-11-16 15.28.53.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/23554109-48a5-ccd8-d5ae-920455fb038e.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F23554109-48a5-ccd8-d5ae-920455fb038e.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=8010294cc474d7873f6dd55fd44460bf 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="日本語訳を変更" class="fragment"></span><a href="#%E6%97%A5%E6%9C%AC%E8%AA%9E%E8%A8%B3%E3%82%92%E5%A4%89%E6%9B%B4"><i class="fa fa-link"></i></a>日本語訳を変更</h2>\n\n<p>日本語訳を変更したい場合は，次のコマンドでconfig/locales/devise.views.ja.ymlを作成し，編集すればOKです。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>$ rails g devise:i18n:locale ja\n</pre></div></div>\n\n<p>例えばアカウント登録を新規登録に変更したい場合は，config/locals/devise.views.ja.ymlの該当文字を置換すればOKです。</p>\n\n<p>パスワードを忘れましたか?も違和感がありますので，パスワードの再設定に置換するのがよいと思います</p>\n\n<h2>\n<span id="ログイン画面などの変更" class="fragment"></span><a href="#%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E7%94%BB%E9%9D%A2%E3%81%AA%E3%81%A9%E3%81%AE%E5%A4%89%E6%9B%B4"><i class="fa fa-link"></i></a>ログイン画面などの変更</h2>\n\n<p>まず，次のコマンドでビューファイルを作成します。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>$ rails g devise:i18n:views\n$ rails g devise:views:bootstrap_templates -f\n</pre></div></div>\n\n<p>【参考】それぞれのコマンドの最後に例えばuserをつけることで，usersディレクトリ内にファイルを作成することもできますが，その場合は，次の3つの作業を行わないと反映されません。</p>\n\n<p><code>devise.views.ja.yml</code>30行目の<code>devise</code>を<code>users</code>に変更<br>\n<code>config/initializers/devise.rbにあるconfig.scoped_views = false</code>のコメントアウトを外して<code>true</code>に変更<br>\nサーバーを落として<code>$ rails s</code>で再起動</p>\n\n<p>お好みで変えていく<br>\n例えば</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>&lt;div class="container-login"&gt;\n  # 元のプログラム\n&lt;/div&gt;\n</pre></div></div>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fb18e1cd9-4812-ecd1-dce6-95976cb542f3.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=d6cbb801ed1ae134f813d82baa533274" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fb18e1cd9-4812-ecd1-dce6-95976cb542f3.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=d6cbb801ed1ae134f813d82baa533274" alt="スクリーンショット 2020-11-17 21.05.45.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/b18e1cd9-4812-ecd1-dce6-95976cb542f3.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fb18e1cd9-4812-ecd1-dce6-95976cb542f3.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=900c669ace24c60c87de8d4c079d565e 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="エラーメッセージの変更" class="fragment"></span><a href="#%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E5%A4%89%E6%9B%B4"><i class="fa fa-link"></i></a>エラーメッセージの変更</h2>\n\n<p>エラーメッセージの表示がいまいちなので変更するためにオーバーライドします。<br>\n<code>app/helpers/devise_helper.rb</code>ファイルを作成し、以下を記述。</p>\n\n<div class="code-frame" data-lang="ruby">\n<div class="code-lang"><span class="bold">app/helpers/devise_helper.rb</span></div>\n<div class="highlight"><pre><span class="k">module</span> <span class="nn">DeviseHelper</span>\n  <span class="k">def</span> <span class="nf">bootstrap_devise_error_messages!</span>\n    <span class="k">return</span> <span class="s2">""</span> <span class="k">if</span> <span class="n">resource</span><span class="p">.</span><span class="nf">errors</span><span class="p">.</span><span class="nf">empty?</span>\n\n    <span class="n">html</span> <span class="o">=</span> <span class="s2">""</span>\n    <span class="n">resource</span><span class="p">.</span><span class="nf">errors</span><span class="p">.</span><span class="nf">full_messages</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">error_message</span><span class="o">|</span>\n      <span class="n">html</span> <span class="o">+=</span> <span class="o">&lt;&lt;-</span><span class="no">EOF</span><span class="sh">\n      &lt;div class="alert alert-danger alert-dismissible" role="alert"&gt;\n        &lt;button type="button" class="close" data-dismiss="alert"&gt;\n          &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;\n          &lt;span class="sr-only"&gt;close&lt;/span&gt;\n        &lt;/button&gt;\n        </span><span class="si">#{</span><span class="n">error_message</span><span class="si">}</span><span class="sh">\n      &lt;/div&gt;\n</span><span class="no">      EOF</span>\n    <span class="k">end</span>\n    <span class="n">html</span><span class="p">.</span><span class="nf">html_safe</span>\n  <span class="k">end</span>\n<span class="k">end</span>\n</pre></div>\n</div>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Feee35f4e-f827-84e7-3cda-465cd30c9fb1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=16183d95d96bc05c03b7682960907343" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Feee35f4e-f827-84e7-3cda-465cd30c9fb1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=16183d95d96bc05c03b7682960907343" alt="スクリーンショット 2020-11-17 21.16.46.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/eee35f4e-f827-84e7-3cda-465cd30c9fb1.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Feee35f4e-f827-84e7-3cda-465cd30c9fb1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=5b34a76930de4dc7bd6a57933e37480e 1x" loading="lazy"></a></p>\n\n<h3>\n<span id="ログイン画面にもエラーメッセージを追加" class="fragment"></span><a href="#%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E7%94%BB%E9%9D%A2%E3%81%AB%E3%82%82%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%82%92%E8%BF%BD%E5%8A%A0"><i class="fa fa-link"></i></a>ログイン画面にもエラーメッセージを追加</h3>\n\n<div class="code-frame" data-lang="html+erb">\n<div class="code-lang"><span class="bold">app/views/devise/sessions/new.html.erb</span></div>\n<div class="highlight"><pre> &lt;div class="container-login"&gt;\n   &lt;h1&gt;&lt;%= t(\'.sign_in\') %&gt;&lt;/h1&gt;\n   &lt;%= render \'shared/flash_messages\' %&gt;    //追加\n\n   &lt;%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %&gt;\n</pre></div>\n</div>\n\n<ul>\n<li>\n<code>app/views/devise</code>ディレクトリ内のファイルの<code>btn btn-primary</code>を<code>btn btn-primary btn-block</code>に置換すればボタンの横幅が自然になります。</li>\n</ul>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F33c11bf6-9e59-f8fe-5a88-c1c783fec992.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=65c0ffc1d5225cbf46d6ff5220ccd212" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F33c11bf6-9e59-f8fe-5a88-c1c783fec992.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=65c0ffc1d5225cbf46d6ff5220ccd212" alt="スクリーンショット 2020-11-17 21.21.35.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/33c11bf6-9e59-f8fe-5a88-c1c783fec992.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F33c11bf6-9e59-f8fe-5a88-c1c783fec992.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ba0212fb8d9096dc9b134586f315f30d 1x" loading="lazy"></a></p>\n\n<h2>\n<span id="バリデーション" class="fragment"></span><a href="#%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3"><i class="fa fa-link"></i></a>バリデーション</h2>\n\n<p>バリデーションはフロント側にも簡単に入れられます。</p>\n\n<ul>\n<li>\n<code>f.email_field，f.password_field</code>に<code>required: true</code>を入れることで空欄投稿できなくなります。</li>\n<li>新規登録（アカウント登録）画面では，例えば，<code>f.password_field</code>に<code>required: true, minlength: @minimum_password_length, maxlength: \'30\'</code>を追加すれば，文字数のバリデーションを追加できます。</li>\n</ul>\n\n<div class="code-frame" data-lang="html+erb">\n<div class="code-lang"><span class="bold">app/views/devise/registrations/new.html.erb</span></div>\n<div class="highlight"><pre> &lt;div class="form-group"&gt;\n       &lt;%= f.label :password %&gt;\n-      &lt;%= f.password_field :password, autocomplete: \'current-password\',\n-                                      class: \'form-control\' %&gt;\n+      &lt;%= f.password_field :password, autocomplete: \'current-password\',\n+                                      class: \'form-control\',\n+                                      required: true,\n+                                      minlength: @minimum_password_length,\n+                                      maxlength: \'30\' %&gt;\n</pre></div>\n</div>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fa6992649-7fc0-0b6d-da76-b4c14ae8d494.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=729e0dcdaef7ab5b0aacd87a4c263c6e" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fa6992649-7fc0-0b6d-da76-b4c14ae8d494.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=729e0dcdaef7ab5b0aacd87a4c263c6e" alt="スクリーンショット 2020-11-17 21.33.29.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/a6992649-7fc0-0b6d-da76-b4c14ae8d494.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2Fa6992649-7fc0-0b6d-da76-b4c14ae8d494.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=97a4940b84aec2315390f8fbc20f536d 1x" loading="lazy"></a></p>\n\n<p><code>_links.html.erb</code>を編集して，一番下のリンクをボタンにしてみます。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>&lt;hr class="border-dark my-5"&gt;\n&lt;div class="form-group"&gt;\n  &lt;%- if controller_name != \'sessions\' %&gt;\n    &lt;%= link_to t(".sign_in"), new_session_path(resource_name), class: \'btn btn-info btn-block\' %&gt;&lt;br /&gt;\n  &lt;% end -%&gt;\n\n  &lt;%- if devise_mapping.registerable? &amp;&amp; controller_name != \'registrations\' %&gt;\n    &lt;%= link_to t(".sign_up"), new_registration_path(resource_name), class: \'btn btn-info btn-block\' %&gt;&lt;br /&gt;\n  &lt;% end -%&gt;\n\n  &lt;%- if devise_mapping.recoverable? &amp;&amp; controller_name != \'passwords\' &amp;&amp; controller_name != \'registrations\' %&gt;\n    &lt;%= link_to t(".forgot_your_password"), new_password_path(resource_name), class: \'btn btn-secondary btn-block\' %&gt;&lt;br /&gt;\n  &lt;% end -%&gt;\n\n  &lt;%- if devise_mapping.confirmable? &amp;&amp; controller_name != \'confirmations\' %&gt;\n    &lt;%= link_to t(\'.didn_t_receive_confirmation_instructions\'), new_confirmation_path(resource_name), class: \'btn btn-secondary btn-block\' %&gt;&lt;br /&gt;\n  &lt;% end -%&gt;\n\n  &lt;%- if devise_mapping.lockable? &amp;&amp; resource_class.unlock_strategy_enabled?(:email) &amp;&amp; controller_name != \'unlocks\' %&gt;\n    &lt;%= link_to t(\'.didn_t_receive_unlock_instructions\'), new_unlock_path(resource_name), class: \'btn btn-secondary btn-block\' %&gt;&lt;br /&gt;\n  &lt;% end -%&gt;\n\n  &lt;%- if devise_mapping.omniauthable? %&gt;\n    &lt;%- resource_class.omniauth_providers.each do |provider| %&gt;\n      &lt;%= link_to t(\'.sign_in_with_provider\', provider: OmniAuth::Utils.camelize(provider)), omniauth_authorize_path(resource_name, provider), class: \'btn btn-info btn-block\' %&gt;&lt;br /&gt;\n    &lt;% end -%&gt;\n  &lt;% end -%&gt;\n&lt;/div&gt;\n</pre></div></div>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F4ead8d0a-6e65-75e2-9529-be259698393f.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8e076bcf2d86fedf13a579d3e6d2cbd0" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F4ead8d0a-6e65-75e2-9529-be259698393f.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8e076bcf2d86fedf13a579d3e6d2cbd0" alt="スクリーンショット 2020-11-17 21.37.44.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/4ead8d0a-6e65-75e2-9529-be259698393f.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F4ead8d0a-6e65-75e2-9529-be259698393f.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=6091e2fca1f4a97b6875ed3a08693659 1x" loading="lazy"></a></p>\n\n<p>さらに，リンクのログイン，新規登録（アカウント登録）を次のように変更してみます</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre># 上２つを次に置き換え\n\n  &lt;%- if controller_name != \'sessions\' %&gt;\n    &lt;%= link_to "アカウントをお持ちの方", new_session_path(resource_name), class: \'btn btn-info btn-block\' %&gt;&lt;br /&gt;\n  &lt;% end -%&gt;\n\n  &lt;%- if devise_mapping.registerable? &amp;&amp; controller_name != \'registrations\' %&gt;\n    &lt;%= link_to "アカウントをお持ちでない方", new_registration_path(resource_name), class: \'btn btn-info btn-block\' %&gt;&lt;br /&gt;\n  &lt;% end -%&gt;\n</pre></div></div>\n\n<div class="code-frame" data-lang="html+erb">\n<div class="code-lang"><span class="bold">app/views/devise/registrations/edit.html.erb</span></div>\n<div class="highlight"><pre>&lt;!-- ここから --&gt;\n  &lt;p&gt;&lt;%= t(\'.unhappy\') %&gt;\n    ? &lt;%= link_to t(\'.cancel_my_account\'), registration_path(resource_name), data: {confirm: t(\'.are_you_sure\')}, method: :delete %&gt;\n    .&lt;/p&gt;\n\n  &lt;%= link_to t(\'.back\'), :back %&gt;\n&lt;!-- ここまでを次に置き換える --&gt;\n\n  &lt;hr class="devise-link my-5"&gt;\n  &lt;div class="form-group"&gt;\n    &lt;%= link_to "トップページ", root_path, class: \'btn btn-info btn-block mb-4\' %&gt;\n    &lt;%= link_to t(\'.cancel_my_account\'), registration_path(resource_name), data: {confirm: t(\'.are_you_sure\')}, method: :delete, class: \'btn btn-danger btn-block\' %&gt;\n  &lt;/div&gt;\n</pre></div>\n</div>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F14b66ed3-4061-49b9-7e3f-d8cfdae3c8cf.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b1cf05c598a754f4d28f02a9c30e0777" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F14b66ed3-4061-49b9-7e3f-d8cfdae3c8cf.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b1cf05c598a754f4d28f02a9c30e0777" alt="スクリーンショット 2020-11-17 21.47.19.png" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/14b66ed3-4061-49b9-7e3f-d8cfdae3c8cf.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F752006%2F14b66ed3-4061-49b9-7e3f-d8cfdae3c8cf.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f6b3ec32b177496e5a0878e9bbde258a 1x" loading="lazy"></a></p>\n\n<p>これで一応単純なスタイルは完成です。<br>\nもし間違っているところがあればご教授いただけると幸いです。</p>\n',body:"# はじめに\n今回はDeviseを使ってログイン機能を作成していきます。\nまたDeviseの日本語化やBootstrap4の適用までを行っていきます。\n\n\n# 準備\n\n```\n$ rails new devise-sample \n$ rails g controller homes index\n```\n```config/routes.rb\nRails.application.routes.draw do\n  root 'homes#index'\nend\n```\n\n## ナビバーを追加し，レスポンシブ対応のためのmetaタグを追加\n```app/views/layouts/application.html.erb\n (略)\n     <%= csrf_meta_tags %>\n     <%= csp_meta_tag %>\n     <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">　　//追加\n (略)\n  <body>\n     <%= render 'shared/header' %>     //追加\n     <%= yield %>\n   </body>\n```\n\n```app/views/homes/index.html.erb\n<%= render 'shared/flash_messages' %>\n```\n\n### 新しくsharedフォルダと各renderファイルを作成\n\n```app/views/shared/flash_messages.html.erb\n<% flash.each do |msg_type, msg| %>\n  <div class=\"alert alert-<%= msg_type %>\" role=\"alert\" id=\"alert\">\n    <a href=\"#\" class=\"close\" data-dismiss=\"alert\">×</a>\n    <%= msg %>\n  </div>\n<% end %>\n```\n\n ```app/views/shared/_header.html.erb\n<header>\n  <nav class=\"navbar navbar-expand navbar-light\">\n    <%= link_to \"Deviseサンプル\", root_path, class: 'navbar-brand' %>\n    <div id=\"Navber\">\n      <ul class=\"navbar-nav\">\n        <% if user_signed_in? %>\n          <li class=\"nav-item active\">\n            <%= link_to 'アカウント編集', edit_user_registration_path, class: 'nav-link' %>\n          </li>\n          <li class=\"nav-item active\">\n            <%= link_to 'ログアウト', destroy_user_session_path, method: :delete, class: 'nav-link' %>\n          </li>\n      <% else %>\n          <li class=\"nav-item active\">\n            <%= link_to \"新規登録\", new_user_registration_path, class: 'nav-link' %>\n          </li>\n          <li class=\"nav-item active\">\n            <%= link_to \"ログイン\", new_user_session_path, class: 'nav-link' %>\n          </li>\n        <% end %>\n      </ul>\n    </div>\n  </nav>\n</header>\n```\n\n## Gemの追加\n\nGemfileに以下を追加して`$ bundle install`\n\n```Gemfile\n# ログイン機能に必要なGem\ngem 'devise'\n\n# 日本語化に必要なGem\ngem 'rails-i18n', '~> 5.1'\ngem 'devise-i18n'\n\n# Bootstrapに必要なGem\ngem 'bootstrap', '~> 4.4.1'\ngem 'jquery-rails'\ngem 'devise-bootstrap-views', '~> 1.0'\n```\n```\n$ bundle install\n```\n\n##Bootstrapの導入\n\n* `application.css`の拡張子を`scss`に変更\n\n* `application.scss`から，`*= require_tree .`と`*= require_self`を削除\n\n* `application.scss`に`@import \"bootstrap\";`を追加\n\n* スタイルも追加\n\n```app/assets/stylesheets/application.scss\n@import \"bootstrap\";\n\n// ログイン画面\n\n.container-login {\n  @extend .container-fluid;\n  max-width: 576px;\n  padding: 2rem;\n}\n\n// 「ログインしました」などのフラッシュ用スタイル\n\n.alert-notice {\n  @extend .alert-info;\n}\n\n.alert-alert {\n  @extend .alert-danger;\n}\n```\n\n###application.jsに３つ追加\n\n```app/assets/javascripts/application.js\n//= require jquery3\n//= require popper\n//= require bootstrap-sprockets\n```\n\n##Deviseの導入\n`Devise`をインストール（userの箇所は，任意のモデル名でOKです）\n\n```\n$ rails g devise:install\n$ rails g devise user\n$ rails db:create db:migrate\n```\n\n問題がなければ，`$ rails s`の後，`http://localhost:3000`からログインボタンを押せば，ログイン画面が表示されます。\n\n![スクリーンショット 2020-11-16 15.19.55.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/dd512864-c4ee-b2e8-b1ca-6b877cc8562e.png)\n\n##Deviseの日本語化\n```config/application.rb\nmodule AssociationTutorial\n  class Application < Rails::Application\n    # 以下を追加すれば日本語に\n    config.i18n.default_locale = :ja \n    # タイムゾーンも変更するなら，以下を追加\n    config.time_zone = 'Asia/Tokyo'   \n  end\nend\n```\n\nサーバーを落として`$ rails s`\nで再起動すれば日本語に変更されます。\n\n![スクリーンショット 2020-11-16 15.28.53.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/23554109-48a5-ccd8-d5ae-920455fb038e.png)\n\n\n## 日本語訳を変更\n日本語訳を変更したい場合は，次のコマンドでconfig/locales/devise.views.ja.ymlを作成し，編集すればOKです。\n\n\n```\n$ rails g devise:i18n:locale ja\n```\n\n例えばアカウント登録を新規登録に変更したい場合は，config/locals/devise.views.ja.ymlの該当文字を置換すればOKです。\n\nパスワードを忘れましたか?も違和感がありますので，パスワードの再設定に置換するのがよいと思います\n\n\n##ログイン画面などの変更\nまず，次のコマンドでビューファイルを作成します。\n\n```\n$ rails g devise:i18n:views\n$ rails g devise:views:bootstrap_templates -f\n```\n\n【参考】それぞれのコマンドの最後に例えばuserをつけることで，usersディレクトリ内にファイルを作成することもできますが，その場合は，次の3つの作業を行わないと反映されません。\n\n`devise.views.ja.yml`30行目の`devise`を`users`に変更\n`config/initializers/devise.rbにあるconfig.scoped_views = false`のコメントアウトを外して`true`に変更\nサーバーを落として`$ rails s`で再起動\n\n\nお好みで変えていく\n例えば\n\n```\n<div class=\"container-login\">\n  # 元のプログラム\n</div>\n```\n![スクリーンショット 2020-11-17 21.05.45.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/b18e1cd9-4812-ecd1-dce6-95976cb542f3.png)\n\n##エラーメッセージの変更\nエラーメッセージの表示がいまいちなので変更するためにオーバーライドします。\n`app/helpers/devise_helper.rb`ファイルを作成し、以下を記述。\n\n```app/helpers/devise_helper.rb\nmodule DeviseHelper\n  def bootstrap_devise_error_messages!\n    return \"\" if resource.errors.empty?\n\n    html = \"\"\n    resource.errors.full_messages.each do |error_message|\n      html += <<-EOF\n      <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">\n          <span aria-hidden=\"true\">&times;</span>\n          <span class=\"sr-only\">close</span>\n        </button>\n        #{error_message}\n      </div>\n      EOF\n    end\n    html.html_safe\n  end\nend\n```\n\n![スクリーンショット 2020-11-17 21.16.46.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/eee35f4e-f827-84e7-3cda-465cd30c9fb1.png)\n\n###ログイン画面にもエラーメッセージを追加\n\n```app/views/devise/sessions/new.html.erb\n <div class=\"container-login\">\n   <h1><%= t('.sign_in') %></h1>\n   <%= render 'shared/flash_messages' %>    //追加\n\n   <%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>\n```\n\n* `app/views/devise`ディレクトリ内のファイルの`btn btn-primary`を`btn btn-primary btn-block`に置換すればボタンの横幅が自然になります。\n\n\n![スクリーンショット 2020-11-17 21.21.35.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/33c11bf6-9e59-f8fe-5a88-c1c783fec992.png)\n\n##バリデーション\nバリデーションはフロント側にも簡単に入れられます。\n\n* `f.email_field，f.password_field`に`required: true`を入れることで空欄投稿できなくなります。\n* 新規登録（アカウント登録）画面では，例えば，`f.password_field`に`required: true, minlength: @minimum_password_length, maxlength: '30'`を追加すれば，文字数のバリデーションを追加できます。\n\n\n```app/views/devise/registrations/new.html.erb\n <div class=\"form-group\">\n       <%= f.label :password %>\n-      <%= f.password_field :password, autocomplete: 'current-password',\n-                                      class: 'form-control' %>\n+      <%= f.password_field :password, autocomplete: 'current-password',\n+                                      class: 'form-control',\n+                                      required: true,\n+                                      minlength: @minimum_password_length,\n+                                      maxlength: '30' %>\n```\n\n![スクリーンショット 2020-11-17 21.33.29.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/a6992649-7fc0-0b6d-da76-b4c14ae8d494.png)\n\n`_links.html.erb`を編集して，一番下のリンクをボタンにしてみます。\n\n```\n<hr class=\"border-dark my-5\">\n<div class=\"form-group\">\n  <%- if controller_name != 'sessions' %>\n    <%= link_to t(\".sign_in\"), new_session_path(resource_name), class: 'btn btn-info btn-block' %><br />\n  <% end -%>\n\n  <%- if devise_mapping.registerable? && controller_name != 'registrations' %>\n    <%= link_to t(\".sign_up\"), new_registration_path(resource_name), class: 'btn btn-info btn-block' %><br />\n  <% end -%>\n\n  <%- if devise_mapping.recoverable? && controller_name != 'passwords' && controller_name != 'registrations' %>\n    <%= link_to t(\".forgot_your_password\"), new_password_path(resource_name), class: 'btn btn-secondary btn-block' %><br />\n  <% end -%>\n\n  <%- if devise_mapping.confirmable? && controller_name != 'confirmations' %>\n    <%= link_to t('.didn_t_receive_confirmation_instructions'), new_confirmation_path(resource_name), class: 'btn btn-secondary btn-block' %><br />\n  <% end -%>\n\n  <%- if devise_mapping.lockable? && resource_class.unlock_strategy_enabled?(:email) && controller_name != 'unlocks' %>\n    <%= link_to t('.didn_t_receive_unlock_instructions'), new_unlock_path(resource_name), class: 'btn btn-secondary btn-block' %><br />\n  <% end -%>\n\n  <%- if devise_mapping.omniauthable? %>\n    <%- resource_class.omniauth_providers.each do |provider| %>\n      <%= link_to t('.sign_in_with_provider', provider: OmniAuth::Utils.camelize(provider)), omniauth_authorize_path(resource_name, provider), class: 'btn btn-info btn-block' %><br />\n    <% end -%>\n  <% end -%>\n</div>\n```\n![スクリーンショット 2020-11-17 21.37.44.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/4ead8d0a-6e65-75e2-9529-be259698393f.png)\n\nさらに，リンクのログイン，新規登録（アカウント登録）を次のように変更してみます\n\n```\n# 上２つを次に置き換え\n\n  <%- if controller_name != 'sessions' %>\n    <%= link_to \"アカウントをお持ちの方\", new_session_path(resource_name), class: 'btn btn-info btn-block' %><br />\n  <% end -%>\n\n  <%- if devise_mapping.registerable? && controller_name != 'registrations' %>\n    <%= link_to \"アカウントをお持ちでない方\", new_registration_path(resource_name), class: 'btn btn-info btn-block' %><br />\n  <% end -%>\n```\n\n```app/views/devise/registrations/edit.html.erb\n\x3c!-- ここから --\x3e\n  <p><%= t('.unhappy') %>\n    ? <%= link_to t('.cancel_my_account'), registration_path(resource_name), data: {confirm: t('.are_you_sure')}, method: :delete %>\n    .</p>\n\n  <%= link_to t('.back'), :back %>\n\x3c!-- ここまでを次に置き換える --\x3e\n\n  <hr class=\"devise-link my-5\">\n  <div class=\"form-group\">\n    <%= link_to \"トップページ\", root_path, class: 'btn btn-info btn-block mb-4' %>\n    <%= link_to t('.cancel_my_account'), registration_path(resource_name), data: {confirm: t('.are_you_sure')}, method: :delete, class: 'btn btn-danger btn-block' %>\n  </div>\n```\n![スクリーンショット 2020-11-17 21.47.19.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/752006/14b66ed3-4061-49b9-7e3f-d8cfdae3c8cf.png)\n\nこれで一応単純なスタイルは完成です。\nもし間違っているところがあればご教授いただけると幸いです。\n",coediting:!1,comments_count:0,created_at:"2020-11-17T21:50:48+09:00",group:null,id:"6adb01cf09dce7b6870f",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Rails",versions:[]},{name:"devise",versions:[]}],title:"Deviseでログイン機能",updated_at:"2020-11-17T21:50:48+09:00",url:"https://qiita.com/mat827/items/6adb01cf09dce7b6870f",user:{description:"某プログラミングスクールに通っていました。現在は転職活動中です。 学んだことやプロダクトをアウトプットしていきます。 よろしくお願いします！",facebook_id:"",followees_count:0,followers_count:1,github_login_name:"mat827",id:"mat827",items_count:32,linkedin_id:"",location:"",name:"Mst",organization:"",permanent_id:752006,profile_image_url:"https://avatars1.githubusercontent.com/u/62657297?v=4",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'<p>こちらの記事は以下の書籍を参考にアウトプットとして執筆しました。<br>\n<a href="https://www.amazon.co.jp/gp/product/B0787YH4L2/ref=ppx_yo_dt_b_d_asin_title_o00?ie=UTF8&amp;psc=1" rel="nofollow noopener" target="_blank">新・明解C++入門</a></p>\n\n<p>とりあえず1章ずつ記事にしていく方向で行こうと思います。</p>\n\n<h3>\n<span id="処理系" class="fragment"></span><a href="#%E5%87%A6%E7%90%86%E7%B3%BB"><i class="fa fa-link"></i></a>処理系</h3>\n\n<p>C++プログラム開発に必要なソフトウェア</p>\n\n<ul>\n<li>Microsoft zVisual c++</li>\n<li>GNU C++</li>\n</ul>\n\n<p>など</p>\n\n<h3>\n<span id="std名前空間の利用" class="fragment"></span><a href="#std%E5%90%8D%E5%89%8D%E7%A9%BA%E9%96%93%E3%81%AE%E5%88%A9%E7%94%A8"><i class="fa fa-link"></i></a>std名前空間の利用</h3>\n\n<p>std名前空間の利用しないで<code>cout</code>を使用する場合、<code>std::cout</code>とする必要がある。<br>\nいまは呪文として落とし込んでおく。</p>\n\n<h3>\n<span id="整数接尾語" class="fragment"></span><a href="#%E6%95%B4%E6%95%B0%E6%8E%A5%E5%B0%BE%E8%AA%9E"><i class="fa fa-link"></i></a>整数接尾語</h3>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>u,U</td>\n<td>その整数定数が符号なしである</td>\n</tr>\n<tr>\n<td>l,L</td>\n<td>その整数定数がlongである</td>\n</tr>\n</tbody>\n</table>\n\n<h4>\n<span id="例" class="fragment"></span><a href="#%E4%BE%8B"><i class="fa fa-link"></i></a>例</h4>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>1000→int型で表現できる→int型\n60000→int型で表現できないがlong型で表現可能→long型\n60000U→unsigned型で表現可能→unsigned型\n</pre></div></div>\n\n<h3>\n<span id="文字列の読込" class="fragment"></span><a href="#%E6%96%87%E5%AD%97%E5%88%97%E3%81%AE%E8%AA%AD%E8%BE%BC"><i class="fa fa-link"></i></a>文字列の読込</h3>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cin</td>\n<td>スペースを含まない</td>\n</tr>\n<tr>\n<td>getline(cin,変数名)</td>\n<td>スペースを含む</td>\n</tr>\n</tbody>\n</table>\n\n<h3>\n<span id="bool" class="fragment"></span><a href="#bool"><i class="fa fa-link"></i></a>bool</h3>\n\n<p>boolalpha操作子を使うと真偽値をアルファベットで表示<br>\nnoboolalphaで数値で表示</p>\n\n<div class="code-frame" data-lang="c++"><div class="highlight"><pre><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">boolalpha</span><span class="p">;</span>\n<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">noboolalpha</span><span class="p">;</span>\n</pre></div></div>\n\n<h3>\n<span id="浮動小数点型" class="fragment"></span><a href="#%E6%B5%AE%E5%8B%95%E5%B0%8F%E6%95%B0%E7%82%B9%E5%9E%8B"><i class="fa fa-link"></i></a>浮動小数点型</h3>\n\n<p>小数点以下を持つ実数のことで型は</p>\n\n<ul>\n<li>float</li>\n<li>double</li>\n<li>long double</li>\n</ul>\n\n<p>の3つがある</p>\n\n<h4>\n<span id="浮動小数点リテラル" class="fragment"></span><a href="#%E6%B5%AE%E5%8B%95%E5%B0%8F%E6%95%B0%E7%82%B9%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB"><i class="fa fa-link"></i></a>浮動小数点リテラル</h4>\n\n<p>3.14などの実数を表す定数</p>\n\n<h4>\n<span id="浮動小数点接尾語" class="fragment"></span><a href="#%E6%B5%AE%E5%8B%95%E5%B0%8F%E6%95%B0%E7%82%B9%E6%8E%A5%E5%B0%BE%E8%AA%9E"><i class="fa fa-link"></i></a>浮動小数点接尾語</h4>\n\n<table>\n<thead>\n<tr>\n<th>接尾語</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f,F</td>\n<td>float型</td>\n</tr>\n<tr>\n<td>l,L</td>\n<td>long double型</td>\n</tr>\n<tr>\n<td>接尾語がない</td>\n<td>double型</td>\n</tr>\n</tbody>\n</table>\n\n<h3>\n<span id="演算と型" class="fragment"></span><a href="#%E6%BC%94%E7%AE%97%E3%81%A8%E5%9E%8B"><i class="fa fa-link"></i></a>演算と型</h3>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>int型+int型=int型\ndouble型+double型=double型\nint型+double型=double型\n</pre></div></div>\n\n<p>int型とdouble型混同では<strong>暗黙の型変換</strong>が起きている<br>\n整数と浮動小数点の型変換には静的キャストが適している。</p>\n\n<h3>\n<span id="列挙体" class="fragment"></span><a href="#%E5%88%97%E6%8C%99%E4%BD%93"><i class="fa fa-link"></i></a>列挙体</h3>\n\n<p>整数値の集まり</p>\n\n<h2>\n<span id="配列" class="fragment"></span><a href="#%E9%85%8D%E5%88%97"><i class="fa fa-link"></i></a>配列</h2>\n\n<h3>\n<span id="定値オブジェクト" class="fragment"></span><a href="#%E5%AE%9A%E5%80%A4%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88"><i class="fa fa-link"></i></a>定値オブジェクト</h3>\n\n<p>配列の宣言時に大きさをconstが使えるということ</p>\n',body:"こちらの記事は以下の書籍を参考にアウトプットとして執筆しました。\n[新・明解C++入門](https://www.amazon.co.jp/gp/product/B0787YH4L2/ref=ppx_yo_dt_b_d_asin_title_o00?ie=UTF8&psc=1)\n\nとりあえず1章ずつ記事にしていく方向で行こうと思います。\n\n\n###処理系\nC++プログラム開発に必要なソフトウェア\n\n- Microsoft zVisual c++\n- GNU C++\n\nなど\n\n###std名前空間の利用\nstd名前空間の利用しないで`cout`を使用する場合、`std::cout`とする必要がある。\nいまは呪文として落とし込んでおく。\n\n###整数接尾語\n||説明|\n|---|---|\n|u,U|その整数定数が符号なしである|\n|l,L|その整数定数がlongである|\n\n####例\n\n```\n1000→int型で表現できる→int型\n60000→int型で表現できないがlong型で表現可能→long型\n60000U→unsigned型で表現可能→unsigned型\n```\n\n\n###文字列の読込\n\n||説明|\n|---|---|\n|cin|スペースを含まない|\n|getline(cin,変数名)|スペースを含む|\n###bool\nboolalpha操作子を使うと真偽値をアルファベットで表示\nnoboolalphaで数値で表示\n\n```c++\ncout << boolalpha;\ncout << noboolalpha;\n```\n###浮動小数点型\n小数点以下を持つ実数のことで型は\n\n- float\n- double\n- long double\n\nの3つがある\n\n####浮動小数点リテラル\n3.14などの実数を表す定数\n####浮動小数点接尾語\n|接尾語|説明|\n|---|---|\n|f,F|float型|\n|l,L|long double型|\n|接尾語がない|double型|\n\n###演算と型\n```\nint型+int型=int型\ndouble型+double型=double型\nint型+double型=double型\n```\nint型とdouble型混同では**暗黙の型変換**が起きている\n整数と浮動小数点の型変換には静的キャストが適している。\n\n###列挙体\n整数値の集まり\n\n##配列\n###定値オブジェクト\n配列の宣言時に大きさをconstが使えるということ\n",coediting:!1,comments_count:0,created_at:"2020-11-17T21:47:47+09:00",group:null,id:"6013f0f3746053ed6890",likes_count:0,private:!1,reactions_count:0,tags:[{name:"C++",versions:[]}],title:"C++入門 私的まとめ",updated_at:"2020-11-17T21:47:47+09:00",url:"https://qiita.com/yktk435/items/6013f0f3746053ed6890",user:{description:"ラズパイ、IoT、chrome拡張機能開発などなど",facebook_id:"",followees_count:1,followers_count:3,github_login_name:"yktk435",id:"yktk435",items_count:152,linkedin_id:"",location:"",name:"",organization:"",permanent_id:136271,profile_image_url:"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136271/profile-images/1586330549",team_only:!1,twitter_screen_name:"manhat_gold",website_url:""},page_views_count:null},{rendered_body:'<p>皆さんSytemVerilogでエディタのタグジャンプ用のTAGSを作るのはどのようにしているでしょうか? ctagsに正規表現でTAGのルールを定義したファイルを食わせて生成している方がほとんどではないでしょうか。Qiitaですと<a href="https://qiita.com/tethys_seesaa/items/6c2622d6e63607633493" id="reference-0c599f3d023ea5cc1457">ここ</a>に方法が書いてあります。WEB検索すると、SytemVerilogのTAGS生成方法でヒットするのはほとんどがこの方法です。</p>\n\n<p>ただ、この方法はワンラインの正規表現での定義なので構文解析に限界があります。目立つところでは<code>bit a, b;</code>のように一行に複数の変数が宣言された場合に対応できない、/*と*/ではさまれたコメントが複数行にわたる場合、そこもctagsに解釈されてしまうなどの問題があります。</p>\n\n<p>githubにはuniversal-ctagsというツールが登録されています。これはツールネイティブでSystemVerilogに対応しており、前記のctagsよりもはるかに多くの書式に対応しています。とても高機能なのに、SytemVerilogのTAGS生成ツールとしてはなぜかほとんど紹介されていないようです。現在でも活発にSystemVerilogへのサポートが拡充されていますので、是非皆さん使ってみてください。</p>\n\n<p>レポジトリは以下になります。<br>\n<a href="https://github.com/universal-ctags/ctags" class="autolink" rel="nofollow noopener" target="_blank">https://github.com/universal-ctags/ctags</a></p>\n\n<h1>\n<span id="コンパイルとインストールの方法" class="fragment"></span><a href="#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%AE%E6%96%B9%E6%B3%95"><i class="fa fa-link"></i></a>コンパイルとインストールの方法</h1>\n\n<p>特にstable releaseとかなさそうなので、HEADをコンパイルしてしまいましょう。</p>\n\n<div class="code-frame" data-lang="text"><div class="highlight"><pre>&gt; git clone  https://github.com/universal-ctags/ctags\n&gt; cd ctags\n&gt; ./autogen.sh\n&gt; ./configure --program-prefix=ex --prefix=$HOME/local #インストール先を$HOME/localに設定\n&gt; make\n&gt; make install\n</pre></div></div>\n\n<h1>\n<span id="unversal-ctagsの使い方" class="fragment"></span><a href="#unversal-ctags%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9"><i class="fa fa-link"></i></a>unversal-ctagsの使い方</h1>\n\n<p>上記の方法でインストールすると、~/local/binにexctagsというファイルができています。使用方法はctagsと全く同じです。TAGSを作りたいソースツリーの根本まで行き、vimの場合<code>exctags -R</code> emacsの場合<code>exctags -Re</code>となります。</p>\n',body:"皆さんSytemVerilogでエディタのタグジャンプ用のTAGSを作るのはどのようにしているでしょうか? ctagsに正規表現でTAGのルールを定義したファイルを食わせて生成している方がほとんどではないでしょうか。Qiitaですと[ここ](https://qiita.com/tethys_seesaa/items/6c2622d6e63607633493)に方法が書いてあります。WEB検索すると、SytemVerilogのTAGS生成方法でヒットするのはほとんどがこの方法です。\n\nただ、この方法はワンラインの正規表現での定義なので構文解析に限界があります。目立つところでは`bit a, b;`のように一行に複数の変数が宣言された場合に対応できない、/\\*と\\*/ではさまれたコメントが複数行にわたる場合、そこもctagsに解釈されてしまうなどの問題があります。\n\ngithubにはuniversal-ctagsというツールが登録されています。これはツールネイティブでSystemVerilogに対応しており、前記のctagsよりもはるかに多くの書式に対応しています。とても高機能なのに、SytemVerilogのTAGS生成ツールとしてはなぜかほとんど紹介されていないようです。現在でも活発にSystemVerilogへのサポートが拡充されていますので、是非皆さん使ってみてください。\n\nレポジトリは以下になります。\nhttps://github.com/universal-ctags/ctags\n\n# コンパイルとインストールの方法\n\n特にstable releaseとかなさそうなので、HEADをコンパイルしてしまいましょう。\n\n```\n> git clone  https://github.com/universal-ctags/ctags\n> cd ctags\n> ./autogen.sh\n> ./configure --program-prefix=ex --prefix=$HOME/local #インストール先を$HOME/localに設定\n> make\n> make install\n```\n\n# unversal-ctagsの使い方\n上記の方法でインストールすると、~/local/binにexctagsというファイルができています。使用方法はctagsと全く同じです。TAGSを作りたいソースツリーの根本まで行き、vimの場合`exctags -R` emacsの場合`exctags -Re`となります。\n\n\n\n\n\n\n\n",coediting:!1,comments_count:0,created_at:"2020-11-17T21:45:28+09:00",group:null,id:"e0c4cfc4b12e18a5095f",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Emacs",versions:[]},{name:"Vim",versions:[]},{name:"Verilog",versions:[]},{name:"SystemVerilog",versions:[]}],title:"universal-ctagsを使おう",updated_at:"2020-11-17T21:46:33+09:00",url:"https://qiita.com/triggerfish/items/e0c4cfc4b12e18a5095f",user:{description:"ASIC職人です。デザイナですが検証もやります。ネタとしては検証のほうが書きやすいので、そちらが記事のメインになると思います。入門記事よりはプロの方が実務で役に立つような記事を目指しています。内容に不明点がありましたら遠慮なく質問をお願いいたします!",facebook_id:"",followees_count:0,followers_count:9,github_login_name:null,id:"triggerfish",items_count:26,linkedin_id:"",location:"",name:"",organization:"",permanent_id:235449,profile_image_url:"https://qiita-image-store.s3.amazonaws.com/0/235449/profile-images/1534434027",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null},{rendered_body:'\n<h1>\n<span id="プログラミング勉強日記" class="fragment"></span><a href="#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E5%8B%89%E5%BC%B7%E6%97%A5%E8%A8%98"><i class="fa fa-link"></i></a>プログラミング勉強日記</h1>\n\n<p>2020年11月17日<br>\nコードを書いていて、<code>parseInt</code>と<code>valueOf</code>の違いがわからなかったので備忘録として残しておく。</p>\n\n<h1>\n<span id="違い" class="fragment"></span><a href="#%E9%81%95%E3%81%84"><i class="fa fa-link"></i></a>違い</h1>\n\n<p>　コードを実行したときに結果が同じになる。調べてみると<b>戻り値が違う</b>と出てきた。具体的には、<code>parseInt</code>がint型やchar型などのプリミティブ型で<code>valueOf</code>はIntegerクラスを返す。</p>\n\n<div class="code-frame" data-lang="java"><div class="highlight"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>\n    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>\n        <span class="kt">int</span> <span class="n">hoge</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="s">"12345"</span><span class="o">);</span>\n        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hoge</span><span class="o">);</span>\n\n        <span class="kt">int</span> <span class="n">fuga</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="s">"12345"</span><span class="o">);</span>\n        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">fuga</span><span class="o">);</span>\n    <span class="o">}</span>\n<span class="o">}</span>\n</pre></div></div>\n\n<div class="code-frame" data-lang="">\n<div class="code-lang"><span class="bold">実行結果</span></div>\n<div class="highlight"><pre>12345\n12345\n</pre></div>\n</div>\n\n<h1>\n<span id="参考文献" class="fragment"></span><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE"><i class="fa fa-link"></i></a>参考文献</h1>\n\n<p><a href="http://welovy.hatenablog.com/entry/2013/04/28/121057" rel="nofollow noopener" target="_blank">parseIntとvalueOfの違い</a><br>\n<a href="https://tomoprog.hatenablog.com/entry/2016/02/03/182803" rel="nofollow noopener" target="_blank">parseIntとvalueOfの違いって何！？</a></p>\n',body:'#プログラミング勉強日記\n2020年11月17日\nコードを書いていて、`parseInt`と`valueOf`の違いがわからなかったので備忘録として残しておく。\n\n#違い\n　コードを実行したときに結果が同じになる。調べてみると<b>戻り値が違う</b>と出てきた。具体的には、`parseInt`がint型やchar型などのプリミティブ型で`valueOf`はIntegerクラスを返す。\n\n```java\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        int hoge = Integer.valueOf("12345");\n        System.out.println(hoge);\n        \n        int fuga = Integer.parseInt("12345");\n        System.out.println(fuga);\n    }\n}\n```\n\n```:実行結果\n12345\n12345\n```\n\n\n\n\n#参考文献\n[parseIntとvalueOfの違い](http://welovy.hatenablog.com/entry/2013/04/28/121057)\n[parseIntとvalueOfの違いって何！？](https://tomoprog.hatenablog.com/entry/2016/02/03/182803)\n',coediting:!1,comments_count:0,created_at:"2020-11-17T21:44:41+09:00",group:null,id:"7c9fc853c5fabed1dfb4",likes_count:0,private:!1,reactions_count:0,tags:[{name:"Java",versions:[]},{name:"初心者",versions:[]},{name:"valueOf",versions:[]},{name:"parseInt",versions:[]},{name:"プログラミング勉強日記",versions:[]}],title:"【Java】parseIntとvalueOfの違い",updated_at:"2020-11-17T21:44:41+09:00",url:"https://qiita.com/mzmz__02/items/7c9fc853c5fabed1dfb4",user:{description:"2020年5月から毎日投稿しています。\r\nフロントエンドエンジニアを目指し、独学で勉強中です。\r\n大学3年生で現在就職活動中です。",facebook_id:"mai.kamihori",followees_count:1,followers_count:42,github_login_name:"mzmz02",id:"mzmz__02",items_count:190,linkedin_id:"",location:"",name:"Mai",organization:"",permanent_id:642821,profile_image_url:"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/642821/9da7e80e79595c8e3b4abee6b0d02eae3a0ce5e8/large.png?1602584550",team_only:!1,twitter_screen_name:"mai74747304",website_url:"https://www.instagram.com/bb___m13"},page_views_count:null},{rendered_body:'\n<h2>\n<span id="google-driveの画像をどうしてもgoogle-chatに投稿したかった" class="fragment"></span><a href="#google-drive%E3%81%AE%E7%94%BB%E5%83%8F%E3%82%92%E3%81%A9%E3%81%86%E3%81%97%E3%81%A6%E3%82%82google-chat%E3%81%AB%E6%8A%95%E7%A8%BF%E3%81%97%E3%81%9F%E3%81%8B%E3%81%A3%E3%81%9F"><i class="fa fa-link"></i></a>Google Driveの画像をどうしてもGoogle Chatに投稿したかった</h2>\n\n<p>Google Apps Script で、SpreadSheet を読み込んで、そこに書かれたテキストや Google Drive に格納された画像ファイルをいい感じにまとめて Google Chat にポストしたかった。<br>\n全部 Google だし、楽勝だろうと思っていたが、Google Drive の画像がなかなか表示できなかった。</p>\n\n<p>ググると、Share URL にパラメータをつければ見れる！みたいなことがそこらじゅうに書いてあったが、どれもうまく行かなかった。たぶん、かつてはうまく行っていたんだろうと思う。<br>\nそこで、まずは素直に DriveApp を使ってみた。</p>\n\n<blockquote>\n<p><a href="https://developers.google.com/apps-script/reference/drive/file" rel="nofollow noopener" target="_blank">Class File</a></p>\n</blockquote>\n\n<p>が、DriveApp で取得できる URL は、そのままでは Chat ではうまく表示できない URL（getUrl メソッド）か、ダウンロードが始まる URL（getDownloadUrl メソッド）だけで、欲しいものではなかった。</p>\n\n<p>最終的に、Google Drive API v3 を利用して、サムネイル画像をなんとか引っ張ってきて表示することができた。サムネイルだけなのは、AWS S3 みたいに画像ストレージとしては使えないよってことなんだろうと理解した。</p>\n\n<p>この記事は「サムネイルじゃダメなんだ！」という方の参考にはならない。</p>\n\n<h2>\n<span id="手っ取り早く1つのファイルのリンクだけ取得する" class="fragment"></span><a href="#%E6%89%8B%E3%81%A3%E5%8F%96%E3%82%8A%E6%97%A9%E3%81%8F1%E3%81%A4%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%A0%E3%81%91%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B"><i class="fa fa-link"></i></a>手っ取り早く1つのファイルのリンクだけ取得する</h2>\n\n<p>1つだけ分かれば良いという人は、ここ(<a href="https://developers.google.com/apps-script/reference/drive/file" rel="nofollow noopener" target="_blank">Files: get</a>)に行って、fields に thumbnailLink と入れて実行すれば良い。</p>\n\n<p><a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F245908%2Ffad93a1b-f737-fea9-2751-fcb2a74fdf13.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f76316c974d072b4349c3e737daae214" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F245908%2Ffad93a1b-f737-fea9-2751-fcb2a74fdf13.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f76316c974d072b4349c3e737daae214" width="400" alt="Try this API" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/245908/fad93a1b-f737-fea9-2751-fcb2a74fdf13.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F245908%2Ffad93a1b-f737-fea9-2751-fcb2a74fdf13.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=50537f359dccc4ffd96a0cfd0492cb06 1x" loading="lazy"></a></p>\n\n<p>その他の値は、ここ（<a href="https://developers.google.com/drive/api/v3/reference/files" rel="nofollow noopener" target="_blank">Files</a>）に、どんなものが返ってくるか書いてあるので、それを参考に。</p>\n\n<h2>\n<span id="google-drive-api" class="fragment"></span><a href="#google-drive-api"><i class="fa fa-link"></i></a>Google Drive API</h2>\n\n<p>まずは、Google Drive API を使えるようにする。<br>\n最初に、Google Apps Script の Editor のメニューで、Resources &gt; Advanced Google Serviceにて、Drive API を On にする。<br>\n次に、Token を取得する。</p>\n\n<blockquote>\n<p><a href="https://qiita.com/iwaseasahi/items/2363dc1d246bc06baeae" id="reference-354acf416b7a599cc0af">Google API OAuth2.0のアクセストークン&amp;リフレッシュトークン取得手順 2017年2月版</a></p>\n</blockquote>\n\n<p>3年前の記事で、画面が色々と変わっていたが、だいたいこの手順でできた。</p>\n\n<div class="code-frame" data-lang="json"><div class="highlight"><pre><span class="p">{</span><span class="w">\n  </span><span class="nl">"access_token"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ya29.A0A..."</span><span class="p">,</span><span class="w">\n  </span><span class="nl">"expires_in"</span><span class="p">:</span><span class="w"> </span><span class="mi">3599</span><span class="p">,</span><span class="w">\n  </span><span class="nl">"refresh_token"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1//0e5..."</span><span class="p">,</span><span class="w">\n  </span><span class="nl">"scope"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://www.googleapis.com/auth/drive"</span><span class="p">,</span><span class="w">\n  </span><span class="nl">"token_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Bearer"</span><span class="w">\n</span><span class="p">}</span><span class="err">%</span><span class="w">\n</span></pre></div></div>\n\n<p>こんなようなものが返ってくる。割とすぐ Expire しちゃうので、アプリケーション内で使う場合は、リフレッシュする仕組みも実装しておかないといけない。<br>\nrefresh_token はどれくらいで Expire するのか分からないが、6ヶ月くらいらしい。</p>\n\n<blockquote>\n<p><a href="https://qiita.com/yosshi4486/items/7ec5fdd53577c8663603" id="reference-a22442f3ac31a2b1af71">アプリで「ログインしっぱなし」はどのように実現されているか？</a></p>\n</blockquote>\n\n<p>ここにあるように、refresh_token も毎回取り替えるのが良いようだ。Google Apps Script だと…と悩ましいところではあるが、まぁ美しくなくてもなんとかなるだろう。今回は省略。</p>\n\n<h2>\n<span id="google-apps-script" class="fragment"></span><a href="#google-apps-script"><i class="fa fa-link"></i></a>Google Apps Script</h2>\n\n<div class="code-frame" data-lang="javascript"><div class="highlight"><pre><span class="kd">function</span> <span class="nx">getDriveImageUrlById</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>\n  <span class="kd">const</span> <span class="nx">accesstoken</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">ya29.A0A...</span><span class="dl">"</span><span class="p">;</span>\n  <span class="kd">const</span> <span class="nx">fetchUrl</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">https://www.googleapis.com/drive/v3/files/</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">id</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">?fields=thumbnailLink</span><span class="dl">"</span><span class="p">;</span>\n  <span class="kd">const</span> <span class="nx">option</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="dl">"</span><span class="s2">method</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">GET</span><span class="dl">"</span><span class="p">,</span>\n    <span class="dl">"</span><span class="s2">headers</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>\n      <span class="dl">"</span><span class="s2">Authorization</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Bearer </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">accesstoken</span><span class="p">,</span>\n      <span class="dl">"</span><span class="s2">Accept</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/json</span><span class="dl">"</span><span class="p">,</span>\n    <span class="p">}</span>\n  <span class="p">}</span>\n  <span class="kd">var</span> <span class="nx">response</span> <span class="o">=</span> <span class="nx">UrlFetchApp</span><span class="p">.</span><span class="nx">fetch</span><span class="p">(</span><span class="nx">fetchUrl</span><span class="p">,</span> <span class="nx">option</span><span class="p">);</span>\n  <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>\n  <span class="k">return</span> <span class="nx">result</span><span class="p">[</span><span class="dl">"</span><span class="s2">thumbnailLink</span><span class="dl">"</span><span class="p">];</span>\n<span class="p">}</span>\n</pre></div></div>\n\n<p>Token の取り替えは一旦忘れると、こんな感じにすればサムネイルの URL が取れる。<br>\nOption は、前述の Try this API を実行すると出てくる curl コマンドの例で、API key を無視したものになっている。他の言語でも同様のことをすれば良い。</p>\n\n<p>Google Drive API の戻り値は、</p>\n\n<div class="code-frame" data-lang="json"><div class="highlight"><pre><span class="p">{</span><span class="w">\n  </span><span class="nl">"thumbnailLink"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://..."</span><span class="w">\n</span><span class="p">}</span><span class="w">\n</span></pre></div></div>\n\n<p>という感じで、Object で返ってくるので、そのままプロパティにアクセスできるかと思ったが、parse しないとアクセスできなかった。なんか、このあたりの扱いはいまいち良く分かっていない。</p>\n\n<p>ともあれ、サムネイルの URL が取得できたので、Cards のフォーマットに整形する。</p>\n\n<blockquote>\n<p><a href="https://developers.google.com/hangouts/chat/reference/message-formats/cards" rel="nofollow noopener" target="_blank">Card Formatting Messages</a></p>\n</blockquote>\n\n<p>フォーマットはここを見ながら。</p>\n\n<div class="code-frame" data-lang="javascript"><div class="highlight"><pre><span class="kd">function</span> <span class="nx">getCard</span><span class="p">(</span><span class="nx">title</span><span class="p">,</span> <span class="nx">image</span><span class="p">,</span> <span class="nx">text</span><span class="p">)</span> <span class="p">{</span>\n  <span class="k">return</span> <span class="p">{</span>\n    <span class="dl">"</span><span class="s2">cards</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>\n      <span class="p">{</span>\n        <span class="dl">"</span><span class="s2">header</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>\n          <span class="dl">"</span><span class="s2">title</span><span class="dl">"</span><span class="p">:</span> <span class="nx">title</span><span class="p">,</span>\n          <span class="dl">"</span><span class="s2">subtitle</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Holiday Knowledge Sharing</span><span class="dl">"</span><span class="p">,</span>\n          <span class="dl">"</span><span class="s2">imageUrl</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">https://....</span><span class="dl">"</span><span class="p">,</span>\n          <span class="dl">"</span><span class="s2">imageStyle</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">IMAGE</span><span class="dl">"</span>\n        <span class="p">},</span>\n        <span class="dl">"</span><span class="s2">sections</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>\n          <span class="p">{</span>\n            <span class="dl">"</span><span class="s2">widgets</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>\n              <span class="p">{</span>\n                <span class="dl">"</span><span class="s2">image</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>\n                  <span class="dl">"</span><span class="s2">imageUrl</span><span class="dl">"</span><span class="p">:</span> <span class="nx">image</span>\n                <span class="p">}</span>\n              <span class="p">}</span>\n            <span class="p">]</span>\n          <span class="p">},</span>\n          <span class="p">{</span>\n            <span class="dl">"</span><span class="s2">widgets</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>\n              <span class="p">{</span>\n                <span class="dl">"</span><span class="s2">textParagraph</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>\n                  <span class="dl">"</span><span class="s2">text</span><span class="dl">"</span><span class="p">:</span> <span class="nx">text</span>\n                <span class="p">}</span>\n              <span class="p">}</span>\n            <span class="p">]</span>\n          <span class="p">}</span>\n        <span class="p">]</span>\n      <span class="p">}</span>\n    <span class="p">]</span>\n  <span class="p">}</span>\n<span class="p">}</span>\n</pre></div></div>\n\n<h2>\n<span id="結果と余談" class="fragment"></span><a href="#%E7%B5%90%E6%9E%9C%E3%81%A8%E4%BD%99%E8%AB%87"><i class="fa fa-link"></i></a>結果と余談</h2>\n\n<p>上記の実行結果ではないが、結果として、こんなようなものが Google Chat にポストされる。<br>\n<a href="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F245908%2F041f8942-c825-ba5d-1bc8-7f914cf4abfd.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=eb9add7d6e31f54b0d471456c74937d1" target="_blank" rel="nofollow noopener"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F245908%2F041f8942-c825-ba5d-1bc8-7f914cf4abfd.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=eb9add7d6e31f54b0d471456c74937d1" width="400" alt="Card" data-canonical-src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/245908/041f8942-c825-ba5d-1bc8-7f914cf4abfd.png" srcset="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F245908%2F041f8942-c825-ba5d-1bc8-7f914cf4abfd.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=4c716f90f6012ae07df18033b2877f60 1x" loading="lazy"></a><br>\n今回の内容は、私の会社は、日本とベトナムにオフィスがあり、お互いの国の祝日の情報をシェアしようという企画で作った。</p>\n\n<p>Globalization の流れの中、大事だと思うのは言葉、ではなく、やはりカルチャーの相互理解である。言葉が理解出来ても、コンテキストおよびそのコンテキストが成立し得る背景が分からないと、全然何いってるのか分からないということは、しょっちゅうある。なので、こういうのは割と効く。</p>\n\n<p>おしまい。</p>\n',body:'## Google Driveの画像をどうしてもGoogle Chatに投稿したかった\n\nGoogle Apps Script で、SpreadSheet を読み込んで、そこに書かれたテキストや Google Drive に格納された画像ファイルをいい感じにまとめて Google Chat にポストしたかった。\n全部 Google だし、楽勝だろうと思っていたが、Google Drive の画像がなかなか表示できなかった。\n\nググると、Share URL にパラメータをつければ見れる！みたいなことがそこらじゅうに書いてあったが、どれもうまく行かなかった。たぶん、かつてはうまく行っていたんだろうと思う。\nそこで、まずは素直に DriveApp を使ってみた。\n\n> [Class File](https://developers.google.com/apps-script/reference/drive/file)\n\nが、DriveApp で取得できる URL は、そのままでは Chat ではうまく表示できない URL（getUrl メソッド）か、ダウンロードが始まる URL（getDownloadUrl メソッド）だけで、欲しいものではなかった。\n\n最終的に、Google Drive API v3 を利用して、サムネイル画像をなんとか引っ張ってきて表示することができた。サムネイルだけなのは、AWS S3 みたいに画像ストレージとしては使えないよってことなんだろうと理解した。\n\nこの記事は「サムネイルじゃダメなんだ！」という方の参考にはならない。\n\n## 手っ取り早く1つのファイルのリンクだけ取得する\n\n1つだけ分かれば良いという人は、ここ([Files: get](https://developers.google.com/apps-script/reference/drive/file))に行って、fields に thumbnailLink と入れて実行すれば良い。\n\n<img src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/245908/fad93a1b-f737-fea9-2751-fcb2a74fdf13.png" width="400" alt="Try this API">\n\nその他の値は、ここ（[Files](https://developers.google.com/drive/api/v3/reference/files)）に、どんなものが返ってくるか書いてあるので、それを参考に。\n\n\n\n## Google Drive API\n\nまずは、Google Drive API を使えるようにする。\n最初に、Google Apps Script の Editor のメニューで、Resources > Advanced Google Serviceにて、Drive API を On にする。\n次に、Token を取得する。\n\n> [Google API OAuth2.0のアクセストークン&リフレッシュトークン取得手順 2017年2月版](https://qiita.com/iwaseasahi/items/2363dc1d246bc06baeae)\n\n3年前の記事で、画面が色々と変わっていたが、だいたいこの手順でできた。\n\n```json\n{\n  "access_token": "ya29.A0A...",\n  "expires_in": 3599,\n  "refresh_token": "1//0e5...",\n  "scope": "https://www.googleapis.com/auth/drive",\n  "token_type": "Bearer"\n}%\n```\n\nこんなようなものが返ってくる。割とすぐ Expire しちゃうので、アプリケーション内で使う場合は、リフレッシュする仕組みも実装しておかないといけない。\nrefresh_token はどれくらいで Expire するのか分からないが、6ヶ月くらいらしい。\n\n> [アプリで「ログインしっぱなし」はどのように実現されているか？](https://qiita.com/yosshi4486/items/7ec5fdd53577c8663603)\n\nここにあるように、refresh_token も毎回取り替えるのが良いようだ。Google Apps Script だと…と悩ましいところではあるが、まぁ美しくなくてもなんとかなるだろう。今回は省略。\n\n\n## Google Apps Script\n\n```javascript\nfunction getDriveImageUrlById(id) {\n  const accesstoken = "ya29.A0A...";\n  const fetchUrl = "https://www.googleapis.com/drive/v3/files/" + id + "?fields=thumbnailLink";\n  const option = {\n    "method": "GET",\n    "headers": {\n      "Authorization": "Bearer " + accesstoken,\n      "Accept": "application/json",\n    }\n  }\n  var response = UrlFetchApp.fetch(fetchUrl, option);\n  var result = JSON.parse(response);\n  return result["thumbnailLink"];\n}\n```\n\nToken の取り替えは一旦忘れると、こんな感じにすればサムネイルの URL が取れる。\nOption は、前述の Try this API を実行すると出てくる curl コマンドの例で、API key を無視したものになっている。他の言語でも同様のことをすれば良い。\n\nGoogle Drive API の戻り値は、\n\n```json\n{\n  "thumbnailLink": "https://..."\n}\n```\n\nという感じで、Object で返ってくるので、そのままプロパティにアクセスできるかと思ったが、parse しないとアクセスできなかった。なんか、このあたりの扱いはいまいち良く分かっていない。\n\nともあれ、サムネイルの URL が取得できたので、Cards のフォーマットに整形する。\n\n> [Card Formatting Messages](https://developers.google.com/hangouts/chat/reference/message-formats/cards)\n\nフォーマットはここを見ながら。\n\n```javascript\nfunction getCard(title, image, text) {\n  return {\n    "cards": [\n      {\n        "header": {\n          "title": title,\n          "subtitle": "Holiday Knowledge Sharing",\n          "imageUrl": "https://....",\n          "imageStyle": "IMAGE"\n        },\n        "sections": [\n          {\n            "widgets": [\n              {\n                "image": {\n                  "imageUrl": image\n                }\n              }\n            ]\n          },\n          {\n            "widgets": [\n              {\n                "textParagraph": {\n                  "text": text\n                }\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n## 結果と余談\n\n上記の実行結果ではないが、結果として、こんなようなものが Google Chat にポストされる。\n<img src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/245908/041f8942-c825-ba5d-1bc8-7f914cf4abfd.png" width="400" alt="Card">\n今回の内容は、私の会社は、日本とベトナムにオフィスがあり、お互いの国の祝日の情報をシェアしようという企画で作った。\n\nGlobalization の流れの中、大事だと思うのは言葉、ではなく、やはりカルチャーの相互理解である。言葉が理解出来ても、コンテキストおよびそのコンテキストが成立し得る背景が分からないと、全然何いってるのか分からないということは、しょっちゅうある。なので、こういうのは割と効く。\n\nおしまい。\n',coediting:!1,comments_count:0,created_at:"2020-11-17T21:42:14+09:00",group:null,id:"9c692e26d689bee3e093",likes_count:0,private:!1,reactions_count:0,tags:[{name:"GoogleAppsScript",versions:[]},{name:"GoogleDriveAPI",versions:[]},{name:"HangoutsChat",versions:[]},{name:"GoogleChat",versions:[]}],title:"Google Drive上の画像（のサムネイル）URLを取得する方法",updated_at:"2020-11-17T21:42:14+09:00",url:"https://qiita.com/kurab/items/9c692e26d689bee3e093",user:{description:"最近はコードはあんまり書きません。",facebook_id:"",followees_count:1,followers_count:4,github_login_name:"kurab",id:"kurab",items_count:28,linkedin_id:"hiroshi-kurabayashi-b0359924/",location:"Tokyo",name:"倉林 寛至",organization:"",permanent_id:245908,profile_image_url:"https://avatars2.githubusercontent.com/u/9692738?v=4",team_only:!1,twitter_screen_name:null,website_url:""},page_views_count:null}];
},{}],"TC2m":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=require("markdown");const t=require("./list.json");function i(){return new Promise(e=>setTimeout(()=>e({json:()=>t}),2e3))}var r={beforeMount(){this.fetchList()},data:()=>({loading:!1,list:[]}),methods:{async fetchList(){this.loading=!0;const t=await i("http://qiita.com/api/v2/items?page=1&per_page=20"),r=await t.json();this.loading=!1,this.list=r.map(t=>(console.log(t.name),{title:t.title,abstract:s(e.markdown.parse(t.body)).slice(0,200),body:t.rendered_body,userName:t.user.name||t.user.id||t.user.github_login_name}))}}};function s(e){if("string"==typeof e)return e;switch(e[0]){case"header":case"link":return e.slice(2).map(e=>s(e)).join("");case"link_ref":return"<LinkRef>";case"img":return"<Image>";case"markdown":return e.slice(1).map(e=>s(e)).join(" ");default:return e.slice(1).map(e=>s(e)).join("")}}exports.default=r;
(function(){var t=exports.default||module.exports;"function"==typeof t&&(t=t.options),Object.assign(t,{render:function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",[t._m(0),t._v(" "),i("main",[i("div",{staticStyle:{display:"flex","justify-content":"center"}},[t.loading?i("img",{staticStyle:{width:"120px"},attrs:{src:"https://lh3.googleusercontent.com/proxy/DqyXiV4iIzAH9s5SPo2IHeU-y1VqtSV8RpFz4TaT2av0OPL2ufRZr-YTPbVtuimo39ZIfO4h8xTWKGb9X8n_XfVRdRpW1Z3Qadmz9RJ88r1961d3cD-4FSA726VQQ42oI3dgVPAk6yAmWtLa3qC3d4VqzBgWG-ykRZZGPA"}}):t._e()]),t._v(" "),t.loading?t._e():i("section",t._l(t.list,function(e){return i("aside",{key:e.id},[i("h3",[t._v(t._s(e.title))]),t._v(" "),i("sup",[t._v(t._s(e.userName))]),t._v(" "),i("p",{staticStyle:{display:"-webkit-box","-webkit-line-clamp":"4","-webkit-box-orient":"vertical",overflow:"hidden","word-break":"break-all"}},[t._v(t._s(e.abstract))])])}),0)]),t._v(" "),t._m(1)])},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("header",[e("h1",[this._v("Qiita list")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("footer",[e("p",[this._v("Powered by "),e("a",{attrs:{href:"https://qiita.com/"}},[this._v("Qiita")])])])}],_compiled:!0,_scopeId:null,functional:void 0});})();
},{"markdown":"FmXw","./list.json":"AHs7"}],"Focm":[function(require,module,exports) {
"use strict";var e=t(require("vue")),n=t(require("./components/App"));function t(e){return e&&e.__esModule?e:{default:e}}class o extends HTMLElement{constructor(){super(),this.div=document.createElement("div"),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n    <style>\n    @import \'https://unpkg.com/mvp.css\';\n    * {\n      --border-radius: 5px;\n      --box-shadow: 2px 2px 10px;\n      --color: #118bee;\n      --color-accent: #118bee0b;\n      --color-bg: #fff;\n      --color-bg-secondary: #e9e9e9;\n      --color-secondary: #920de9;\n      --color-secondary-accent: #920de90b;\n      --color-shadow: #f4f4f4;\n      --color-text: #000;\n      --color-text-secondary: #999;\n      --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;\n      --hover-brightness: 1.2;\n      --justify-important: center;\n      --justify-normal: left;\n      --line-height: 150%;\n      --width-card: 285px;\n      --width-card-medium: 460px;\n      --width-card-wide: 800px;\n      --width-content: 1080px;\n    }\n    </style>',this.shadowRoot.append(this.div)}connectedCallback(){new e.default(n.default).$mount(this.div)}}customElements.define("qiita-list",o);
},{"vue":"NtAQ","./components/App":"TC2m"}]},{},["Focm"], null)
//# sourceMappingURL=/index.js.map