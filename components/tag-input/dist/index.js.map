{
  "version": 3,
  "sources": ["../node_modules/preact/src/constants.js", "../node_modules/preact/src/options.js", "../node_modules/preact/src/create-element.js", "../node_modules/preact/src/component.js", "../node_modules/preact/src/create-context.js", "../node_modules/preact/src/util.js", "../node_modules/preact/src/diff/children.js", "../node_modules/preact/src/diff/props.js", "../node_modules/preact/src/diff/index.js", "../node_modules/preact/src/render.js", "../node_modules/preact/src/clone-element.js", "../node_modules/preact/src/diff/catch-error.js", "../node_modules/preact/hooks/src/index.js", "../node_modules/preact/compat/src/util.js", "../node_modules/preact/compat/src/PureComponent.js", "../node_modules/preact/compat/src/memo.js", "../node_modules/preact/compat/src/forwardRef.js", "../node_modules/preact/compat/src/Children.js", "../node_modules/preact/compat/src/suspense.js", "../node_modules/preact/compat/src/suspense-list.js", "../node_modules/preact/compat/src/portals.js", "../node_modules/preact/compat/src/render.js", "../node_modules/preact/compat/src/scheduler.js", "../node_modules/preact/compat/src/index.js", "../index.jsx"],
  "sourcesContent": ["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n", "import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren =\n\t\t\texcessDomChildren && EMPTY_ARR.slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tdom.firstChild,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\t// We always have ref in props.ref, except for\n\t// mobx-react. It will call this function directly\n\t// and always pass ref as the second argument.\n\tfunction Forwarded(props, ref) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\tref = props.ref || ref;\n\t\treturn fn(\n\t\t\tclone,\n\t\t\t!ref || (typeof ref === 'object' && !('current' in ref)) ? null : ref\n\t\t);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function() {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\treturn createElement(Portal, { _vnode: vnode, _container: container });\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\t}\n\n\tif (type && props.class != props.className) {\n\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n", "// This file includes experimental React APIs exported from the \"scheduler\"\n// npm package. Despite being explicitely marked as unstable some libraries\n// already make use of them. This file is not a full replacement for the\n// scheduler package, but includes the necessary shims to make those libraries\n// work with Preact.\n\nexport const unstable_ImmediatePriority = 1;\nexport const unstable_UserBlockingPriority = 2;\nexport const unstable_NormalPriority = 3;\nexport const unstable_LowPriority = 4;\nexport const unstable_IdlePriority = 5;\n\n/**\n * @param {number} priority\n * @param {() => void} callback\n */\nexport function unstable_runWithPriority(priority, callback) {\n\treturn callback();\n}\n\nexport const unstable_now =\n\ttypeof performance === 'object' && typeof performance.now === 'function'\n\t\t? performance.now.bind(performance)\n\t\t: () => Date.now();\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\nexport * from './scheduler';\n\nconst version = '16.8.0'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "const React = require(\"preact/compat\");\nconst { render, useState } = React;\n\nconst TagInput = ({ onComplete }) => {\n  const [tags, setTags] = useState([]);\n  const [currentTag, setCurrentTag] = useState(\"\");\n  function onCompleteTag() {\n    const newTags = [...tags, currentTag];\n    setTags(newTags);\n    setCurrentTag(\"\");\n    onComplete(newTags);\n  }\n  return (\n    <>\n    <span style={{ border: \"1px solid #000\", display: \"inline-block\", fontSize: 14 }}>\n      {tags.map((it, i) =>\n        <>\n          <span style={{ backgroundColor: \"#f0f0f0\", borderRadius: 4, border: \"1px solid #888\" }} key={i}>\n            {it}\n          </span>,\n        </>\n      )}\n      <input\n        style={{ border: \"none\", height: \"100%\", outline: \"none\", fontSize: 14 }}\n        value={currentTag}\n        onKeyPress={e => (e.key === \"Enter\") && onCompleteTag()}\n        onChange={e => setCurrentTag(e.target.value)}\n      />\n    </span>\n    </>\n  );\n};\n\nclass TagInputElement extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n  }\n\n  onComplete(tags) {\n    const event = new CustomEvent(\"completeTag\", {\n      bubbles: true,\n      composed: true,\n      detail: { tags },\n    });\n    this.dispatchEvent(event);\n  }\n\n  connectedCallback() {\n    render(<TagInput onComplete={this.onComplete.bind(this)} />, this.shadowRoot);\n  }\n}\n\ncustomElements.define(\"tag-input\", TagInputElement);\n"],
  "mappings": "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",
  "names": []
}
